(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1260954,      24402]
NotebookOptionsPosition[   1257928,      24311]
NotebookOutlinePosition[   1258271,      24326]
CellTagsIndexPosition[   1258228,      24323]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "import \"http://exampledata.wolfram.com/coneflower.jpg\"", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Input", "Input interpretation", 1, 1, "Input", 
        "Import[\"http://exampledata.wolfram.com/coneflower.jpg\", \
\"JPEG\"]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "MInput", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Import[\"http://exampledata.wolfram.com/coneflower.jpg\", \
\"JPEG\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"Import", "[", 
                RowBox[{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    "\"http://exampledata.wolfram.com/coneflower.jpg\"", 
                    SpanMaxSize -> Automatic, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"file\"", ShowStringCharacters -> False, StripOnInput -> 
                    False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], {FontSize -> 11}, 
                    ShowStringCharacters -> False, StripOnInput -> False]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> 1], "Grid"], ",", 
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    "\"JPEG\"", SpanMaxSize -> Automatic, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"format\"", ShowStringCharacters -> False, StripOnInput -> 
                    False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], {FontSize -> 11}, 
                    ShowStringCharacters -> False, StripOnInput -> False]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> 1], "Grid"]}], "]"}], 
              ShowStringCharacters -> True, SpanMaxSize -> 1], 
             ReplaceAll[
              Import["http://exampledata.wolfram.com/coneflower.jpg", "JPEG"],
               Labeled -> First], Editable -> False, Selectable -> False], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/mathematica/ref/Import.html",
            "text" -> "Mathematica definition of Import"}, {}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Example", "scanner" -> "MInput", "id" -> "Example", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Import[\"http://exampledata.wolfram.com/coneflower.jpg\", \
\"JPEG\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"In[1]:=\"", {FontSize -> 8, FontColor -> GrayLevel[0.35]}], 
                StyleBox[
                 StyleBox[
                  RowBox[{"Import", "[", 
                    
                    RowBox[{
                    "\"http://exampledata.wolfram.com/coneflower.jpg\"", ",", 
                    "\"JPEG\""}], "]"}], ShowStringCharacters -> True], {
                 FontSize -> 11}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Right}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "", "timing" -> "0.741", "parsetiming" -> "0.487", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP34019hci34i2d6f62i000001c7fg2449697gcai&s=59", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP34119hci34i2d6f62i000005hcei3d48ii964g2&s=59", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 10, 55, 18.7779062`9.0262221053917}, "Line" -> 7,
     "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Input", "Input interpretation", 1, 1, "Input", 
    "Import[\"http://exampledata.wolfram.com/coneflower.jpg\", \"JPEG\"]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = 
   "import \"http://exampledata.wolfram.com/coneflower.jpg\""}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{478., {50., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
+Yem575zbj+fc9+r7vHjGZf/HLX67i/D3X/ofPub3u7fDH/8x/oP/eDjdqnq
ART7nPSgHrzfkyCfOT/ThTjz2QTDV4G/z3pung9BfUxG3U3Z3opXKwnf06Ot
ANth4cSNYjc0nI2DulWhPnlp+y8ihipcgoHasHCX/HyZ8lMmbo6CfZaCKg/H
hbigtMzQXnryL+2UYCoWzscBWLNNlYEUyXeR0zirpKehxrJTstWSO/nv5pIA
+fpQTIftFo7NDmdzeYql0lyAQlOA8lGNHWZm2x97qDxy2Rhir5IbiOqLx9mZ
bHExVWmPxNaHY60tlUjeuPFU1Ei4iq6GmonlluJEpTeucs9+31Rup8qNVHru
qjB+GNksh7eT87XG+LmiSwLRT6JR8/Go2ShMvb2c7XE5hwO4Ohf5majtL0O+
+2gr1/InOlRre6r+DxkapzKP/VPtaX2rufRBc/HoaHP3k5Hs7lwgVBgdJKBe
AEnS2wjkhmhyQwxwENl9NFDmAKYg73iDObxBLqJheqkFF3n9t/qePn7x8eln
wXOh6Ilo7TlfOLMm/CKxwJ+wS1QHesYs/oRGwF9nPP4XU18B1FYXdXuuxINr
3aAFWoq7BAkEd4K7u7u7Q4GipUILlLq7e6lBFSktFNpS6rjnvpt+///ey5xh
bjIhk8m6287Za+2tep4yRr5ShgFSBr4bdH3XMvw36fhsUWPjprdmu/lmdUdp
0xB1p3Rj9zwLryJTtxJT1yJjzxKDkFz9rCSN+kj5E1HK1xK1jofuPOGvcMVN
8mHCltPpfCWBINd9fZuH5PNAMJ0DFgugvxVgrp6yfGz96yJw1Bfgad5cNXha
DRXFQLEB4KwHtduc57QXr7c5WVmb5mhEOh4EX08A+W6gy5x/1ow+XS6U701N
MhT6yFr7PETI3lCQZSQSbkJ9Zy78LYInmk1ztFpdF0Ut8CeYsAQc7UU74qhH
YmArS7qNBT3TgW6rz6POEAm0puyx4wk04DUzoeEgujmL6JnyF0VSRmvg5Wx4
1Al+kEycrEU4SfCoCeFkAOl+IqnHkPeojnCKDXTMCzS5Q3hSmhpJrXdF+1PR
5TLw0wT06oq0WogU2CiU25scjbeqVhI7qst3R49yVRY+uQ602Rs0VuaWHMVL
+NyKMwWVZ4oqTuYVHskq7MgoPYYX7IU1l0uqLxVWXy7bda1y99XqPdf3nn10
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
lyfNxJSvLE6g2mGNlga/uq6grDpvTRj80IZYrCDEZJKrQ6GH/tA+JYLyVvpG
RWoiG3mdiUMGerXRagWKiRbqpktMsYQbbaEKeyiaDUfao/5GaIoPdDYdflUA
DcZD731J/X5rihnkEqvNe8JCCkws8w1ZQerr6/OcO+oLC2ws8p2ti4OUi9Os
i/Odkgtc3DNsrOJYVlF6DjH6HlmWEbW+uR2JVafzdl+t3XtrX+PVprzOjMyD
8TmdaWVnSstPVRV15Gc3pWVWJGbnJ5RXZO1rr535uYLDN487z+8c3JHiYfHv
u6WJV0t/exb+dM//eDr9q2vm56PJH49+/ej6Of7o+4/H43+7f068/T39fmJy
cGK6789s39+FTwvznzjj90dxS/xw+vnThpOPytov5dfVerIrzdd3OCu2W244
6837qnxdd8PW40FrbyjwzIWuXt4vtHKGZ6qG7489cTGTOruHd7gUnIuHX+rS
MBYF20UdKwC7vABbj+ijiWRaQ9YaJA8F3jcMkT+hPEejCZHmlGALmpsR3YNJ
11Tm99VYczpgc5CjkK4OXx57HW6GgYG8ZUnrd0XtqA7cVBAr5OdFrPbYHmgj
7MEme7KEbFn0IhsxlrIQS5s3lkE1VaDZGqMXEuH37uCCIjlQnejFIsWy4EA9
OM0UrnVAG9yQAi9epgJJQg51MYavREN/S+GVImjUCL1uxYfXrYt5EAdfbPBB
nXYoUDLRZVNeoG6IpnysulomY2etvVyLi3aFsWJpgF1aSWBkrodHuo1FjJFJ
kK5FgJZVmJZ9irFnrl1omXtsY0BWZ3TRqQwcxKbr+5rO1becrjt+9djNrgdP
Xr/qfvTqTVfvUO/n36NTsz+WFn8vTw0tTr9fmOxd5JpYz8LvF3O4of3tnZkc
nJr6NDf3dWHh2+L8z8X5KTx24inu8n8keq6y2r/DDc4/Zn3vxTvdcYlvHA36
bXb2O23t8RS54Uk/4EJJtwBRxquDVTRdZBST1Hb2FEl92C91N1L0g7II5rYG
28+DXaLNZ5MnthKwGAJ2hIh1Ik8akV3eoM2WgMe+VhfSWxeBmST+L7mgyAXC
zVNHjhpvSAszQcPVeAYcNnxJ44llw2ukRJXUxe30BNNNVxsy+JTUBAPM1tib
0lMCtmb7rynyW9UYsqYocr2rCynKR9zBht/AWNjERNTXRjDXVJipICS+WUzP
kFrJLfSIuSoUG0VefwPC6VhkKArcUyPabaBu3EbOZ4PRXPDDF36szOu1HbXR
Bh1sMByBLMeBH1rglqpwiRFaZgIdtEaOm6NP42k3fKhPQ2l3HOm7pUGkgmCI
0pr0nWC3DHxECpzZCs5IUPbKr4m00jDzM7ILMnGOsPBJY8eUBRc1Ze0+WHLw
WP35850Prl15+6B75OnQ9ycjfx5/mXowPnVvfPrul793Rv/e+zx1/+vPW8Pj
1z98u/Ied5tTXxdn/izNTS8tTS/jaS2XAfqPXs35nxZD7N8UmH/SJPMcrmDF
Hw63nfsvhv3BVia49Iqvt/v7du15nxDTG2D+2E7ilq3oWTZPkzVvuj4pXFky
THFTq77UT78NU43C082E+QPQpwzkXQDpdgTpkC+aY4LUa5NueaBXgqCj/nBz
GIj0AixrVF0X5GvSfisIY0E8f0rRq2zyB2/+0Wxakx/QUEO1tvG2M/gOu5Hs
DQke2nyNXvyuVkTFnQLxlhKulqvsTUW9LUWcbIW87YSSHEUCPWkhgWJ2zoI2
5kLWBqJudmKNLlsCjNbqGvCF2tF1d/IY6ZFbPMA1Q2L+dp512+jGWoSDPsgr
b3BLBY2UJ6nKwuF60E1/ZMgCPJOm7jMmOTEQU3XYXRskMVCPrSQ9SZKmCmCq
IQYKwFsbbrVDHjuAPjbo0YIuSRELZEUSZSUqVFefNZa+bc26yjS44ujUW9Hy
onLfi8b2123n33dc/XL81vipR5PnXk2f7Jk+8XTmxKs/x7t/dz4b7+j6duTx
l6NPRjseDx168KHt/ofWewOH7vZ13Ht/9NHA8cfvT3Rx53r86wdd+W9D4J9W
IXdHboE72mZpYnnxD7b4A1sexVaGMa4U4djKyk9uBz53S2FsZXkcw75wBTfw
9bvrx8CJF+1RRSU6ps1mTjXW7CIjjeht4kHSwg9kRTE2BatDsFbCQjMYLAVt
/iBcD+jJQco7gLEOqqOGrNkIW6vyHraiP4ykvsgiXs0H5dFIqxly0p5a4c3z
wJiPY8HLqaGdiwU+lmiKLS3FHmhrk7dKC5cbrLnLFvW1pintFKix3hzEEnZk
iBa5bDNm0nJd12Xbr2Yw6Wm2m5L9FXO91hRbS1ga8jrq8ynJ84WxSdcdeFKU
xSQlBDdLCjNVCXhq1OwAQtWoclLiGjIUB01SlSd8Kx50WMPhimixDvLEDfpb
CAbdoWZ5iq0iEm6ExpjDUYZwhiXU6IBcCQdvM6AvWWAoAG5XIybo8MZZr0k3
Whstva1UW/tSQsD9jJzjnvEHnTz7sgr6k/Pep5Z9yK4ZzGvqy2t+X9zSV7D/
dVHrq+LWtyWH35Z2viltf11x5FX1qZe7z71uvPy2+fKbpgtv6y69rr/0uuVa
f9vd/9bc/xrX4uTK4vjy4vDS0scVfOF4LQ0uL35YXhheWRxeWf7AFRFdxsH6
ubjyh4sgbn0YjuMoxnk1O3nzy8jxF68PXn665/D53KRcpkacqkqBk2uDo0uy
rLLL+o1h61btkUdP2JOqLMgdTFJvMH2oTGCoDP1Ujd7LgFLMgdp2SHUb8YL6
6jlNYayUDztGG6hFshKBgxdibADbW5PdtYjlevRaN2KsOXjCXrWcuvpRGZHt
iMhq0p0MeFwMqWqq4koaYmoaggYMQQ01AYaxoKmxUIADn689P8uEnuYs6m8u
YsbitzIQ1NIRUdTilVUWVJETcVcQMJXhVVXmtTUmuzCRfb7gtRVok6ZKruMX
laDpqRLafcBEPjRmDE5L8caqk+/7gekUeFyHa4yZOqR6a2g8H2AlYCkXTPhA
o2wUq0K4TGQP+ME2ahxLNJYtFq4jFKIgH6aoVWBp0Rke1hoYfjc3r6d09/PC
xpelzbglvq45+mb3ybcNJ9/uOdPffn3w+P33Jx4Nnu4aPPv44/knA2ef9F98
9uH6y+Fbb/C/g9d6Bq+++njtdf+Vl70XXrw73bX0GZsfWJ4f4Ez1rsy+W1no
xxZ6lzl9K1xe5yi2NMZFjXsxzpW84BrmErfk5ExjnB+cxfeLvx+OfzzxpG/P
iXeNewZ2VT2viD+SxC63Ub8Y7nM90rfNxPyEg/JRS8EyfTRQiagvQ7aTFHyh
vBbz48XOiWBXEc5B8KUQ7UonPing7a/l6fajfFFD59JI+Is3k8HjGNJYBv9g
I+VMGtTsSaz3I8W4Q2aalLOaYgNu1KYQgrc9od2TfjWa4GgDrJh8ZRE8Zkyy
vAJfhrNwipcgntIoawmGslflOG821BXWM+T1tBLSVBbU1eMtD6dEmfMpKNEt
TSnb5ahsY+r1aPi2LZyuQLKTo/ir0OJMIVc9grQk2VEF7XCAnzNBpzLBYDvF
XAWtsYUumEMZ2wnmO0CaHrjsinwKgP76wz/xYlAOPmEHnbVAG5VBoCQ4lrHm
wf7NR4MFO0x2FCtK1pvonggMb3f2frS7ff75j9muryvdPzndf7C+f1qIIyuc
byv4r/pv1gzGVWpdwK3rXzfFyj/9Twz7f9unXEXQf55ziTP/AVt4j80Ocimf
S4OcxSEuEw3/nJVvS/hH/UeB4Y514G6a//s7w8HGOXOjy8NvPp4/17p3f1JL
tX9DvntNom1xNDM9Wq/ETfO5+ur5IPp0Du9QDF9/FKUnDJx2h9OYiIE00N9E
PyIrMOlGnywlvM8FfwLoy4ECnMOrsKs8nMPw+RiQbgy8dRBJSSRoO+WXjiQn
kB9rIX41JmOBvNhR2oVK2MyRqKlK8tIjqWvBbspC3fqrHnuTXM2Ju2zXvPQT
j3WhbJXhK2aua7ZcpaEqpM4QtTLgDzZaY2IiwTQQaHYTzWFswC0uxVA4U03M
zwQ5401KUKXJSNPSzAid6uRICZrIRj5rXWJXAjQSDspkaZs2UA3k0OMe4FUc
uMiGXRUI9ixwNh7ciUab7FB7BQj3HgqbCY5KhCgD4KODqElBm/iQ1TwEvS1I
rTv89ID8SM7GRzLg0nrQtplaYbShmine4aqH3+3f9p/+ff75UtfXxa5xfC29
+LX0ahJ7N8sZmOV8XuH85OpbLk//L1Vzeem/QQP/5pqt4NhyFSr+La6S5Ahn
6ROHKxw6tsL5tbIy97//tbjMlc9f5m7yYP9M78/Y9NCH4Z7eR2ef7W25k15+
2S/3NDutgx3Z5OBRZmmRxWKlMIMC5Q84bbzjIHTFmbbHllhqRE1h8ITKEbLV
0CYTYoc96aIHcsoLJBkjVnLIGRmxJQYfpxj9XIxcCyFkWEMsVaAsCzkaE6LN
0XYVnm424Yw34aEabdGb+qmYWBUA0tyIJxKIDamomRPZwYh+mE2KtyJIK/E7
a4on6gnoqvLtUBLWVBFhKIjp6Qhb2PLJqPAoawmwXQQZDIqxqqCxkoiEtJDk
tlWSm1epytOLNfhzVOlKCrS1G/mM1Mj4F4gyh4yUCIc8uXnLNUmqgQSZpYKc
ZHPPfL/pEC7vFMwzIb4IhzgVAAuHn6rzZLvQvUxQ/Z2onzlU7Q+aPeAMY8RH
CTbaSjLcTip2oDQxecq306otpQrZW1Oc+IvtyKetadcNqQ+11j431+oOiv5Y
f3Sua3Sp5wen59dy9++VN5OLb2fx2LTydh4b4nC+cqmd3HFmOJr/OGILsytL
s8v4WpxfWZhfmfuGLf3k6ldw9YT/kayX5/7pVMxzuJyXaWzh19LnD1/u3bvX
euxA64WWw4/qDr0oariPV+xO2YfN0lrN4g5YhzdaxhaaFibot4XLXUzYcjhG
LFtf3GutqPM6Pj+GdIaexHN9+nIWV7t1OR18igWn3EEcE+jLQZY7kDIGkmAA
KWxEdeR5Mh3InWG872tpTwpQNxbYvg1WkSDaaJCsNQnWO3nMFOkxWvTvbNGV
KuGn+wj5kdCLCOKHAkp2GGBbkiu8oChvgpYmPc6JJ9ydsEONJ8yKfixa0NOM
R1WH2hzCc9CZT2M7/w5F3kAHcqgVYaukgNhaUdmdvHg9cioMxOugbG1wLwb5
GAJXKZO0d5ArbcF1XzjZiKi0nWSsQNxnzfWlF/TJdjtILjvR/Ragxww6o0wu
syU/TIVHqtG3xehADjKewaWIziaDp9pwnMFm/yCL2DiHhHDDin3x518fPtN1
OCknxMt2Z4Kd6m43k/Np8Q8Lyvpbjq28/cPNEr9xJZ05PzDsJzfhX55YWJlY
4Y4b+MMlqiz+XMHTj6W/nIWplYUpbgnAFf/8xaUacVmceB0xyfW9XFXYJa4f
/jk08ezJ07bjewvrUyKKnDxymAFldsUnUg88Lu3oLmu4l5xxxCFit1ZAjU5i
odE+X70eB+3v3lo/A7d9CBE+5bI2TVMqVk0kVHltiIbkBe3ts/rUhVhiXxjc
agoVq6L5WmiVBaHdCT4WCOIcoK1yQFYCuawtiuWuwS6t5lwi9RRCpdZIrSty
MRrscgXK8pCcNCnUmd7hSRlRXvvDk97gC9ca8/60lRyOJwfYgApNwXG2wMkY
krce8shJ5HwQj5Ym1VlTtJMl7KPPv267gLu2aANL0FyLLCFPL2VTr1rSvZVJ
8oo86zfx2mhTrjqAQ3JU9e2UTFPkiR50eBtqLg+VOkMjheBvOOhQJRppwh7G
8PVw7p5nXzSUpgnLycDq0oCtARWbQQ99wcIuCDsKYwcJnEzoqwU6YAmeqPMV
yW8NUVTJSvJPLwkLt9bPTnA8/7I1a0+umouukoOaOlvXJMw8vDimpKVw3+H6
K1fOPHvcNfL24/TQ78WfSzgE3F3QBW7sWv431Iy7y734T8t3kavatDTLFYf5
pwG7gk1yN07x989NrHwe+nrr/s3dneVRZc4u6doOqQrOmSoeeequBaruhZoJ
zQ5VlyL3dmU2PcrMPhccUmcSsEsvucG2stK1qdS6Lk+/KlWrLss515LVGOJT
GxqcxzArM3YuYzmkbtsUs42qtp5qvJrnmDvf2F7xlfN82GGoOxuq8UJKvImX
PAg/lcRWPIQ4++ijZQj+dNSRByvnW94HXQ1EjrqTvjaJfDvO3+iHZKmjGbrk
QEeSlSYh1UjSWZ1PUYPfX47vsCZfpAlVS5a6T2d1rQOPvi5ppzzNWIvXx5vf
2JyyRZIvxJbUnoFY6eGhSiBRhRZvgTZEAE8d8toNdBd1Qog62LCFbq5JPBYI
XfKDvBUQN0Xic194VAPckORnShLtVNEbLshyHrRgjb5SAZfjCZk2iM5WIl4K
xdoQy1jglif4ngJNe0F9qiQ8z3HVoocaS3jJrPWTlY211MrM9fKx0a7fl1K1
v4bhYaTN1tBgazJ89ByTnfyLgiJqguKaghObQzP2R5Qfy2k5XnX83KFHT+59
GBz48/333MwidxrWf9Ov/gH6P2GRK/aDP+H8+TX5svdtx4WD2XXxoUXWnjk6
jlnbnTIUPbK1vfMMvXINQotNoirtYne5pjYG7j6Zdezh3rNP247d3r//ZHXn
8dpzF9vPXmg72dZ8vKbuYlnLjeKDze4JLc4R1fbBmfr2hSbmKduFPTbSmBuJ
ThIC73VEsUox7Cw/doT0KxeMZZJnW/ix07wTBeCBKXRSHyTrIYpb0ER53i/q
q1c8+H7nor3OpEVHIaxVDC8x9nvCCYbEh6XEc+WImwkisRWKcKZE+xB3KlHl
tpNTAuietrCLNnw8n1Yei0hJ0bUVhK5mUI/HkrZJ0n30eJ468jVbCVoaodtl
ya4GxBdhyBV91FUGzXOFr8aAJHWErYA+ioKm06E3hqjdeoqGNKlYG5yyRuK0
Eel1CO7Ss3XRixrQLXUwmAWwVvhHNeVwMKUghOysiUoKIobCII8BnpSur/Ja
Z6/EE8taHay9Klhta5yuenKye3JSQFFeYM6eSqYbS9dZR9tB08BLzznJ0a8w
OHZ3XMaB5Kz2xPSDURmHojMPRCQ0B8XV+aXtCS1uS6s7UXLkUseN+zd6Xj3/
+vXbzPTCf7LJ/44oMPx3z94bFVPjEVfmklMdXt2S2dJWdfT4vstXzj28ff/N
s97eZwMDzz6MvBgbeTE++vTLePfPXy/+fn8w9uv22PiVT19PvRvuePFhz52e
3VcflR67ldt6Pa3pfGbjodjiC16e9z1lrzrzHDSDs3SAszKcrSw4aiSyEk2c
KCEe10U+mK7CQnlXWniwvaTnwSBGH7HXIDqqIfkOIFoPLlHir1UksaQJdWpC
X5SF/oZT97ih4QqEr+5C2C4ePO7460NJTGSykX4rC2KpQ64a9O/1/FfToRwj
yrCf0EVfuqI8ZccOaqc57wNToQhL2ECL5LZNMEyNcCEW2u0Ga8gS6vWQfdJE
vY2UChsw5gOeqZDtxamWioTbtuCJDLFahqIuAUWZgKfx0HweuOlA9NIDWkrw
tm2QvjxaawovF0Mr+1AsCL5tTDoXCl3gOnZQoosecEYKTCjGm6l26kJ+WtQM
Fb4KhmKZqlaZn1tJTUJUaZq2O0vXQ0fbRVPXTccqzg63wRgcwYNJOYeT0w/G
pbdG5h2JzuqISNwbnNASlLw3JK0lIGaXv3ems3sqOyDDI7k0tnr/ruOXj97r
vvd66O3BA9VnDu97eulu/8OBz91//7xemn6Hl4fcEmPuPTbTj830Lk2/Wfj7
avrPy6mJ5xPfn/wZuzUyevHt4Innva333jZffVpz7kHF+ZvFnTeLj18rOXmz
4sS5+OrbtiY91iIPdcFFPf4OO9V9piqXrXnfRKBfygSGC/hP+8AVqrRedclJ
E9poArzfBVLaCCxkCDfjeCZbSN3ZXAR3bgXiawkaMlCADvCXQxgb6cLiJLym
HlEVnLTDawdUcROhx1p0wU2gK4wiJ4EmqdPnnQS6A/j8FYgntMTK1HljfZFA
N9hwCz1Ghf9uKtTkCtas5VXeSb1si17XIWYYExrcYdudRLx8UNtGrFSGz8kQ
01RQpc1E5S2kaia47cyt+9LlCFecAJd5LUc5bEK+Eg+afQm+pkQzDchnJ3LL
jTCoCh+RJV10RT5Hc4GeLQQj8Qge8R+4g3QV/L4F8RqgicFNgTqN1qYzhWId
ZQPcGSauBmqumtouWqbBpl45njE1cUl7ktLak9IPJWW0xuQdjSk8HpeKWyIX
waCkpsCISh//Alf3LCeHFCubeKZrmkVEtU/mwcTCI1mfbg+N3h4ee/D1y5Nf
X57+/fJ0cuz55I/XM99fTX57jV9Mfe+e/Pb877en30fvDo1eG35/+kXvoUe9
++707rvV1/a473h39+Gux/vud+2/96Tt+aPWx10dL64XHLwRmHLAhNViYV1r
69XiFP5AVX7RGcEywVgEuO6C4r4oUBFp0ASPHMExd2CnCDIUqRPpQthpMewk
YTgTyWLCYfqEQ/6Ergwk3xZW3QmUtqKZZlCZDchWJ/rtJG5YRfFgwhd0RR9r
iO2yIHjbIG4qxGPyfKfsicn2sL4Sqi9D7smnP0uBtLZSZLZQHphT72qSPTVQ
dxMkWBl22MBTYg73hYODesBJFYpgILJryXay0AE3cD+YkKCBBMpDnyKhv47w
ZSlCuCxUK0/s3E47agoPJHB5VRMl8PNIUOCIGEjAeF1vpoiay0DZWvALbzAV
Az7rQc8ViaOW0PNtULqbfFaKTqOf0CU78NoA3FOAD8jTGs1W7fbV8fYy1PXQ
1fZiOCXZhVWFxe6PT/3XuZ3VHltwLLLoZFROR2xiS0TCnuCYBv+AUifvfGfv
XC/XDC/3HHZAiUtUbUDGwcSik1nDT39+ejY1+mr68+u5sdezn19Mf37299uL
ibGnU6MPxj9eGxw829d/qvdNx9Oeltuv9z8c6HwxfG1w/Mn336+nf7yeG77z
vf9c35uLg6/PDfacePv0yAscxMf7Ht6uul7pELEnOCnOWMlnJ1+d4oazeryt
erR0BUH7zQLZ6uSuAORHBhhKhs85wXlqyLCmIIfNgzXzDOfBYQpQqjxlIoMf
O0z7WwqddQVJ2vCTOPpUFeF+CIgwAhs3QMWORNxhJpiCBDXiy0zymyokxhjS
3kh+lUYeLgC+WrDMOp57LKF+Bi3eANHRgoNkaMEb+P20IRzTffZg/TqKoxLx
PoN4bhtywJb4Ig40msGqa4hnPcBEAPJGB42SJMepgisK0GVZ+Kw9iNdG5HYC
UyX8y0BYMeDE8n9Q4huJQrsT4RxzyEYB4aWSEDJNSRypNIQPaNMi15Nyt4qV
S0sU57kde3uqsM0/LUO6yWnbNTejSwbyB5VETthvOGcrk2+laOyubhzK9C/x
Tt0fl3M4Pu9wUsbhpLxjEYUno/OPxKXui41rCIqo9fYrdXTPcfTIdvbMdwuu
DolpiIzeHZncklhwPPtTz9/h578+Pvw+dG98+O63kVtjw9dHPl58P3Dsbc+h
Jy8OPHjR9uTV8Zd9Z3vH7n+ZfD0195GDjWDLQ5zJ18uj93+9v/5l+M6v/muf
nne+fNr66HlL16u9j7oarl/IaSwwUY2Q3eK/UcRTQtSTKeugIWW6dbP1hnUt
coLLAVQsA5pIAXccIB9JYLGO8lCb95cZ4Y4LzNoBGBvIH7XWYvZ8WDXtaQDk
I0s4ps235MyDlZDu+0KG2wnxDJ6FZjqe2JeZQO0agvNeQgsZFA8F2FGa/tVG
6I+vYIQ6ukWC4CRNLt5OvxILzkUA5W0EqqggYzvxKZv0UhuNUwfu2ojVZoL+
Kp4EHW6PxFsNsvdmmq0MclUZui9BPaxLKjKAHLchdfrIBz/wJwjZrYuYG0Da
snCKFvzSknB3J/GND4pVAqwMvWcDElQhBRGSmhhcYAMuZm6y3k6T3yIYo6eQ
zdQ80JJTezAso868qDC2dn9Z07lduUXR2SGsGmvJA5qb6nWlfD1YzrkOKfvC
8k5kFJ1Iz+5IyjocUnAiEl+ZbTHRdSH+pS4eeQ5OmXZuueyQSr+kPQnpB1Lj
myLxld2W+f7e2MDNfzOsT797d6QHR+1pK47a41enej5cGx5/+muqb25ulLtH
igO3NIYtfMcWRpYne2bG7nwfvfdt5O6P/nMDPW2P+490j10a6j3ee7vu3I2C
4iuBxh0ssTxdkRh9nRATlSRv/QyLLT5yvG7rV52XFPuoQfnoAc5Ywv5SSIQK
jBfO35LAywC4wRhl7gAm24g3VYSGVSinzFA8JPGKkjrlRUZ2kO4aIcobyVs3
EF5YCmE+/D8SUestxObtYoPya89okCRXUVzliTcUN7TvWKW5nhxqAuwZqKoU
0u1P/GAFR6mQGGpENWnYW4JcuZmwywi+FQInMoD8VsRDBa7djnZKkqIViMEM
SHUNOViKcJMNRmO44j/Rigju6n8woGc7qLkGhFxnVHkrpKsBpSXy1oZveBGM
LATBQwrgdQjyKBTezQRJSvABD3qWKsVeji/ISDxSdpvXDr4YFajKZs3BcIfc
bKPq0/EtDw4lNee7pPjYBJm7O+t4eZg4JDtEN4QVcrUo8wqOZGS3xRcciy0+
FZ13JDK2Pti7wMUp09Yhw9az2DWuIQQPf1ltycl7Y+IawtL3J3Qf637c9hhf
z488f3nm3cCtkbHnfycHlhc/YcufOStfuLPJuLM/Rrlqh/OfMRzNidcL3x7N
fu2aGXv0d/TqyNDZ/u9XP889mxt8MHJxz9F3B9uGYzwe+GuU+sr5R+tmBpp1
OKzdzybhP5efpLiRLM1egpwnj5Y6kjrSV1+MpE8E8GDZYDEdumYD22wG8muI
OSzSJXcoVx+oSUHrNhLcGaQ6SyRkO3HHWsKmjbQwU+iU9roBlQ2FO8k62+BA
ddRHGpVdT9KTJh3yAFWWkMJGop0C8V0GOBUAa2xA6xQpt2UEAreRd/kQ6h0h
eUkSXZTXXw2M+iN3jQjlOvBxV7TaFFhKQiVM0BUI1VsRJVej+6zBnzhoVJfY
ocobqA3yN5Nqd9CajeCuYPAyES2wBLlBokXZ6iYKhKydSOVWyklbZCobLBfC
b9zgDjVwUx+6x4AarLakGSoGbRaMUecpUSO3ScHn5NFzbNnze+Orj1TFV6c5
p3sbBJrpeOmaRJiHlAVndaZXnC7MO5mddSSp8GRsyanYguMRcY0BnnlO9qmW
7HR7v1IPvGxMa43NbEvIOBQb1xSa0BzZc6m3//bwyOMfX5/9+flmdubTysIY
tvgNW/7GBW55BFv4iC0OcuY/cOY+Li8MLC+8waZ6Fqd65qe7F3/dm/h59/vU
i7mJd9jTG2+OlJVc9nC+GOlcFKzhEccMTTTuCFZ7EbH2aQxyxAokq4l5SG0M
l0WPKUGPHKDWWPHOcumHzqv+KvMueaOtTMBYTfJUIXWn0Gfy4e4IUGYBjHfC
tS6ET7noVV8QqMs9gTroDV9PQSst4FBlotwGwj42ut8BwqPeBnFyvQ11rgRc
8wEbV5EK9ckLcWifD8lZFnHTAkE6yNZVlPMB4Fs6yDcCstKo+Xa0TQ49s1Wo
UInUFwT1u6HOGwl4sBuNB5P5pHwtYrguuO/A7QzsVCe3BeJlDll8A8Cz4lf+
CJYPY7WgPxTaawObSSHKEjAeUnEHXs4gffCEJkzBre1IhwHvPR3yw61oh45M
vPTWODtGeU1iU2Vsa7jlEUetdnOl3TH2BQcLk+oyPDM8TAJMjQOMXPO94/cl
Fh7PKDiRln8kseBEFJ7M5LaHRde6uOdaO6TYOGfYBpV6xzVHphyIyepIyuvM
SNufkrgnerx35Vcf9rsP+/OOM9WPzX3AbQ1bHF3BoZx5z8GriYV+zuIANtfL
WXzLwasMzhCHqyTzCZt8tfD78cT86+Wh7vE97W0ZFdH5KW5x8SauWabOec6l
gVbPjLeP2G5+aMNfrcPnLoHY71wTpq5zaJPQ8x3goSmlxVgkVI/ffQt//iaq
rThqtBFpMCRNpwhyGknLOeAyGzA3gwotClZGWMwHj32B0WZ0vy2RU498zYRa
rICmDKXOGPmVAveHAh95gqgAzzUWfd6ddMcGld1AKFAmvVMQOSMtkKgMLoeB
Kid4tSi1Qo+M29QFLXKJDSg0giy2wpYSRMsd0FUd8EaGVC1L8VIAbz3BqBF6
U5mw3wJc9YLTNNEqY+hdHBivQLNMEQsVKFYLxktXLIL4TRnqdwJP/EEVE1S4
EYtYJJstsMsqnkq1tXWm2/KZGxutdx7VlTjNVD8VHnepsa69s676xO7q652N
9041Xj1Yc6y+6Gh5XltBQkOie7q/YYCBdbx5xO7grCMpJSeySk6m4vAVHYtM
3+8VXG7lnmPlku3gke8cWOYV2xCWsi82pyO14GhmTltqSkvseM/c+OuFn31L
fwexyUFsepB70jQzwD0oXOxbme9bmetfWXi/sogDN8bddOWeYY1h0wMr029W
Jl4tXT5/L7sxM7bWP64m2K/c27XQ3jHLMifc+ryu8mlpoV1SSKyGvIuOnIna
Gkfzbf7qsrESG1OlVntJirElZLXE1ggLCkmIUlJ1iNd8oF5LwrLleiyJ9tgV
clIErptJX3T4OaHE8WjgLAUbiJO/21CxGOhLFKK1gSQlxvNMlz7niz71RGTX
kMTX8hxQ5Hm5XahYmWggDXU4IucNSbarqMVG0HQF3BUFmWyFHBWgg9tphdto
V8LAx0QkQR0ykAGlLOQ4C6rZzBuwhVJnCp44gy4lqHw94bwN/D0OvPZGitXg
d7GA00qcLUdP2IBSI+CrCO/Sg1o3Uu/bICslYDoJepIsfCpO6LYt3KAOPCVW
xZmolbGUa5k6zQ5mzU62J929X5bvGz/16NP1+09u3zp181Lj1dbSE3V5HQXF
h4vy2nPjdsXaRluZhOv5lbBz2pNKz+QXn84sOhWH1xRJezwCSiy8C2wDytyD
K71CKn3DdvlH1QUmtoT9c6TxSXsjx18vfn+7/PPd8u+3y1P9nOk+Dg4Z7jaX
B7DFD8tLI9jKD+6Ys6V57hRg7PvK/Afuwf3sANZz9/3uA/UJtRFpByKy2uNT
9kaEVvu757GDcr2K3fUbdq5Kl6WHqIvHOrICffSdMiw8wxjBmtuDdkh475A3
2CKgJyFqvlo0Vorwyh+eKwA/diF3XQWuS609rECpYkJhmiB2J+meFOWDIalS
F6xfi0RI0d7tEPqkzpevhgitQXauoZ6XFn6rTK7Uxt0mRVWS1mkPTjqRLFQJ
EfLolwhw0x3asRpt0iV9NyfdMyEkKaFNjtzDx23iyGk36I8/4aIO0XEb4a4b
eB+ApKhCYiKU3YbwiB88YAECJWA3OTDuhY7pIu1ytCZjdDoPwdzgQT1Sty9y
xxPEGcPWGmTTjXCXJ1hwQB/IUStNqK+doJ8eUBcDZCiJ59gza3TUW5zc26Iz
2my8Dtn4nvII6Uqr/Xrwyq+br/ou3b1+/uz+M3tKOksy9qcn1MS5p7iZBzE8
8i3T26LKzuQWn8rNP5GQ0xkT0+TmX2odUuka2+CP5zB4VoP/yEGVviG7/GPx
ILg3DDfJ7z1zP17O/323gsM3/wFbGsa4qH3lnshj/453l+dWlqaXuTMp8Cz0
C1eQ+cub+fb2EzElQYmNgSVH04qPZ+KpEf75QeU+udlhrR42lfqSaU5qAVEW
7umWHkl2QY46/t5aAfYMf0WlYIktbhs3W2wSN9gknr5aYMqLhNWSsQb0jCdg
ric5b4LPWEL3fUGzLeytgNQx4afeoM4EdlWDNLYhjUqkkwawlzJQlEK1JeC7
zuhjLyTPCggJ8oQogy9x4EEUUN1KyNhJGlEl3tFGWJJwlgrxjgxfvjgtXBEe
TgEPw4C1NJyihjzZQTi9Y53JFuJFa/iLATgvT8WjKlseeagPXkuQ2lSoPgrA
VQJuk0LP6sFNTKRQBZyRJ56U433qD34nge/RyDU/OE4fVhNC8NLPW4R/Aw8t
UJJ0zxgZ0CDsk+IN1KHkGdH32CmcTS48HZhwgh103Cf5uE/i6ZCUu6m7BqpP
zZx+Pts1/Pnhq5sXLjYcqgpOcGE4y9slG8XsCSk/kVl6Kr3gWHpme3RYjUtA
hXVCs3/6Aa65xbcE4TV+TH1oZG1Q5G6/qHqfoAr3Xz3Lk69X5ge4h7xcFd/J
5fkZ7vSQxSWuAt780r/zxHFuo8XKGGdqGLt05HZQdJh1KCuo0DX3YHTV8ezy
YzkpB+IDqoLicoLLQjwSIkwDi9z9Kn18yj19Ct3cCt18Mr1CohzDbIwipdZa
bxV02CnpJafjIbr2jKTwT23q72BCvTYpSlOwzZf+NRlMFYOhDFDjBgqY8Gg8
NJYILjohBpIEqfXIMUvkvgfYZQBLryM066DTceBzOnBTRMVFKS0q1F82yH0n
WHUr6iCFnJWgp66h2EoTTjshp+0RpQ1EbzniuDc87EAq2AlVsKBrjlD6Tqrl
TjhZGbm2idIhQXXYCYVrQT7boDIpykkjBH+DrQQiK42024A+f+iMHbCUgdmG
IN+cOBAAZlxBvybS489t/ZVeTdq5jaa5RpQhvspuKyVDVbzCQj3JUb6MBa5Y
wi9CGJ8One2u7rgUmno5IOtCdMG5hNIL8eWXUiqfFB8aPXh79uL7uYefx271
X2/taGmuKD+QX9SZknMkIf1wTPL+4OAy25Aqu/S24LzOhIx9MclN4Sn7I1P3
hyfvDY2r8wssd8MrxPl3CyujnP/T0lVARfV93TdBg3Q3w9Dd3d0dSnenICEq
SIMKAoICgpQoIdIS0t0tIioggtIdAvO99/t/rLtmOaxFyH77nL3vPfecf9tQ
WT50Z+0CKs+ALvz+1/T16uT6cgc6ID75cz3Yvuzm4o8W5uSW5ZUzlTbz0/RM
uh36yicsz8c/w905wRGMn/ax1vbJ9p5JTm7Jdh6Jju5JLk7xDrYJjr5JIJgC
ceKArxDMRVIskpenRAb7ozSySAjw5SbTpmHIUqU/cCDCxCIungKgvAyTQK45
ITHxyOW7gAk/jJwSp1oPdhYF/PSF63AgwT9aHz/ugTbuZ3OkICOWvgDwkodw
hgs/mQ2LnY3gtgTSVRxLBoWw5MZa8wdmXQA7UcCUD9bOj9/FSu7MTFh/B7YU
CHsgAzxXA7I1sJQZcVTQOElqsGZzIEEN4EQDxUYAGIfnfPFNlAm8NYAlN+D8
Hhzke5QywlYY0GDFLuKFFTPgdhliH4fA+1ywQtWJjFHkeizMMsz4NmJcrtzc
flqyIU7Kb4xZ+sSBOQ2OvyUfDtvmJ54XfQ5JbA950h6V1RTzov5BVvOD7K6E
grEnb1cKuw8bv/zrXTvuX1sbXBjq669uq8gsTw3L8gzNdnhY5BH9zjeyyBtM
f+GvPSIKvCMK/cG46hRvZRpuBJ0Fn0J0g0aEHF1fnkHwXR7fXOxeXWxDdaFX
u9fTQ7/C7iUJCPFSspGwCTLxSLMJKvPKmgpreMkZh2taRulYR+nbPTC3jbF2
SrJ1TXSAJnkl2nsk2NnFWTnGuzyK8vtkxz1qg/1GjeCuBG+GsuqYPN6oDJDB
B9NjuKXMzKjKwhDEQrkkgbfpgWiyhPYk87hv/ZXD33AEYpVAIiCdOODrakTn
vthlRgATK7Y6P6xekLCbH8teCKnNB+QaAMmycG92bG46LGpK3Ge6yLeOgLU4
ljU71hdZ7HFxvAwZeIY28EoWZs6IjabBadYAlmUQRQJ4tfrAoitgw4fEZ8D2
lwIWXZBgEPBXhAXoIHYiEJduyDoNAg91RL4W7r47sK0H/6wG+2AEuHMDMsww
dS5cPWqsYUPYuRWyXgzhyUURIsWhzUmvjKZ2lEDZMVLHaBtW3A9NdzTNlaL9
JIz6+SQfM7S517a0UNDSH1vQFfWiI+ZNa1xBY2x+3eP8hkd5bdH5Q8nvll62
b5aPHbUsn3b/ORjcXB9dXRhZHBwcbu5tLmkuyKx6Flscca/AF4TP64mldbiW
XpDqxQE07Oy/CS9Qd9/LPYhxULnUBTTOen5qI+bBMxkFRZQwiBq3pIGYhJ64
mI6oiI6QjAW/orOkureMpp+0bqCC0T0dmygTxxhLl9g7bvH2DvG2zvE2kU/u
FcckTdvqLusSDxhzl7gEpVkHdPLQdnFhP+NgMWZhkGMi10ExiFNRPJAkmHHB
HXHHeqEAaKIIQLHaIInVZAq8sIKZSwBmdMR9PIRDCljBKoAQFwz0AuWGwDMN
uAgK+coYueQDPFeFUdBiMaNwhVhwhl3gPx8AwYoIcUZEMStBDj1eghQw6w6v
MQZk2ZECKKxHKHgrM146Gq9GC/ZdFfGQD87BATcSAea9Yf/uAhOmeI9NYcOe
wDc+RIcgYb4J7KUJMkMY2cKCXSWCPekGn3ZE1PgQjOfxJjmwmLHh5HIjP7AQ
P5UheCaFztbVd5Ji0UAj7biwY8Vo09XVnYPsNXyVXW8r5HncPun9Co0bntg7
7Vn9VtIxlPSm9/Gb7pTyjrSatvSqpmfvaxKL6x8Xfo4rHUj7MJvXsfJufKth
cbfl+27nr72Bv1ujW3+mt5fnfg2OTdb1fHrd8CYiI8QmwgqE7+Qcc3VyBbXR
3oHQBNXL8c718MC3yLAULl4RShpSUTlOTQdpy2CdOyFGul46MmaSInqC0pai
Km4y6j6iGt6Sen5y+n6KJsFqpnfVzcL1XR46xKdHl70qa3lcPKKu8UVDsM3C
sTwkszq1qirwSZ2j7xNDO20UjYkQpzozkxyKOYaXZlwBmDKBvVeCu/Ax64jy
RykTDTrCp3yANEOAmwonTwc26wLvcITOEawFEIueiDEHhL0AQo4B51cQfDcE
HiGJQLPimkgBbiLwTRfgMAIIkoZLsAEmIggNdli4BHzDFTFnBkuVB6LlAQ0U
ljgdniIzdpk00COAdGAmMJJAxGgAtcbAnAjOODdBowUwGo5IEkX6ceLUm8O+
+ADpejBLNrggKd57A8T5A+AoBnfnHc/PFNZADjCo0thyMHsI0GTK0lfKizWa
qESY8nmrUGQoEZarUic6yBm6q2sGG7kneheX5W/0fsGM7WMmj6+/XJ6M7f2s
HR19UdOf9r73+YeeV82fsxtbn35oTHpfm1DUkFDcnlo5mNk8U9DztWz4R8XU
j5rZ5Y/TPxu//+5a2xnf3fp6+ffn+bf51cudGyjTbWMwe1cXO5j1lfOWT0Oe
gfdZ2DlxEEgiImI0H1rFVNT2rpZH9G2X+za6HnoimlKCGnwyViIq7rJqvqLq
PpI63nJaAbJqPgIG3oqhcQHleWU9Jf09hV3V7uGfb7vVBj57n1DelNXSnNlS
l15fEJHrIc+vxIGlxk1hICJ8R4I/k4msgQX+XALHmZPTVkQuTIpyyQXYCQUq
NbB5yQgeS+PuhSL+hgKlVoAYDbzLGjgMhXebw9mZAVsO3B+S+IvagBorQg6N
XWIKK1IDZkUQP5RwXdlwvKQQ2TZwD1nAkQP5RRhngBveYAAMWAOewnACWnxu
NLzGEDiMB7JMkHc0cFps4B23gSB24DYaO98IvhsN9AYhDYXgT0ywfwfBdh8j
aq1xVBjhinQ48/ZYR+D3Ucf7pAj0iGCFsxFbCzA58DHdk+QvlUKNS1GPq7Om
e+lGm7OXK+CPqdGV2as6BRlYxzm6JHk9eB7e1dB0NrmHWbjCLN5g1m8ulo9/
dy7MFXcOZ9QOZtUPvmzty279nNn86fmH+rTKj0/eNaRWtqZW971onC7tn383
vPh2eKZibPr96Fzl6HL9/Fr3j6v9m5vj66M9zJfFrarm+rBnQUYBmkKGglSc
jJT01Ixc1PxqnMp3JMx85Kx81XSddUV0ZBiFeDgVOeVshdS9JLR8ZdR8ZNS8
xVQ8xdzDLPJeFva9Hxl5OzJc1Nf9qr0hqaomsar+eUNLYU9LbiuIYEXUq2h1
fkcBhDEHtqEGZ2SASvEd4nvs2L58JHeVVFxFlI3o0Q08BMcWwLAtXIEWW56W
YFoLZ88BWA+EuwgjbRnwf2tib7oCacZwPhGktwCsmQsrhxegJ8d+oIrzJQjR
pI+oYcYvZsBWosJ+ZQB8jQA9OFyADpYpiHiKxm2/A2yEA6C/k0UDhvIEH0zx
MfeBKQekmwZ1iyv+77uwbDVASRj7gS3NWiCAeQF0uuN5mVB8ugPDxMP2HyCr
tODcVLgKdPg5LFgRNAR+aKxGHuw6GrgHN3WAPE+KiXWqoma+mEALO1Wnrtrn
nOyMKLcSa5lxLf4+a72oKGf3VC/3JA/vZ97ZJc9/D//ELGOgYsJtqMvWv79X
e7Mb3xonxnKbx7PrB3PbhvO6ul62tmQ3fHpR35BRXfu0vCmtqi2jrje/ZbJo
YLZ8dObt8Fj50Ej50M72zfTC8vuuqsdl9x1SDa0eKd9+pK/rrypiJIWS4+TX
ZJc1RytYgeKTW1qHCy3HQ4Omp2GnEVJnV3UR1/aT0faT0vAUNvCWjU991PFh
eLRyZqp6fOnz1+HC/ubkD7Xxb9tetfaWDXcWDrQX9FXFF78wUU9SIgiRgLmY
86QHKow64bdoI/z5iAOkFWJ1rG4LoCzZGPLYKXI5EMYoGD0lngojdSczwbI8
rBoKp1gWdCSjbHg9WvAUV0CeHStPD/HJEvASB1D02F1eMJBQFQaADz/cWQCu
xw70ugAniViv9GAiTNjRurB74jDQbhwHAf2mACj178pie7Li/RTDnhDDdePB
TlGDXz0GVv2RqUrI+44MdabYGD/kXz3wd4MpMSFW3eBH+rAlQyBHAVAVINdW
YGIgJxSiIwow4YsWpHPlJAuRoi129y90DklXsUxT0i/U1J2IzV0q66wszX+a
4F3srNhy2yAm0sMtxcsj1cPrqUdswYP+rs+XPy8wm1AlITQp4L+pqUerh6td
84vlg2Nvuife9I0W9vQWdHYWtLXlNoNoNmfV1T+vasj82J5b35ffMVY+MFMz
mVv3Mrn6QXiJj0u6hWWstlWsumOykV2ckVGovq6fmq6PuKaXiLQFD68SM70A
DQ0zNTUNCZMQnbgpv7aXrIa/uLq3iHuYVUVZ5Xjj18nqqa/Ni+vjW5NVcy1p
jZ/S6zpKB/urpzvLRsBVl1hWbmf+Tps2QRTLXJ01zkFsyZRyVg14rs8eZqjt
IiJ7V1HTTYIlQh7HVwopT4fDTw1H87OYiNA2KGN36QOuPHBcQiJlVsLPRojx
YCBaDzBlx170Qcx4AFb8gA4P8osZHFSMBUpAvCp0XBvEC8zZY514A4VqWDps
QKsHvMYc/k4SMSVA3KmC1ekJ1BggeGkR0ZzIXlOs51owNy7Yvg18XRXerAJ/
IAfc5ke85cWZ4MVq0wcMWAFnbuRbVuSUAS7oT1MUcJ3FyfUZaXnIcDWlGcwU
+WxZccKl4MXGfC0Rz4utvYpv+xZa+L697TMQlblV0TdV15Hy8pFflEVEmL1n
optrgptvmv+90nv3C0JeFCQv9c9Bl4lO/jPg/66h0vibm7PDi52lrW9ts7Pl
QxCOJQNDZQN9Rd2d+a1tuS2tr9ta8zsasxvrM2o7cpr8s24H5LjYp5qbP1YF
l0Wsmtsz05Bsl7tZXkFPHFwTjYyDJSVNuOmEGcmZySkYSGmZyTlkmGXtxNR8
JI0DNFPS4yY/z3/r3Zxq/rI2tL+3eD3z6XvH808d2S3dVeNDH6f6Ksa7Kiaa
M8DIUNTorhXAikCzk+mJMg6IsQ2Ik0TK0jyytnlh5BV72+OxlU+umVSFEXBf
BCZOji/Ex6qvLJolCp82A6p0AS4qfDZKongl5K8Q2JcHSG0GrCJd5PF92HwA
DDTjvtJACwd8khsnjg/e5gbrc0Q4cwGNnFgTaHgGH0IfDZ+7C1vwgz1WARLF
cJ/J4f9IAFYjAFsBQJMXMfYIam4fKgvL5MZpQyH7TbA+6gHW3DA6AuwKQ+RO
DLxUDXCTQj4xx283g136wvrlcVzQDJGi9H4oFjdRKQ9BKW9Z/gRb1GtZoMlM
sjMstSs+r+nes0qnyLd2QS2Raav5n/aa59qqakOeBtrF2ID2yj/DN6Y08tG7
h+6pDnZB+u/zXl6snWMub/5dQeWD/823wkCXyC4xx7+PNkdXl5pm5qpH5qsn
p6vGJz+MDlcNDZQPdpZ1dBZ3Nee3WSdoW0Trmj/SMYnRMI5RsknUv/vCObbQ
P+FNYEx+kP8zB11fWR5VNBg5qZhIqRmJ6TjI+NTYVJxEg+Pd2praN76c/Z67
+Nb9Z3P6dPsbZr5trTO3vauge+zD3Gj9fH/VbF/lbHtR30jiq/mIOHteJlIy
QiLqW3poJjsKUlEaonBjm9d24WlmvvF6ruV3tLvM4LXqcB80sSYri460iCkt
9ScUfEQR5sVNoMXLr8F6a9AIfvoAUXcHLkCEPaKKd+AM9LoDdgLAK01EsRTS
hQTbXwSa4rF0F7Bkx/JBIWpFsZ/JwMzRsNUw+H44rNwFFmoKBApA12+vMoE8
a7guF9DhAz9NAz57wKxFkRYsyOUQ+FIAkKuKYKPGsuFCnMUilt3gpQ5kzU/Q
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
PDOjJ+FtW+7O2Pr1yMG/7vW18sHFwq7hzMaGR68rHr74FFMwmlX/q2zkqPHH
Yf/fsbaJqNgoCRU+NhEaLiUubnk2bgVGTQeJlwVxy1PLVwf/zUq6wYBkPL+C
LgaeXl6fn12fX0D0vLq5BuGzjFO3iNcBmWiZpGcepaVmryCgzsujICJlLGri
KW8VqmR/X6+osuQvGC3XMDu/MAd/bo43b46h1iWYg7l/B1OXO+OXOzPnJ+uY
P4unq6OH820r4zXT32vn+yqHDDXV2dhoaFDkBFS4eirSVTGFjQ9K34blFEW+
qk6FzH59Zus7Z8dSYSBeWpBPkptJlkFGkiqVByueFWGDwjXnZtIT4DNiJi2R
hycJIzQob0kxUqlxM6VzE3ZzYTuwUCnQsoRTkleYkjffJfXiRshRI6fsgSFz
uC0fLEAU2cIKHxAGhu/AXmoDeAT4/lz4O/qIz7KI57eJc4zJVx2xdv2AIW+C
yUy6TBX8ZVVEPS+OAhmpCBW5DgPhe3acQGZ8MToCc15mO0kuXznJh9LGbiJo
byaKh5pUOR+TX/RXp3dWJiX5l/prf0gPScgJS2yMS+tKyhl8mtOX/LDcJ6Uw
+u/kH8zi1dXk8d+6me/FXbO5rZ2JFXVR+TUP8z4nlM3nt/+pmTrpWDkePRhq
n4p6+EBCWZhFkpFHgolfBaXvIxqWYfO+rmht5Tcob24wmP+1XDuHOsRioB6/
B5iTk2ureHWzRB3zeMM7iYY2sYbaAapc2jxUbCzUrLTs4mzC+uzWXlqtre1b
65itVczuyvX+9r+TjRuo0dNPzPHi5en8v9Olm4P/hi9fbIBx9ebv0uVS16+1
5rWFli/muqZMbBTsHLTUdKTOZncaU942PCx+B8IX9bom/WP9i+b6nM+ViSVV
4oyVapIK3DIALj4lNVksN34lCohG4Ruzk+qyMd0Wlo7nulUlgHDlvKXDwq7P
wqjGzOFIRxHAhKtAT81HRctLQ5ckjduqDDiwINWosL+qYXWrwEJEYY8NsWMl
EUnciGUPWKMtgpMan4+SqIAJr0sKWaoIkyYjKObD/ymPbNSBv7CmkaQl9qUi
jBGlNOIgMmTFEaMmNmVjNKGmVaLFdxMj9pEW91NUT1Y1Dhfjd+CgSxRGvgtU
yOuoSK7Kdn3q5+arVvssuPiJW0pNxLOu+LT2+LiGyJDXLrr+wn7BplszW9De
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
Nb73zDs/1m90r/3qXlsZ3gCB25za3Rjb3587BnE/3sZ8A2n46cdc22JvUc9E
zfTJPKY6t4mclAz0+5AHxMOHCHiLAJSjjIyUGTGZdU8/lEcXloS9fBtfWvu6
p7Gw/8PL9oqk99Wx731C7ZRc2XhMGGXkmezRdKBnIaYggb76FgkpDamwOIez
NKumArW4DUrFkilNguKlEH+SoXtOcGb23cws98cFwU9T/aOtTTiiBal1rZlk
XRkVXGgVPJhsvCRD7UTMArQ0XPkUHUgVncjknSgV3VlM3DmeeVrc9pHyeKg9
1TD+q2rs18fJndGtzdn9P6Nbk1UjY68/r3Wv/Pz8o67qk6mvDmjtBY3QgsZ8
wrY8Eq4C8h4iqt4SSu4isjaCAkb8PHrc/AaCwkbCIib8ouYiCraySrbCoQ+9
fq1tYf5BJ4Cg6gC1zfXezcbExteKkZWmpd+Df7dmTrbnL7+P7QzUTTRm1bZm
tQx/HJ/uWpn6/LXz4+Dn8o7tTczh/s3OJgai2ynmDEqvN6cXENeg5tt70Dr/
L/eBryfboBy9BgEFrcTNMWbwY0/IPfu2jw2/Rn/97P7+vf/n76n9zelT6IdO
nl5sXZ0fYrYWjsDHaXvmcr59eej96NbYwcbEkba8Nj4eDjExmPoIiYluEROR
gGgy0pGnxaY1vWquTCypiC4tiiqoe93RXDJUV9Bdk9tWl1xbmPDKM133Toqy
caSonouIpiaKVZGejJOCiBraCiABXaQ4Q4CKiJY6jYgtpYWXdLaG6ktF7SeW
gQX38/IjXuX5p5aEZOeHZzgFasXpSzjYCyq6oVTcGLRCRGzC9SMdNUwceGXt
aRVcqZTdaLR8GXX8uXVDeJ1Cpe2C5O8Eiva39vxpXNion1n/vLw3d/5nYntt
cGPgddtyy5dfQ3/XBrcyX2ZouIlregiqeYvoBSuYRiqaPFA1ClPTDpBW8ZBU
dJGSsxeXc5SQc5ZUdJZUcpRQdpFTdZcEQfQOc1v88h1kImjNzq8gcXh9frO7
cggm2dnyEfDx2B4/BEFcnz2e71rtKuque/6h4037TMuX2eHV0a4fe7tg+rs+
3Ls8O4PgO4Ha5d1AXNvGnB38OwGT4CUEH7T2oOsV5zvXFwcYzCFmue9HUmRY
Z0XLz5G/37t+LPf8XJ3e+TN3/nf2/PfENtQ7/RhzuonZXjg9+PZv7+u/qbrF
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
u5M9y/8Hb4QOgg==
     "], {{0, 113}, {150, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{150, 113},
   PlotRange->{{0, 150}, {0, 113}}], TraditionalForm]], "Output",
 CellChangeTimes->{3.5272041217974377`*^9, 3.5272041900972424`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "oil painting", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Input", "Input interpretation", 1, 1, "Input", 
        "ImageEffect[%, \"OilPainting\"]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "MInput", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ImageEffect[%, \"OilPainting\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"ImageEffect", "[", 
                RowBox[{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    "%", SpanMaxSize -> Automatic, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"image\"", ShowStringCharacters -> False, StripOnInput -> 
                    False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], {FontSize -> 11}, 
                    ShowStringCharacters -> False, StripOnInput -> False]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> 1], "Grid"], ",", 
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    "\"OilPainting\"", SpanMaxSize -> Automatic, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"filter\"", ShowStringCharacters -> False, StripOnInput -> 
                    False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], {FontSize -> 11}, 
                    ShowStringCharacters -> False, StripOnInput -> False]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> 1], "Grid"]}], "]"}], 
              ShowStringCharacters -> True, SpanMaxSize -> 1], 
             ReplaceAll[
              ImageEffect[
               Out[], "OilPainting"], Labeled -> First], Editable -> False, 
             Selectable -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://reference.wolfram.com/mathematica/ref/ImageEffect.html", 
           "text" -> "Mathematica definition of ImageEffect"}, {}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Example", "scanner" -> "MInput", "id" -> "Example", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ImageEffect[Image[Array[Sin[(Pi/60.)^2 #1 #2] & , {120, 120}], \
ColorSpace -> \"Grayscale\"], \"OilPainting\"]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"In[1]:=\"", {FontSize -> 8, FontColor -> GrayLevel[0.35]}], 
                StyleBox[
                 StyleBox[
                  RowBox[{"ImageEffect", "[", 
                    RowBox[{
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxMXXdYj33fTmZlS9lEmdkjJT6IyJaRVEb2SiJ7ZZQZaZCdSFJGSdL4pj21
9979NiVE6u097uv8Xc8f73Ef7308x3s/7+06O+fnm4blQeMdigoKCse5/9mx
6cicI7Y7qf0Aq49WtkcpfkDykK555+nfNAu3Dbb2JNoh++fe+wYdcI2Nr8m9
TZZ1nobHvZzp8u6Hagq2bqR+90vOaQN3mrV7rJak10Na/r3hycqyx+Su4mGz
OvcprRnyNMFmzjNa8Lun5vUXntT9a690964v6OW9mKGPD3vRsf1rN98teEnH
0kQll+a9ooV9mWSHtw/N8e1cqNvDl5zOdvzZautHKxe03gwqekOfD2g0vdV4
R2dTe+s2Z70j0aYLE+ZeeU9/44fbnZrlTy/++uT5Sf1p8+qcohyPALoVun36
z7UfqGvDgGsqXQLpjnvkBbWQQJp+cGycmtVHSjk+slVFI4istG9nNGYGUcpD
Q0Gm/SfyfT5B9EI3mOb0nnp+nziYrmYsWKX55DMlDzJrn7Y6hPIfHZ5n1SGU
9nne8W/5GEp2i6Jazu8JI/8H6l9/DAynU1ne8aZfw+n6kbtub88z6hja8dvJ
/hHUQPdHutlEkH2LpsGrpAjK8Ivp/0HzC2mrPz378cwX+qxdtPBdzhfqP9TL
wGNiJNXaTFh29UokbVbzmbq7PJIER42/ztaLIl+3Hd+UnKOo3/CRVsmiKDp8
uXDg5QXRtEMxI2Xqo2g6G7NxQ15jNAX9TbplsyKGGmvPL1Z8GUOOv/PXO7TG
UFiR/q12G2JpxH3VWOt3saT/LD01q0scZdYKzo/fGkcnfuT5nQyOo2//ho4L
7RVPbn8XpnzfE085Ibm7B0bG07WmXRkzByTQpkO3SoxsEmjGL/HWFYkJdPm6
1mTD4YkUYF01bPLJRNozt7Bjj4xEkihEfigdk0RH9EwUPe2S6EDXLVEb8pPo
63zvZIXJyWS+T7Hh/pVkkgoXqYwqS6bA3qbC5zopZD198A7VWynkG3phlW1N
CrXMPmcXN/srjb/dI0XZ9SsdKNPpQuKvdD6ufZftBqkk2GTvceJ+KqmsL3h1
7nsqebXv9VdPM43uxkaNf7MyjYL3PTbpfyqNepXN3nbaK43W9TSYlZueRsca
jBPH/Eujwa5qfw+PTqepw2Z9ClyTTpaCQ2Lp2XRyOmF9YahPOu269237oux0
Cl3/7uxOhQwa0N/m8+lxGTT5WbPitfUZtGjwQANHuwzyH/1ox1XfDJpftn7d
qdwMels77N82xUzqYpu3yGB8JvU32zys/4ZMyurz8FD1hUz6kHhipLdfJg3d
VTdma14mJboV7ezZPot65a2MDxyfRSaX5uqu3pBF5gXvn1dcyCKXLr6Ne/yy
5LgFXoFT4BO4BB6BQzn+ONwBb8AZ8AVcAU/AEfAD3AAvwAnwAVwAD8ABvn98
9/je8Z3j+8Z3je8Z3zG+X3y3+F7xneL7xHeJ7xHfIb4/fHf43vCd4fvCd4Xv
Cd8Rvh98N/he8J3g+8B3ge8B3wH+/PHnjj9v/Dnjz/eb85EfporZtLOIHIeZ
ZNO8UR0Hhb3Opol3uv+aoJBDzOzPcdu1OTR5XOjfW9455GnyOP9Mcw7dnmBw
YM6qXHqi69Ur3TOX4i4OHj79Vy5FF2/8s2dJHiVpHPhp9SiPnI9+sTH4lkcP
nDSTa+bnU8jvqM0bXPPp1/yJ1+/W5tOFDaa+nroF1MvfXeP09QLactfPaFhx
AdWaB1+8NaGQUp4aTUw4V0g9HNb6Jqe1/e8/9MzcNYooPTHh4QSbIpo2dFbG
9cgi0j2qY/GudzEZ/sl58sCymNoFPGte5l9MLiGuOVHtSqjr8SFOratKKCdh
6O3WJyVkYlCvEyUtoQcbd0iMZpeS+oOIvs7XS+l6TrTa4/xSsvZZPy6wTxm5
2vV7fEqvjLLS5qkP31pGe46/XuLtUEah0gPibm/KqDa7/J1xVhml3n667Oif
MnqTe+nI8WHlNHzZ6+INhuXEuh6erb6/nNQWnzUKcConvVT/IO2gcop5qTfn
YlE5rX50yfljuwranbHAKnZkBf1aZXvZf2kFadxff/ukdQU9n25tOMS1gu7P
ddr8KLii7edtmvOv4gr6s+HWA23FSkq4YjtRf2QlXbE/2mXkkkq6+Ty1VHCg
ku6oKx10cKqU8y1wCz4FXsGXwCn4EPgE3wGX4DPgEXwFHIKPgD/wDXAHPgHe
wBfAGfgA+MLPe+AKP8+BJ/y8Bo7w8xj4wc9b4AY/T4EX/LwETvDzEPjYZ7r/
eKQ2j4umH9f8TMbyeNibppy7bSSPg3EBl85lD+O/f7cHCise9Oe/+xqzMZ2f
9+S/d58xZx1LOvLfub3yhVrdpkL5971ISTDjhbBI/l1bDomK6lFQLP+etYOe
/94dx3/Hi+KStz/157/f76Oel2Qs57/bpc+VDk77wn+vDXsfVO+fyn+n0eb1
G44857/PPT/ifsxX5b/L+gF2f9Iu8N/j2NNBX9S+Vci/w5Grv3zqas5/fy/v
6ux4HVtJizU+vT32t5I6+53cLppYRRGCX/c7bq+iEwbT98fcraJ1lfH1Y5Kq
yN27eMmUlir6NEDnTvGkapqzdnrd2G3V9Kwm70B/12rK/xi70Du2mrwylrrk
/Kqm23O2nvMcXUPWoW8ndDetoUvXnJP6Xq2hpgHD7II/1VBO1IjTv2tryGDX
OFG6Wi0pq9q3LFhYS+sfL65bdbiWnCatLvrxtJY2ZC3pOelrLR1peBfS7m8t
xadlqO8ZVUcjm3I271hTRz9fh6c1nq2jt7P2vOrvU0fNO+6OTcuqI2dPqVu/
1jryOtg8pX60gIrtdReaGwsoa3A3tfWnBKTQI01W4ikgRYW0IT+TBLTgrPH3
+w1t/7ne94KSBwgpcHlp1LV5QkqO27U3a5eQng6ybffqppBeFawu7xwglPMu
+Ba4Bb+CV4FX8Cj4EzgFX4IngU/wIvgQuAT/gfeAR/Ac+A04BJ+Bx4A/8Bb4
CrgDP4GXgDfwEPgHOAPfgGeAL/AK+AS4An+AN4An8AT4ATgCH4AHgB/83MfP
e+AGP9/xcx14wc9x/PwGTvDzGj+ngQ/hqaCHK/Iqyd7t/bYTQ3hc3Hq0f8h3
7yoy2Vz1VVfC4yH72qo1BYerydNzruKEjzwO3qr9bZ8xs4b6ScetHnKC//5L
9W8+9vhVQ7fJNzhrOv/dbz+VulD1XS1lXNvUMEjMf++bp+SW/txaRyF59Wei
H/Df+c2/EzT7dRPQrl5j395fwH/fK7qdfbX4vYC6XVsdYV3Df9dJZT71G1cI
ae2DmYX97fjv+cEx21MjqoQk9n44cp+qiE5JDHcWG4hILepy9HEbEZ0d0yVj
1lMRLfiuNVIrRURTc4SbpjaJqGy7hsYOTTF1fW3RL3iFmB75d/41/riYXsbu
OBr5VExHLnitt40XU2cf4aaFMjHVJq2wmNxXQmWvf4ycqSehI0e73tuwSUIv
Q4udnewkJNNJ61DhKaE/644ULY6RUPsb1/vEVEvo/KGePus6SqncY87LphFS
Grbjfv9386T0fchvteObpGRw6WLoqpNSanSLnaDrKqUDu965T3orJdGDB5Nm
xEtpd9jaCUZlUgoyGpa9+5dU7m+hk8G3wC38pZxfOX8IvIJPoWPhz4BT+Cvo
UvAl8Al/A36EPwEuwYfQjfAHwKO7S0+NI3bZch0IvgMOi89FryiNzZPzW8WK
mzvdLHn8gc+g0w6tSHQ5dY3H3SM1L73uarzuAl8BbwUxYc6nuvH89F3Rwbwo
gccZ+Ai6yOZeRO70mTy+ItViu9UJKmm+s8/hNfN4vgGuKrJ2n/Odx/PLhskV
bqdreTyBTzbMXdhrQV4Nhc9o38l0JI+jyQMWdRjNasnYRPVDgRLPF8DPO5dp
zj8qeH6YfGp3a/ABHjfgg77jp3r5TRPSqfhkrzNHeLwkuz5dY/RNSAGlu1RI
W0R37y8dWbOTx8naCa7LZueJaPL5RVW13cXUf0P9r5kLeHxkVAVtjfYRk8a2
nglNhWLa+ql/apIKj4sKl58u+rsktLggWppzR0LtHh0c2DGMx8ONsiXlqt2k
dMLO9Wn9FCmdWzbsnLkJj4O+lqt8Uh5IaX+ilm96iJQUR0TrmBXw3/+817ZD
mnrLKP24SYTyeBll/I048XChjDp11hrkZy6j6ZdOX59lI6OowWvDDe1ldKl9
fljKPRmNTax6kfpKRnHbu7xYGiyjTB235rlxMpq68LXC20wZiax1+rmWyEhW
3CGsvlZGRZbhp+JkMpqs1tjQ+2fbP++7Zl7WHxnduvlJ0rVFRm7fVLqFtMra
dKCVRmnbX62KR4w50fb3I/W3T7/6V0ZhK8329vglo1DvNn37XUb3u2XOPieQ
yXUzeBc6GXwL3IJnoYPBr9C9wCt0LvgUuhY8CpyCP6FbwZvQqcAndCl4EjoU
/AhcghehM8GH0JXAI3Qk+A+6EbwHHILvoAvBc9CBwB90H3gNOg98BtyBx6Dj
wF/QbcAbdBr4CroMPAWcgZ+gu8BL0FnAV5k0t2Zrs1DOQ48H99pve5XnH+AK
vNO1PHa9yw2eb24VTKo3UeTxtMlouFpva55f5q+Zbf48m+cV4Ah8Msz9lFKl
A88jwV1edt+UxeNHKP18bkU/Gc1gQ+K66sjot0jzmscaGeVl/ktRtuJxc3fM
Ab81D2VEWYaqk97JaNZN/zsFX2T0KOSAbHU6j5cluys1PNu+a89Vexefqm/7
7rf8kg5qktHEaQ1PHP7xODHz1+sR1PbXL3NjvU61/f2/XQz+dmn7z63dctts
cz2Pj+EDDtCetv+7nUT1mkPa/jlLPAcXPG775/5M/XxI/FZGIze7a3Vp++91
qvLw+obLMtqmlXf97QEZ1bXvemRO2/8fQi9ZpccMGZV2KM4pVJeRfvglK+lP
KQ1YHV9fmCkl95dO6V5vpFTW3vvx6rZ/Ty+XXehTaiGly2FqPYzb/j2uannp
6teh7efQi1tpP7IktHdkp+7j2v69V+vURaw5KJHnycil4G+hk8G3wC3yUuhh
+FPwK/JG4BV5IHIa8Cn0LfI04PS6psfVGxk5cv6EP0QO8lxpbd+pJjw+wZfI
LeDvoEsHB1333l3L4/JM+KM1GrJyuf6EP0MuAD4EHqv39+6gU1RFep3H/LA2
5v0V+G9GuuW+Sm8eh7um9B7pfIHXjeA7TYv3byw/1ZF9/ZmNKgN5/L0UrUzR
zef5Df4GOtDwd6tYdSaPO/AZ9N6cqS9Dqg+I6fBNjQmfPojp5Fj9pOzfYjne
Mh9OV88/LqFuevs++H+QkNuPXhuZRCLXb+Ar4GzWh6EBVwJ5nSZ7YXB4WBee
n9Tb37vfYSWPL/Ub7MCAazIaeuxe1iRPno8usRsJu5PbcJGXccS+iMeVePoi
l7AGnn8SJm2YX9fGM8Nu2Vn/asNT9c8eRootPJ7AN24+Dn271sgowKt8kXKe
jHZ+X1jXuY3vQkNmOXUK4HEkyV2f1v2CjJiNaYfBO9pw6z/z9PQ2Ps0+1Kxr
NlxG45Zn2Ts18/hxbLVcO8dbSmv91saHnpBS8fye780WS2ndnq0fh6pKqWV8
c3S3Yh43acPcO53ZKSH9/bRLaZSE+sbsGZdTJaa/9SW3BU/E5KClpb5kg5hm
D6k+29JNTDYzFiV0+yKi7auW6Jw7JKI3UapGG4eKyGIdhXkltun8ZQNu7z8s
pHtB4j8B/YW0XTz+8OUwAa3fFvxKsElAFg3NVwX/6ujYNQ1dx/t1dOnIhL7l
0+ro3sJRH0TJtXLfC78L3oW/hU4G3wK38K/gWehh+FTwK3wp8Apehf+E7wSf
wmdC3wKn8JPwkeBP6Fj4RfAm8AlfCL6ED4T/A0/C7wGX4Ef4Ovg58CL0J3wb
8AifBn8GHoQfgw8D/wGH0JPgPfgr+CrwHXQj8Aeeg1+CTwK/bZl6allS23fr
5t6ZNizhceeY29Wl5CavA8FnRtNvbG/OllGvTV+fTqnheQx4G3oodvGc/+Ev
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
5Ngnmum4cFBBzDua/FoQNHzYM2rIXF8Ud8GWlMM7tRt+3p01Pq8acHG8L/sW
6fR9SmIgG59aEuR0PIz1mtDYVfl2JItMUG08vjmWPbJWPec/JpEpXRyRnCVJ
YQMEOh/OZaexcVMC2Jh3GSw5NqHzSfssVqyp0qP9hhzW2yrlyAbNPDZ0/+7u
PUT5bOKe0QphrwvZzO4N2U07ihlyZ/he6Gb4XfAu9DJyKfhb6GTwLXALfYxc
GD4WPAv/itwXehg5L/gVOhh4RY4L/QtehS+F7oUfRS4LPkUOC/8JnMJ3gkeh
b5GrwmdC14I/kZtCzyInBT7Bm/CRyEGhX5HTgC+hW+EXkWtCrwKX8IfQqfCF
yCnBjyxQq8v1dhK5D4Quhf8DLwKPqY9EdTmJvN+DDgUfqt+bXGTXt1auP0/2
e9knwJn3deBB+DngEHpzXk+loC72PP9BZ355tveN+elCEj3c5FHixOtL8N7u
2UUXu/rwuhL4e3E8x+Po8CQ536mHTRlTlx9JN+L0xllvDKPvynaa0t8fKGDg
o5W6I17JeS7+weC7jqpOrMP5qyZpm1+xx+dSi0ar87gDv715YGK8pGcc28oW
vl08OYk5u/7cH74klWXO2bwj2i+d1U/dE2TwPpNZX+prtuJtNouIz2xn8jKX
FbZod864l8/inh++O/0ij7d/W5wV3eeWsrXVh1MXXS1jj9atMHpzoJxd/fro
5dzlFez9p0dNEaMq2ZTpYz7WN1cyt3vnk+8nVzHpI68P59yq2cuEVef2bKxh
x512Vmv0q2XYJ2PniL0Udhfob9EDIU9GLgV/C50MvgVuJ+lI52+/XyTPh9Gf
Im+q8y76OVeX96+nxtSe+NeV18PIe8Gv+113Dm6/nccr+stzX0Uuu914f4r8
1iX9dfG/M7zu1dfsf8jfjc+HwKe22vcqfNr4CHkscJrg/slT+Z+UQrr1X54+
V0ZXG8xvWJ3k9e16z3+Tq7/y+erQs75RCn94/oS/bBkUfDlALKOuerVXTmfy
+EReCh27Z/x54avOMrq9JPzQkjadHag4o0m8nfeP4EvkNAlO/f3Er8SUVlPX
6+wIMfV7YbFU4MzjMnLluUrljUJaY3t35ah3vD9E/nJnT1OJkR3Pj3uvsS8D
aqrplKtai3+3asqjDSk2E6rkunT0+2MeN815PF6aZfQ33qaMdjv3PnRIVEK+
Cl8MDGqLaEqvZIO3+Twf9vNaPanDixz6PV174tJzWXL9CX/X3uVD0/f0JLK4
5Vj2yZTH4anK1lfil6Hk/FEpLuhOAG1TWr9lqfS5nP881bVs6gc9kevM6hDL
v3Z/g5mul/I53ctf2M6cHO/WTrGs0NB3/UO7RKZzz/DT/Yavcvzpau6v+1uY
yRRVNHaEt+f5bmzTzQ79ZxcwZddSx9XLi9hrxU1r168tYdoJKUZsdBmbV9u6
uffwcnbNI8Uss28FO2Ut++vfvpJliO/UbRPxuGted/9A95fVzNbVJ/rYyRqm
cua06h3DWpZoP11hoEody1oteJoRV8eGPNty/9RpAduW0nVi4Wgh8+insSY4
Wchs0pLCy3aJmMnEq61D/ohYL+trVxZcFDPvj+MiNdtLGHoj9EXoiZAzw++C
d9EDIU9GLgV/C50MvgVu0efAzyIfRm8DnkVPA/+KXgZ6GD0M+BV+FXhFjoRc
F70KeBU9inz/wule9CXwo+BT9CLoQ4BT+E/0HuBR9BzQt/Cb6DPQY4A/0VvA
X6KnAD7RS4A3oWORl6J3QN+AngF86fhz54uVP2toQUN+k7J6jTynQf4JXIIn
l26vWxWxoFyec3b+7eHvvbxE7g+LS95+G1rF8+M9p642N9dkU0WqzoiYFt4P
ZqzWtpthlyzXpcBjact8FbPGELn/2x6Y4aUQ/JTyg01O9919jF0wO+wqcvKS
8yH83vnY9ZntlkUz8xf5xt4aCXL9OcU1uoe5Cc+DwOH6buUS0fI8tmJ70yKZ
YwGb02BVIo0pYlrUuVK1vkTOf8GUXbbYuZw9fbXd5JVbBdv+12N7Z+dK1u/S
+5L2V6rY1NNzts+35XkvoL5L3HAdHn+7PgTqK+bUsfzpj5qu3xWwKJ3u+gdX
ClmNSbjvzn9Clm02yH+Sh4g9jep69ZaemI2smmpulCBmFl+iTUcvl7Asq+S4
PzESVryyXs15qpTFa3o1xLlKme6+wHVHxFKWP2m+4zEdGQtSVVsbeFTG9qUv
+9rXR8Zslxg/upwuY9hbIbdC3gzdjL0Ucir0t9DLyJORS8HfQieDb4Fb5MXQ
x9gbIXfCngi6GHkw/Cv2QNDD2PuAX5H3Aq/Y6yBHwh4H+hf+FLkR+kvoXuxl
kBOBT6F3J6itbnyewON08qbJN0O38DoXeSxyIB3la1f6SHh9i/4QuQ/yVvDn
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
+KtG5ZR29c6UBeqV1H7jFWeVr1W0cO5t27R9NbT57KzDHtJaat197abfWgE9
P1Kz0fChkNaeutq1IkpE7nOrFg1OFFPN0KT0UD8J9bXcpfT2gJQO+2tN7qYk
o/NGapcGnZNR502H1FamymjNr8nnFzTJ6Kryn1WJzTIS3/mwrCi/Da9ffK2f
35bR2ZGqX05qyGjKuWmlVTek9NYiebdrpkR+t4B7Bdwp4D4Bdwm4R8CeGbsq
9LvImeF3wbu4K8A+GTtH7KWwu0B/ix4IeTJyKfhb3AGAb4Fb7P3Rz2I/jF0/
cmPs+LFvgp/FXgJ7YPAsdvnoc7DDRz6M3T3yJuzs4V/Rr2JPjx09+BV7XeTA
2DlgH49dPPpT+FXsjNDLYO+OnTt4VaPiXhebGgkr7LtpaekzPkfCfuhrt/09
TGt4f+pvuW36NRm/T9jC6V7kuuu8vTqd7MPz6ZorOtvKdcSsWVSctqM3j1P0
K/Cj40fsGNppQjXTuCqzq9lbKc9v0W8eOZFc/H5UIVNcc71pTyPPo5Y/ghvT
TySzukrB366XoliiWQ/fNMEHuf/8c1tJaWH/t/Kcdtoktx5j8hNoHKdve5CP
fal/Non0N5y0l+ZT+zG3DI924fnzWJjS3s7lFXQgqHxyzmveb5py+DxtlOG4
xVJAy753/jwkUEgjTtLVEdUi6imx/Vj5TUyNb8ePaJ8rodhvyo/Wu0lpqW+W
ZfV4njdP9V+4NrtCRi5TL89d2vb9lodGjBv1/3do5WnjTobIKG9zL5PrZjJa
Fd6wKzdDSmduZg3oOVxKge7VhgOXSGjgcdOAXsvEZPh7rc/sMSLSHmS3tH+l
gEyF+54uO1XH/74CbreRwr2ngb3GHm7fnMztNBZyeTN0M967wC5Dibu//cvt
MXAP9IjLl9O5fTL0MvZS2F2M4/pb9EDIk5FLwd9CJ4NvgdsA7j0H4vLjEO69
hm7cjuIK9x4D9DHuT7GbQF6MvYQT916CDde/6nD3Mqs4XbzbpckrZH6IPB+e
NrRqQt3YF6wblzf9rvxv3wv/uulJ4rb1k7JZJqeHe3B58FGOX7FHAl7H2Nut
tLpWw5q4nQP2uRWcDkZ/upHbNXzo/WeQymApW8D1MutsqhJPbpWxSG7HgLwX
+rcHt69FjrTBo3Dh1M4y+V4B/hT57pIZ1q+/bed1bye3LmpvX9axSm6XMIbj
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
LH+HlXvPEe/C4X0pvFOD9y5wN4/7W9zx4R4IdwXYJ2PniL0Udhfob9EDtVP9
L09GLgV/C51swfEtcOvhERMW1rtUfk+H95Fcufsc+197LX4bxlBPlf/2/ton
6/WiNu5mPz78tx824d5zmMjtEZM3/FvY6XK2fN+0Y9CLDtG7SuV7iTru/hT9
q6reSI3a/nyfk5Rossp1lYid4/Lhudy9DPKmkss15btX8v7VtWyFYZ8/vB7G
vvcFx6/2kdmzbG/yeN27Zu2ot+fF7L6Z1cw5Y0XyPdLt41cG3xPUsls3/bx3
dKyR7xwMFEbvCowtZ+Vj9zkOrSuR96cre9aPmPQ3ixW9lw6Nu57KIrlexqth
7dPgGR/YpPe640M3HqcjXN6blJxh+G1nLLkvFbfuv5BGClyO9PT76LiZIQWU
PVooHHenVO5PWyPFofMXVNH7AVEtfkt53fvBMSLFtrDNh31Q2D3bQkQbOT49
emL7Pd9YCUW9PjO+9JWUAjicGv/720s5RkY3fonUf7X5L82mjcmJjTLSH3Mz
3DFQRkUBIc+C9WSU2+vT0Qn2Ujp81KZEz11C92/vDXGxFZNa+7PtTQaLyKZe
VPTvjoCe6YR3ssyvpUN+qm4BDW0611Cl95HqShpZMrjpoH85RT3sePxgWAlF
FQptJxXn04Eenl5aKVk0yDxs0trxqfR1wPUYZh9NCYtCd544EkDP18Wu6rDg
Avv52GHd/Haf2DvdCmFmbCybvCQp6Nj7NJaQHTTdtyybNScdSbSpLWArlj53
sAstZfW7sybajqtgn0sHZvY1qWID7qyuGmpRw3D3i3tf9L6478XOGX0vfC/u
d9HzYs+MXRX6XeTM8LvgXdzf4o4PfS7uCrBPhs/FXgq7C/S36IGQJyOXgr+F
TgbfAre4f0VPi3s6+Fr0s7hrxd4fuTH2w7hbhZ/FnSr2TeBZ7CVwh4r+FT4W
fQ56V+TDuCtF3oTdEvwrelboYdyJgl9vHnpY0vEtj1f4VpVjW5TXZfM5MPrU
M8LbLdJZ+Uw4cJl50d9MeY8Kv2pnGdfjZcZreX96r1fjwKPicEo673mk89VE
Oa+eUpn6S78lV+5TkfculnQw1V5eSf3rq7b6HOV70rknu/eWGgqoYt3QvZNr
hHJ/KnVV7qJ0UUJPD342Pn6K70X/fBsRlvlRRssUFQTGv3g+hS+1T1MccI94
nBZ2/Wnic1tCvapstGVbxORY8qb9miYhbXXZ8MPdnPejTjRIq+Z2Nd27lflp
+55KGsdi1vkMLKfaaSM3n9/Q5rfLKx5WUh79yJ2u7/CL51Hvnj+mCRQjaGbD
8b6PlniSoWxBh10PX7G0h09WkcsXNvbjvTdxj5PZYM9Jz09+ymQOj8d+Cf2T
xzb491mfqlLCnByUphRZl7PeRwynnwiuZL1Gb3Cmwmo26q758+b0WubavcPZ
DHcBczn/5TZNFLG9Ghq3tG6JGd6bxG4S70liL+nAvaeBnST2zdhpqHB580tO
N+M9R+wh8b4UdpB47wJ7DNzfIl9utfvvHqiE08vYJ2PniPcQsbtAf4seqJnL
k5FLwd9CJ6/n+Ba4xXuD/bjdIvbFy7n8GO8FTuV2iv2595GI08f2DuYDOk0v
l+8Sfz7QzVOJr5bvERu4vBg7xHmPXZofvBbL9xLTuH0wdDHuT9HnzKwXNPSu
kjEBlw9fe6iwclw1nzfhXgb+9VicQ4Xld14P/wno3LdWq4a1jPyPXxdweTDw
6nnbZ7dH73z5bvDx1mlHpg9PZr9W/7cX/KPy3x4JOvjFKcPwD9VfaDS3c3Cu
LC6pnZYl3wW+4/pTe24PONdvrXnRlCqq5HqZ36f/Zhauq6NBnP7dy+W9ne/0
Pf69vYSGNsye9XYwnyOdH78pafIdGf3zbXUWCnh/mjtnlt7HtDb9VhJc8m+z
jCZwuldoI1UUfZbQ97V3dBSviak7x6cGlZ9aq44JKNrqkPeQRzxOwzPCR142
aePTlv0Sz8Yy8ht8o8e5Ml7vKs7P2+4yLIPCdhUmCNonUMO7hOd3NEMovXNq
e5nGbZKMcB7QbVAAM5gZNcyoawwbt97siP7ENBYwPOKx9cdsNuLOAv/xPQvZ
e8mzyCf9ypj/jYSlRxwq2OyikkWnU6uYduz++G+iGlb5s3Xwzrw2XZaf1z/7
tpBZN48549lLzP466F16bSJhDb08zszfImUDchM2zxkjYxmtaqv/vJMx3O3j
Xh93+rjPx10+7vFxh4/7e9zv4o4Ie2bsqtDvImeG3wXv4m4e97e448M9EO4K
sE/GHTz2UthdoL9FD4Q8GXft8Le4YwffYm+Me3XcqWMHhbt03NOhn8V9Du7O
kRvjzhz7YfhZ3JPjjhw8i7tx7CVwJ47+FXfh6HOwB0Y+jLs23Hvjzhv+1ely
nKpLSznL5PQwdvjgV/Sr2PdaqmnZiXd7Mveb1vOSl/rKd4PIgf8NPXriolK2
fI+062Hai8llpbR2nzTQ+TDvV1nIN+OFf2rke130p/vXP+h2ZBbPq+hl7MwK
lo5YKqNhUsdU/zg+7/3T2/6jtVhGV8ytDi534XOk5TNrZmX1llLXvx79csW8
P0U/Os1w6Ir+nepoB6d7b/1cqnLxXSUlb8vrcmsez6f58zp/8RbnynNd4PRm
7pK7lYc+U3P3fzMtlS7TiWnGRtumB7L8SdaXdlnFMqOotaJhXXg/2rxx7M60
cUWsn7PGmDr/Muast3Rj4thKNuDV/GW9j1cz30fF05+51rITL9Zuij3L8+iH
W543lnmK2ZoRBzf550pYesz9m1EJUrat3/SeO4/JmG5q/E/1UhkL+agdW9/2
83zqoJRjfvky1q/h78BH+9t+3nO/3wjv1OHeCL0Rfr8Qciv8fiD0RVrcPZEq
t6+S/34eLq/Ce454Fw57KvRDeO8CORXub9dzvZA6dw+EuwLsk5FPTeb2Upbc
7gL9LXqg5VyejFwK/hY6+VrYf3wrOP8fbt25PZSQy6NcfsTcenowX37/inud
vlzfE98cqpmfUMMsuRzqS0rjY9+XfM+DvRP2wyqX0oJub+Dzp3YhXSOvtv25
pHH7ppvcvU0o1+uEs0uGg5L53KmQ2zOhzznA3dM4cfnwge+mnsuf83nT7m5O
+6z9eP+Kexno4Thur9SD49cKy+5h1+5Gki2HV9zD6HP7pLih37Usx5bRVC5f
OrW025Di4dU0+llOwzyTWmrk9kjoaT687L1q5z0+VyqN8B27IVVKZ7h+Bv1p
wd/r/8a0/Rx/Im66tPCrjC5xeZIOtzfa/Sb+scU5CT3k8l70MYmzIvw7RvE5
0vKboniZdZW8h4E/dbgc1WgzM5/mzAuv7HE8U6577aykQTHSMIp1q9boxlzJ
iuNTrS47wg6ExTCbW+HH04rSWM2Z/3AarD/gxJC1RUxF6Uf46Pwy5mA1843z
lkqWIjk+3exzNWs9MelfY1kt03u3e/qaVAE76qJyqea8iJl2mBXi/13MPH/b
zFkzRMrGV65T6NBBxqSJqzp5P5UxrYPM8mu9jFlfznUPbJKxphvme5a3/fx2
EAmlM0bK2PMR57WjlktZVXmYVDZewmaumz5oW0IbL3DvbmD3jN0G9s7InbHX
QN8L34t3M5A3Qzdjn4FdFfpd5Mzwu+Bd7DFwN498GX0u9DLuCuBzkStjL4Xd
BfpbvEuBPBnvUMDf4q4HfIscGXtjvCuBnTF2FfC1eDcC/SzeiYA+Rm6MHTHe
gYCfRR+LvBg8i30T3nXAXgK6GD4Wd+LYBeOdBuTD6p+6lY15kibfAaNvhX9F
Lozd7+rtH+rdPmTJ+dWD20EgDz7/rezTh6m8b5026mtnjzMC+a4XOTD2vNDB
2Ds0f2uX7F/P+9VJ3M5hz0fjyT/V2nSZW+D9npOl8v4UvGrm81jnXjzfy0D/
TnwUt8dPo1Ke96IvFS3vLuzikU0lZv/lSEUDTpXXJkbKc1740+Yd4yW1vyKZ
7c0zFTamqcyV073Id7V/W/va3+D59HREzy7L3HlfCpwqqb3y3HhDxD5/kPQJ
7yBh5kkG/pnTpGxjlX/Gi/683r3f+9PgDW341NNPqlNuw6tywqdKzQcyNuZO
nPPZRimL9Xv88YOilC30KZ6tGSNm6l9S9lWRiPV/lzuUHRWw+w+kO0ZZ1TKd
ubZbJoyrZnN6Tz2/TxxMM36Jt65ITJD/vnn83mr8/lv8Hk38Pj78Xi/8fiD8
npEy7vcV4N1zvJ88jHuHFe854l04vC+Fd2rOce9d4G7el7u/7crd8VVz90C4
K8A+GTtH/H6ZQm53gf7WguuBtM/+lycjl4K/hU5+wPEtcBsS3XTQe3MFO8K9
L9Gde78X9+qlKzb3VNUVsbHc/avhOcUHId2kLIm7p+vLvTeI+5zsX4qGVxr4
vf/zH++NIr7x+2G8j4Q94lvd8tSj0wTyd1f2rhjWMiGoij3l9hLnufcc0L+O
0Sv+Nystg63n+pwDIvczz3Z/YpMC/8uHY7j7U+RNhvt1Rwy5lin3r8eUZrzr
tY/Xw4u5e5nxHL/aeI7s0dmax+s8rZ7TqzLFpB65Z0RPNX7fOzV3XoGZj4zc
Hy13WfOb3w1uCVQpq7kroylvs2aeF0oph9sjRV70Oa7zWExHti3w2dpRRMrc
zoHOuWgta19LNyu6/Lz3nO9PGx+Hz1J0a+PVTvcGW4bmkR/Xy9R0f7Aw4XU8
HbogcvT2CpLnvX6WscteTg5lQWyryvK6RHmOVBv8MaE2Pp+Zjvgx9rhrqdyf
mvwMNt7dp5p1nNVzRdUuXvf2ab4S7WgsauPRcf/H1HkH1PjGbZwI2RmJrKJh
K3t19xOlbA2jhFAikowysldDkZHsPTMKbXdDQ3vvPU6nczrnQdnh7X27r+d5
//r979dz7u/3e13X57LaUd5In7D39LXi1mNNPTl61vhjcV6g8J1+Ll3jG/yJ
o35+JZ//+rX+/47xJONr5XT2wPd6vWtkdMj2z+4mfo10uml26eIfrXuvl22z
pUoD1Zo3UX/1FxFNWlb549v5WjpPdZ2F8+8qaiLb337itnLq+XXgjh0+hRTc
HPBywMkBHwdcHPBwwMEB/wbcG3AzkN9Fjgh+ZviqoO/izox9F+8uODXgXSA3
j/wtODTIAyFXAH8yODPwS8F3Af0WHBnck5GfxX6LORnvLbgw4MHAb8xzDBn3
BT4ocF6Qf4U+C54LOC64G4PbAr8/9ln4h8FlwTuL/Cr8TeCuwC8Bzgr012dv
Vt2OXB1EpEzPQU4c92H4gZE/HfEwuL/rWWF/HcBybZiHg5atqt/0TnhfPWx+
H/Hq0Po9su8V+qpq6Bj7bRxHTjpdrJN6Cf5eta+f3fTihDswfIN9ah5+iH8j
Jr/7+xxS3iPi/UjYV1sU7/axDS3lfQ6JUVumvZiXSWaetbI/dzCOf1dFE3yX
9N/6nCYuP9/t95oPvC5z4Eh6T7XOBfT7y/9asgaX8fdeffteBnUatXSq5c6n
XW4IdyQVt6AzKekSmn3IaVHCfmE/fXxJa1RilZzOMWvfQ+MyR7XY3FujPqch
+RtHubDzPt3vCu+pcVLB139fWuewHX/n29xopP+x73SKZ9iFdV0a6JMpxn2b
s0V065hX3FibWpqvmXS15FUVVcv0kJXeL6O/7J4eDL1UQPW+nHmvNj+LFlVv
vT74bDwd2uHJNhf/VxR9C8gt9GZ9CsgrgN+MnAJ4GsgnwN8MnwbuzY5sbkZf
gQnLIYCfjPwBeI7wL4MvBT8G3yfH7svoAzjP5uU3LA80nOUK4E/WZj7He8wv
dZ35LqDfQgcCbx93Key3mJPBy8d3Cx4+/BV1k0+Nu2Qi5AJcnZOs+yUL92Pw
e5EDeJ0397jRLjn9x+bjQMaLqGc+ClXGG5zE/P6XP2WqhR2u5v3DQexevIr5
ET8zPlJX6zZ/09Ybtv0SI6+SQjYXyy8PLDu+KJ3XX+EPhp5ztlrF8uHHGt63
H/dTs/b4c+He1J/lT7G/BsWlDR9ZL8zD5n6J7nO/Ce/rfZaXwfeKezB8+LNd
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
1d6T55HHlu0RpZGfzR6BK0fnkxl7p6191aeMfFI4bV36sYpY1CR9GZVSS+z1
+mj5HasnPTyWR+8UNRAj1jdvzHqr0X+LHk308aHXC/1A6BlBX4El456Dn7yW
cVjBcwQXDnwpcGpyGO8imOXmkb9Fju8rywMhVwB/MnyOTcwvBd8F9NsvTAcy
ZPdk3KWw32JOzmTvLb7b6A5hosktAm/t5ckLIz09JTy/ye31SOXyu3U8D2ac
5q+R23tV0A532vgSGwzPv9BUz6Jdatvy6otnSy5lt79LkX/tfH3yC62jH/k8
XdnLn33fdy8hx1g+J0J7/+uKxhre799BbeQIjRmCfzhz2JuyQcMFP2LHzHcb
jm/lSAvzN316On9sw3fBL6FyaLGFW7Sgv2o/LrF1ypOSzUzP2dPkP0F9fT25
yu7DGp017N7eEu5NRf4mcpMUYX+lyU8XJp2NJKo/Z/zfPKz8V79jfiClP4e3
va+rHun/HXdW+F73KR/Jz2+qond+TONOfa6lmdrDlyffr6ctu7cf79JRQv/+
sbyd06mRlphvNOn0UEYXLzDoXlYip2qi+rKu9zmq/9J0Y9Jvjqo0j88qq+Lo
+MXjDR5ZcjQg32lzX2s5fT726ZvrXxvpB+vcDnN0pLSf265Sq19i+q/aLCzE
RURN3e4dNb1RQ7d79Ls36mglvTK5h9sH82J6pLDx1T2THJrnPrrb56ZEaqB0
3v3H39d0zdQhhUlmj4nNX2dxXN94or15+/WCmiwy89nA1TP/FpITi/TXpNIK
8vHK2Xfzu7TOI0Z+Wh1kdWTVZBu9/ONicvHo8Z2ecRISv9Gwm+b9RtLo46/1
faicdBgz7xId3zrHLvI7E5rBkX979v540DoPgTsJ3iR8k+BLgisJvyTyvfA5
Q+/F3gtOJPyR4GYgv4scEfzM8FVB38WdGfsu3l3wHMFxhP8R3EbwLqDnIn8L
LiP2XOQK4E+GzxF+KfguoN+Cq4h7Mu5S2G8xJ+O9xXcLPiL0WvAQwUGEfxH5
WOy18EGBLwGuIfRZcAzhK8bdGLxCcAqxz9Y1vWvS0xL8/nhn4R8GFwJ+xE8v
z/yKGcPx/ib4ELHH1vy47tHnPzGvvzaVb3t50LeaKN9q03PgO8R9eKKq7rBx
9jH8venRiV+6m1LD+f0Veivm4co7nevFEcL7Ct8SvlcH5iv8szbwfMY7Ga2N
dYnaLpPze2vVSa2oG61zcMXlIZrT8jhaP3X4hfVTWt/bCZVvHdXl/B3Yppty
76IXEqrqkf2n+9rWeeu918prr+po545zHu8NFvbVadGP94xsKKBfdNTVC65k
0vMdB/kEKMfSPJXvj+2OXeLf1fH/LnJfvqWQLtkTiePmPNKzcVlo3OFSYljc
f4GSfxUxj+/+O/xFLdn8+NRAN9d6Mu3tPJVaSQPJuehjWtUiJZ/L7uVFPpSR
v7bz5htVy8nz6qzr9U85siJr5uZ3rXOQU5XxKfcijlzvI45O0G/dO61zwtIn
yPm+QeQG0ScI3wb4VsgJgt+MuxX6/pALhL8ZPg3cmzE3g5eBe1UU6wdC7g99
BfBlLGZ+KviX0YeHOxX4Usj1oc8O8zLyt8jxoY8O9yn4k9cwnyP8UvBdQL+F
DoR7Mu5S2G8PsDkZ7y2+W/CdkMMrmKeybU2OcI9yYX4o8Ju6ZrTxJuCrOLTO
Zc35MZl8zg7+YszHgxlPAvnXkhedfNoVS3gfxSuFT7G6pkKODn4n3J9wL4Z/
OGHdkPxhZjJCmW/iNONBYC6Wbn6yVy9WuDu5Hvk33qBTMa+/HvxiLxnSEM/r
OfAH4z5c3lWafmR6Ln9vmtv/oMX06cL+qnHkWfuxJvXUkM3Dj1ZdPNr1s5R/
X8tOFPa6Wy98rzmjfM78a/1eb0T/HXgsk6PH2T0YPoiDyzfkOGxtpL2bBgz2
3CihZ60c3/7+KtyXkrWXvWvXs5ouZXPwtFtRxYMH59PBM9YMGzwojW5zUvl3
qH8EjTGY8uBk8nkyo9DmW2hzDH9XcpmwN7tyfCEZNdH/6knTCjKkm4LipG/V
JP35+UOr/9SRAxpTE2QvxOSaTO64u52U/DrgmFQvbuTn30WffpldseXIo5Nb
/XQlHFn2bb1GwFeOmB2LvHb/BEdctxed73JVTn7eVqhcM1VGhol8w/9tkBKn
4ubg/iMaeG4seLHgxIIPCy4seLDgwIL/Cu4reK/gvIITCa4reK7guCJHBG4r
fFXgtOLODC4reKzgsIK/Cu4qeKvg1ICvCq4qeKrI8SEPBG4qeKnwOcIvBd8F
eKjgoOKeDO4peKeYk8E3BdcUPFNwTMEvBbcUvFL4jcEnBZcUPBhwSMEfBXcU
vFFwRsEX9Zj3ckbuJSFPF8v2WeRzwFv6wd5ZMln3RsMhCSHMPxy6cKdJwNg6
3o+Ydkwlx7tLGe9v0hfbq42MSyGfmF8C+dUzTH9NqfU5vqxbNn3E9JyD245e
7Ggn3IeVSh6tDI8U0V3s3hTVmKw96J6U7mD7axrzA2MedurUqeJp6+9oJXtf
tWYbjDEfw9FU9r3a/8os67m+kdbdTqvsYiqhFbdchg39WE/nXr18/WB9La1l
+uqSI5biK5tK6RmzLl06NefS9CUjrY9bJ9OVv4uPXUp5Q/subrsDP+lmHiX6
EE8Sm0c5dI3IJumDAg+7GheT2Hdrh516U0ki2b4abhD9RtwiIv67Q258DWgg
k0p33K7LlJID68ddjbgkI7/Yu6pwnx6d85ojPd7Nj1/ZOvfEG+YfWpnCEeth
PQb3Vmn9HY22D7Gtbn2Hayev1pvSSOpvJA1Z1l9C+v2lB9d51pP+ul1GBd+p
JUn1+weM2FRFmkiA1uVd0eRKQty4F0szyZjgE4fzhheSAdei+/t5VpBd/tEF
U6a37lORL8f3XC0ip74cWtNNrYGoxJ384LpLSk50jh9hZyEjjsmaz7Mi5GTu
+Iauybc4MmFy063Tf4S+efRWo/8WPZrqrI8PvV7oB6pnPSPoKwD3HPxknsPK
eI4pjAsHvhQ4NUMZ72Isy80PYPlb5PiQB7JnuQL4k+FzzGd+KfguoN/uZDpQ
+5a2ezLuUthvMSfjvcV3O2+ey871Wak8z3RSV1udS6tvtf5/auMjhk3U/x6j
l03KGG9tpHxd6uCblTy/ySHj0KwqpXqeBzOu482GIZ+kJI7xJXTG/Trb8kdO
zFhefXwEdS1q/TuZxfKv/dpr5z2vFfJ0wyap7BlNhXzO0OVvAk9+EJHrzO8/
IdYxR7agkvcP53xLDP7jksX7ES1ntkQe+3SBjGf+JrvAftVVZum8X6LS77b+
6WPlvP6qeWLi7TvSOjqZ6TnHO2a8XDdCSlXYffjgh4lO832Fe9Nw/xGntvwQ
9teWbr1K/hkK8/DBwPSIr+7C+9qY9st+aKHwvc4eVWw6/GYVndxe1+Bn31Lq
rj9q/YndufTV9zWcW0sSLbx+fVr4wtc0csGyftkWL8nn8f0+n5yQRMy11e/v
U84lV+SX9P6+LSHLLol6uuyqIm97nu5ZRGtJTaVN4ti39eSOVXV4xXwJKS1M
OtPTvpEsqhqh9bKXnDSW284Kmc6Rp+cdOs0s48gXo+r/DrX+fg5S6BPWsXXe
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
bRL7bk0HG460uc0RHcb37zvB7urRIIEXbrz59baxg2U8f/hVvLdTQz8xzzPt
3XTR7FmXKvKQ8RHba0xzdh+SxfPWxjrb6W63vkg7Mn7Td7s3G8K9c3gezK+t
qj+bVKt5vkS9xRXH0yIxVWZ59cN2oyI8b8j4/GuPY1tqk1rnmWqWp4v0PfJk
5RaObmb5nJTvI+UPLBppBvP7X9Z/vPB5teAfzvoXeCulSwXvR3TWKAxU2JRC
o7u0+ZtmWX4OHTsmmPdLdBJN0QipzOf114ioIvXokzUknuk58U/7flf60UBq
2H04aorCv9zZwr1pg56B1aEfwv5qEvTsVboix8/DT6sdijXchPe1VhKuGHiz
jgxg3+upZduDx4hLiLPd21GdjHJI9sr4jYn7PpC03c8/zFnuQ85f7Dt2gn80
/fHid1bz5ixaNeDC/Cb1YmrrL3dx06mi/3Xym2xXU0tfOJu+uzVOTLeNVi7e
/FVCy/S9LULHyKhrz6q7jz7I6YzL6+wuhXA0qvCl3Lb1vSnsejDXK6D175j1
poC7gZ4U8Dbg20AfCnpQcHdG7wn8GuDQgaeBXCD6TNBjgnsz5mZwM9BTgn4S
+JnRRwJ9F/0j6B3Bu4ueEfSLoFcEfSLgsOK+jN4QzMu8X5nxLtALgj4Q5PjQ
/4HeD/iT4XNEvwd6PaDfQgdCfwd6O9DXgTkZ7y16OdDHAT4x+jeQn0XfBno2
0K9xdcSy1/ILhTzPFH5j3I+HM18Fz52YNuhsBythPoY+C3/xnugD/uuWC3fj
DbP/SdScOHqV5dVvsX12HMu/wk+MPF37F7979tsvpobsXtylnZdz+OYq+o75
/R9fHb7K81oW7x+O0W+bi+FHPDxOoZ1KZA75LG27E2v7bXkmWV5N4phfIoP5
haG/Ot6odN9QKOP1nIfMJ1HO7sPL5ifof53MkWPs3kSXLLbalSQlbmx/VYp5
MPnzJ2Ee/vN022/dDcL7+vtsyOydma3f68G273VKf7VM/c/R9PfSEStWRmbR
I+sivoRfb50P36iUKu1unSeG/K35Nq2O+piH9u15UkzHKI9xzV4gbf13PDgp
yUVG961KnZzyU06NLRSmmWVz1P9B0dl7rXsdp+x3tW5b63s7N/j2uAlyanPj
hIODSSNt2Lsifc7MOL6n+yTjTcI3iT7BB4wvCb4V/JLwW+FulVa/6rhDpeCT
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
B6PxaYnvfyuEfRY+CuTVLdg7Cz+xvrm5bGXXRt7vBD0WPuJ0k7Gx344XkUDm
98dcDP9wk+maeq0tGfwei7vTc+ZvinerPpg6XvBLpL/sVNV3qqC/nvCtXpH2
//QczX7tHCrXyOlSdh9ek+yi5rK7gWqxe9PVY2969ckR9ledExe0TvgK8/D2
MueHiRNe8++rlfakMduDhO8139ZP3XZGHTGyObrgd4mYhPxO8dm1JJ588tvd
vFohj4wNuf9jS2I5kRwIub6ksIboDjLuqEPrSaW8QLShRUJyrk8ZUOTa+l1O
OrAoRaP193DovBaL1t9Dr5QrJCWPI18cRm0qLpIT+lazi2d7GYlderim6xoJ
8fxm92DpNxEZW7rylI+8mkw3n/hch5aSGONeQSU52aTzivUJIz9Ek8LVX5Jj
re/SjRVrPkRkfaTHYtyDGkcVUJ9nm3/F2lZStw1aa05E1NKdN8d2HX9ETN3j
fjrlXZJS9Wr/LrtEMr5vXoP1VqP/Fj2adqyPD71e6AdCzwj6CsA9Bz9Zyjis
Pa608RzBhQNfCpwa8C4aWG4e+VtvluNDHgi5AviT4XOEXwq+C+i30IFwTzbT
bLtLYb/FnKx4se29xXf79dbzl6O3i+ihKcEbExsaqM+cTnWmga3vhtLCbd/v
yemmA2/WJFCO/vco2SX1B0eT7/XftGsxR0uqW1/cWBk9tkk9/ZetlH75Fi/N
I2Lqp5xjtd+plh6V9p2r1aOSqvyrLTXfmU8DXzYFjV6UROn3rEX1y/zptti4
Lw8XxxJL2Y1zludzyIyN0UV9d5aRGWuT7efr15DuJs3O3WfVk1u7G67XnJeQ
s0eef/g0Wkbivvx2etAkJ3/PKq01rGh9Z0fmn55Wz5GOfdoPN+nGkevZAUOv
LZcRZZfHO48kSEhkxi5uxMF64ui741onjxrSyXmd80vVchLfsOCHpVEuGfvt
0s2VCXGkJDXa/3POGSo2yjCOzkugG/xsL16IyqPHbrgr/dpdQU87n3Qt0Kyl
IaUhNsbtxTTMwsOJ6Erp2qTaCb9vyqjPd7ML6jM4mnvUu8qgdR7+HbXp8PAU
jt7NNpooei+n38cXinsUNFJXXYNVk9Ul1GFqu8C3r0TUolup6Yib1XRWP8Nr
Oj1K6cVfTw4+659NFytMmK6w+z290fRReYPvY/L6XvFIc8sUsquv2rYH1QWk
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
fqsSLC96NZKZb4YFn3krJyZTvDa15HHEUmLJzWzd7+r3zbn3sUJObvQaF7kt
q5Fk3JCK85MbyFYPGjNIVEeWbhIvi55XRXauOLd7xZBCojDSTFwZ+5GU2Qwf
neXgRzRrXq0y+/OBbvWJiPEsyqNKm21Lh8yupKrXV5y9/a+W6uqZ9jbq2UBN
bPQcBs9vpKbiylW7z8jpwkLf2owPHA2y3TjFg+Oo5Z2S+ZM6c7T93SDD631l
1NBz7ayLmhJqtEVv+UpLETVsp2P/NqGKHpL4/pXPKqJRrG8evdXtN7b136JH
04H18Q1hvV7oB0LPyGnWVwDuOfjJ4LCC5wguXF/GlwKnRtmtjXdRyHLzyN8i
x1fI8kDdp7flCuBPVmU+R/ilPjDfBfRb6EC4J+Muhf0Wc3Ide2/vsu9W4Y6j
hbNjJu1xy3Lwms3B1Lt7nfvwcxFEzfDjROXN2WTOCbJo9IIysuFbVcmpKzXE
qbZMcUZ1PUn6+2PT5HVS0itqvt/2TzKycppRSuJhjryO6r02p3UOeTi7bst/
jhzpVLblV5dkGXnsJJs3W1tKFo1Uc/YJqCcft1X0ujS3hqTMqPbefraULE//
rim6kkUar70PWTkrlFhVyLxvhb2jFX4bn7+bmUXd1v4375ZeKc03GLo6V62G
XldT/xzrVk8bO2kedO8hpZHvgm9NC5XRx8++NH215ejY86dK17b+vrdrP2XS
2DMcnRKldm1jezlVbDfw2yhXKbX0rddcqSCmzoUW4tCoGnqqZaTRyJtl9JTv
uBORMdn07LHOhwf1iqLdT80y7lzzmpRn5ixI6JlJIp5M/n1gUAnpM8Dz9bqb
1SS3y97CEb3qScFnt4ULwyRk9hDb8/MPycgTrX5RBoat/w47/lz51jqvFnZa
rzvxDkd801Zv/j2ldR9dce2cb4KUTO9gO7/BXkzeuRq/6zatltxZKzVRf1VO
ytxEnYsackjHXa/Wqn6KJv++xizw6/+UujUXBu4PSyS+4w236y8r4HP79+4Z
KIx/V0eW9HB/suB1A5/X3xJlPt6kUk6UbdJv64mEnD56jMBzRj4f+V74nKH3
Yu9F7z3y+OgBRB8RcvjgM6PHHvl7cDOQ30WOCH5m9NJD30UPPfZd5OzRN4+e
eeTr0aOJPj7kc9EPhN54+JbBPQc/GXou+uDRA489F5wa8C6Qm0f+Fjk+5IGQ
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
0Vcrk2I5srF/9/JLEo4YrTuyIblMTnpuG1bk9bCRbLTOrjFZ00CKTNPv1KrW
kdAPrzce61ZJVm6Mf/wzPpf0dV91XmtVDGnp+H6sfY8XdNHs/BeDumXSMQU3
lB3CSujJgyp7c8bV0AEOKseOxtfT4cbv+q3cJ6Vhmi+aAobJaXn4kmfX7nP0
pdal34++c7R50Mn66/05qjx6mlLHzjKq/dlaMaaigaoN2zR7+fvWvyOjey33
kyvpmK2Kr2Y65NO7U5NSmpM+0Ocj4nf10rpNFp2NOdb0JpUYDyjTd9AsJn/d
R8yMd6smmSl+It3x9eT03R1DDylIiezQyn23s2Tko87cO7uOcKQg/I3ii78c
2X730eBzxhz55Z508s8GGVndtFnHbL2EWL68U3l7nYhMbdrpGHCqikweM9NR
v0shSdwjcsudkkQuzdzos7jMmS4P2L7fcMlHulllpcE+r0IaFdzNeHpsFbXd
cjvq8AURVXq3YvTpMxLaIf91U3t3GU28+rS3uSVHPX7aZ08f9JHnPoO7Ad4z
fM/gbcC3Ad0XnA34nXF3Bl8DXCv4NeBzht6LvRfcZvTew98MnwbuzehFgM4L
XzN4VeBmwJ/RmeWI4Ge+y3xV0HfRK4R9Fz5m8Jab53gtK5ov5TnL4GJA13Vg
PZrwY1ixXi/cl+FbBkcZ3HPoufBhwK+MPRd8KSXGqQHvAndl6LjI8YGLjFwB
/MnwOYKDDN8F9FvoQOAe4y6F/RZzMvzI+G6h284NXrUjO0vgGsOHDJ4x7sjg
VfTNqMsbMzSK12sHLWvjVJQPHvHQ2aWMyraYDi5XEPwV2GuPTx1yItRDyPXg
fry359GFzc8EvzF8FTfYfPx3cJsPSmw6pSH+cjbvM4Y+G7C94ynT2GzeT5HB
7sbwF0tNbk5SNBf2WSf3uzlXKwRdFu/sqtJ1PU50aSQaGyLzHfaKyZOXM7xU
P9cQm3nucxUXlvH34jdXe8yYffMNGf34RmVTdhRtN7Xzk/qEHFrw8vIkZ3Nh
Lj5RaDphhG4DlVxQdPG90EgbinonNxTIqfWXA7OuSTjaP1nv5U/KURtnn3KT
XR+J396YXYafColDc2Lz3H7VpGK2980730Uk9dJtM5NPEjLXbI71/bzW99eL
bh/k0TonbL87mLRwxO5FhvS4Nkd6//Ats+snI/eH/PdUrbCB7Fd91DfYr46c
mGXyO2lXJfE/332Xt1ke6aZz9fO4jBhiZOi0+u+vF3T1mvGT4twz6ZeVSl0v
7imlxQXnJQn3a+imDx3GdjQS0+Ik7+m6nJTeM1p2qXZ/6z5396jeoAyOXnzf
znROeeu7+2Hu6OBHcmp2ZtrGqmmNtP3lLiovH4np70eb9p5Sq6Xt45cuijle
RpNX/fTKu5tFHzaZ3w6b+ob6K39V29v4nvjVlJXXT84l9tczH+hWVpCjC3sM
LdOoIzO00zvfOdRA5mj2nlKb00g8bH4f8eog9M2jtxr9t+jR3Mr6+NDrhX6g
f/VtPSOW09v6CsA9Bz9Zg3FYwXMEFw58qU2MUwPeBXLzyN8ix2fP8kBmLFcA
fzJ8jvBLwXcB/RY6EO7JuEthv53L5mRb9t7qs++2aND9ClX3RqKwcthU3c4N
5PjDnHHHfWvJow32Gat8WufDavEB6/hsUhz2tmy8PJSsuaLzt3haONVfPUf/
UL8c+sk16UGnwnKabxxnOO5VLc0e7FcuGd5AO/+1n1zi20itxjeFlZXK6VRZ
w1w3GUejduXWpoS07vtHo8f9miOnp76Y6g/0kVLFnckPLybU02HmaeNVutXQ
Bof5278OLKEB+7fV+Cin0+4e1VtfcHfpQrerDQOTP5Dm8wv65UXlk4O3Zu8d
NKCKzLyU/v3ucBFZNzLhsdICCblR+kC1xFZG6v7svG29nCPPqybdz2x9rxZV
bV9mYN/6914aGB/rLSNLi3qU6J+SkLWnbjY9cRKRK4tzrqe4VJGEUxvHa3oW
kJ+Lrq3QPZhAbhw9dPLsEH/q/KLjxvhNqXRk5SKtguXF1LzbUJVRQdV03aye
GywP1tMvE5adOmIpparqmvYmA+VU22qM4v7HHN3jnluk0dy613fVfq3fuuff
6X/kdFZMI536vXHDkuSP5Nr5kamiuUXk+7I9J4MWVhNf8jwsd0o9Ca6w70bG
SskR595PLRTlZPg+/9yJ9zjirWhRnt/MkdnvT+yQf5OTPb/znlYFN5Luj56U
7DRsILdO2nYK+1hLtvj1cXaWlpOSjGkj4v9mk7UhaQvOjQ4j1666B894EU7d
ZZnL3lnl0D/r/RSuGlTQ3dVujY/ltXzv/WjWv5vCegDRR4ReBPCZwYksZ7yq
24ybgfyuJcsRTXzL/MzMVwV9F3fmcWzfxbs7INZhRG8VOZlU8F+x1VOOVEVG
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
m4/CHPKe2YXjFq88z3KhsE/r/y782dyGRnYehb087NEip8IzhuvNd+l612J/
9u7AD1k6Ss1sHgr3tAu/+XRkqMRAg6HDQ8mRDDZv3HzZYO0LVS55+uhnc4pz
1xyK6yrNu7dPRnbpvjkcWd21nzW02jikbpSMOAz7d3a9qpgconPjDZzDmVfn
NpDtqRLysrHrPWs6Y1bkV94buP/MKKXbwRKIoOfs52PdY1e/b4YxZ6OftduI
oIYY/bnxXAqfF0V86jbzE+RTb8qzW0buUR8b4Q/1pRQ3vd2SESlhPSnI28Dc
Rpxg2iqiLYW+1Ivy57i2eO3NJtaHoj/nfvwlnUIYR/kaKk3aqdOHZ7N5jXrq
C+yg3hPkNyOHDnka2Atk8800pzGWzpuH0Xvzu6X2843GFZMNlJ8RPcL8cFZ7
OuymHpPVN6/FuWp05TO2Ggz8vf+FGEqptwR5GTOor6R8cdH1ZHEXf/mmSvcP
58bx2FxGuPj8KNGYUpaPcfmfWa/yF4Tt+y1S97E2Nm5g88tB1DePeQz036JH
E3186PVCP1BHZ+D/e0aMqK9gOs1hID8ZOawGlOeIXDjkSx2gnBrkXWD+Avu3
b2mPbyHtA3X+UfQKMJ+cQnOOHUqKvBTmLnB/i3sgnCcj/xjft3hP/k7PW/xu
7/Xp2da5QkAc1m3tM0q7kXg+d/ev7qhk+RX6jzyPOMTegYQ1R8gpjwIIUavI
kv2rYft5wap9+q+2F0LnnV4rxvaWQvcXCl4F5o8dPcb/FIxjoF9hlWP4Bwks
nSdzy//Zla+43zvknF1DNRS8OOLV0jMfkiJ29bzY/xh8ofNjD+MpxmLtauL5
IP610r1GMv9z2/fAOAGbq3gnqBrr2I8he/XdVlT8ZcjIzeamozcy5OTSQUNV
ZktJ6cXgwTl3hMRqg8D/IWkiHt6r6oxILeFo+Xydcb6QhK67s2jciCfExH1D
6IklWVCSuNrppGEl+My2DednciFj8YfUPkoCmHIq2E9/mAQ2C5uMjD7K/07L
6p/ayO/BTrt6/Lhz7hMMOLsh+lNhNVjoJsQe7miE4I7p4zT7C0HXdWDO72oJ
GJFRWapGDOhc8t3XJv93yXo51Py+HgMdlfONHmVJwGP0t8c1jAA2nT9YU1Te
CEmPd8Y4+VRDz+uvf38ryoPKZFsf9e2HSY+v56qVIZ/8mFk2pvv4GjLvkAn5
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
TxYEKc7b/vS7VZ18omVtu5Rkaq+xS5Tfj7933HC584whYtqvTfh4PXnCASEZ
bln9bOunRvLcPVCvIq+SiBaJ/vubmEHM9BU5ZI/E4JQ3nmVwV0v1yTBhAyzR
eyTT+8mHy9VPAzROSiAE97Vn/nX72MHAt3fPU1TfyuBQ65PgtFNiUB5Wv0MU
xINx9F3bcMOVrDlfBKkj19qP+xoC0+7l7B2V94msyGz5zD9VS9yHHKmZsKmZ
5J8Y2fQ4TESWJX3+ddVYRnJnOnX71ii/zyklpf93gSHdQKhyzEBKwnsO6pg3
rpD1hl4223IybBKP9YUOc1kTmX9XxnpC9eOMfQzNGdYPeuboXoe033zwoF7Q
jcm9vadPLoNvfRU+0K3l5RGdyh9ZD6hYclToOrOJ9X8uLj21OCFVStKp9/N9
vJXepwSGnKa+T/QFoucT+c3IoXtNeRoDaC8Q882Y08B5M96bx/12+JTb2uXv
HNbzRE9bbTG4U29n+j2lIx6pdVDnqPB1PrH+uKbXktNkNfV07lzx5KxvSj0Z
T/2cn2slT8t2iFm/n1mspWt2R5eP02ftlpIdOyUsf1l/cpWlTmgDy5ODDyaC
aXFxxJ3yMZ6nmRnfH1INpbTvlxk5pK3PLyGbXx5SnfEoKbcrjzFunbXxjTNd
8+U2NYVvHu/L6L+VUI8m+vjQ64V+IPRmoq8AuefIT0YOK/IckQuncUzBl0JO
DfIu5tDePPZvscdXSftAyrRXgPlkzDmepXkpzF3g/vbYF8UeqIjOk3Euhe9b
vCfjeZtNv1vjqllmy+W/p3ODfp8duVNKLKwW3xxiISR20nSLgIBGorp+273/
/laQewlTe299+oHkzV671yM3GWSfxh4VZ5RDbuPl6mmXuLBk2vVZ8ecEsCdp
NUyUSKB6jTePI7/vh3QXZxhIGVDp81l3iL0M7pantD/+LIL8nffOHT/XDM/W
meyoSa6FBSEnyqa3foKh431VlrvfJdrzv4Mwt4hM6vNMcMKJQwRaSrWJGTzy
aVBLuOZrMTG2/jxFUiEjMvcC1anyd8uefzr/Pg9hSN4aj0cDJkjIyxOtkVu3
8smtj+nTYlYXgsbdNPVrgfWwLyV2upo9D4alB2QcOSCG3bnjo4uSZaA/+8eD
s/J/77L9f+Y6jmFAZ0DVrI/GEpjzxeKZ8gE+8E+FH60b1QBRfkF1xzaUwCut
+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
TWJM+AkSdq/bkep2UiePITtHT0+edLyrdxAjajPYps0lf2YUenhKS9h+bl1h
yfKPaoXQOntiMG8nh/UYYN8AvdW4z0WPJvr48J2LfiDsGfRrU/gKkHuO/GTk
sCLPcSXlwuEeFzk1TyjvYhvtzWP/Fnt82Afypb2CUJpPxpzjGJqXwtwF7m9x
D4R9ApxL7abvW1V6T8bzNoN+ty37d6R/2N7VI4ittZCsficlZ8uNPFqMheze
tsH/tMbGWWXkmNrGnnacSLLz4fPXnr758O+qcuGF6HqYMcVOVNiLDzsTcpcH
2kqgMiaiatdmBuwtzX6+lb9vLwYq3RnyWQr+LnGXbNcLYUJb0jutfC40Dld2
8/YvgxHDDyT5TC0GouppqrG7Acb/Lt/kvl7AcuvQN4i9QY3MHVPLm7p4dWu5
SbKbhMP6BS+kKvxGItoXxL6RC90boU8Q+XTBlG91kvYE99C8FXLprurOSeyr
/5kMoP4iJ5vR80WzymAW7Qe2Ul8g2y+i/GZ/ui+6R3ka2AvEfDPmNHDejPdm
9AEidy7s1wGz9aNkZDzNV52lfSLkzR3Ypu44ZSyP7KJ7orITU/p9+5FF/i5R
cOasqe8vu+yNs2v3JnjkyE2qNxeBA+3/Ke2U8r50MHCa+v2QT4X9ocdr9rya
KqiGDtr7u2Gr8AtJrRT7IUOap9pH+RjekxYPuRzaNad6XLx0Bu9dV34533zO
8rutXXkM7AvhfDn5+eyOYyO67ssDdlamuEzo2guhbx55cei/3U09mujjEx1U
5KfWUT8QekZyqK8A+XDITy6nHFbkOSIXDn17yKlB3sVw2ptfRvu3JrTHh30g
5MBhPhlzjt2UFXkpfZq7wP0tJ1axByqyVcyTVelcqtVX8b7Fe7I+PW/xu60Y
HJbfGS8lr7es7makLSRjedEqtp5cMnZvVZT/+VKyl8CkM7VhZMYTMyV+UAH0
fhrdOnojB0zo/mfp1mLe1FcSSD064u3p8wxcnXbabH8WAyMqzr2r2yYFzsri
OXn3BPCqpFDJIK8BhndGtXgplcA6valbHY4GwczHf3pcsCmGYctPWLy60gA/
o94Vtp4QgNch1dt2G6VQYnTzzwL5f96xRk+bHwEMdHyvuyx8IAGl8CF3nNfz
waD7izODBnPgY2KvJPX6fGh90jTCb1o02eev7rgqtoyc2Md0xPVsJJWG938H
3hKSvaKTYX+VZGSTb8OPZoYhGx4XvNDXY0jg3NHrl+SJiVGeRUGUOo8cHczL
lPWrJWcnvQkS/v5IaqsWuVwfkwLccbmDoa0CTo+IP/1taxM88eI5LL0nguyv
fe/b3JTBpKC9cR/k74SzbiMiTZJkEHBkCad/g0j+vrnYWv6xCcKrRQdn1FZC
xMCW2cIeadDLOF3HQjWT/HGYsrVwag3Jlx4xdExqJoOo9x79u1zqAXSnPqIC
6kVAPjNyItNUFLwq5GZgfzeT9ogaaZ4Zc1W438U5M753Nei5u39r/GTlpSWQ
7xWdYbr2EvyK6ShqcS8iLrdlnkcnNZCY/ZZvHkwTkFqzYOuEqVIy9+amrTfe
yv+u+vqUBt1hSNv0CkH/LxKyqr+60p4IPmlysvwpPC5/n/euTtibWUA4mdlb
3B2fwLzCvf2/figFPY3A/zaFcmG88/KsayuEEDRjrQeplMLqS9cvaPAZ2Pr4
2ciLyxhYTn3z6K1G/y16NL/1UPj40OsVTv1A6BmRUF8Bcs+Rn4wcVuQ5PqBc
uJ2UL9VnpoJTg7wL7M1j//YE7fEZ0D4Q9griaD4Zc46Yl8orUOQucH8ro3sg
nCfjXArft3hPfkLP24f0uz1mbPzj12YuOb9KxDjMLiXV/zxzV655QKLWvP+7
wasQiq+5Pjd+x4ERw24P/FLFB2n+ml72bRL42LQkuWc4A/9Nu96+UP4er534
cPERVSnEJOrVDfrDB0OnqvBMAQeWRy/b9rW0ED4Nv+4wemAIcbpx+cr6shKy
TFtr8UXfYphXEPdW720DxJrseD48UgDPUmqvXfGVwizzqG6xJQy4jq8IjN0j
/y7Gj9ewtJNA066gGV/LecBs3i5Uz6iDdxHrSjIP5MLXD1e+GeTGk7Tsku62
z76QYslVgau4kaQbqc33WC0iZ+Iu6yl7yYj778fRgfJ3ZK7liWLLfBnJWrZ6
sF27iNxb+aXEprKJLHOWmkVwKsl3vaCdN1wIEfwnfd4Snwnt1rZP9B7VwO5V
e2bcbm+GNcfOq3LTxbAiutSleZr897a1U9wq/73NHbO1MvKHFEZYeqWY7xRC
zEULj27xXNgzICx8fH4pGP84on7fMgym2jh6zdcvJJrXdCcL4jik8+iMv60c
Pkl6LR3yrpf8PrQsp6rsBUOYxCuXVB/Lz985A/+4ciWkPDTJoz2ST/q/mlXJ
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
Tf6iuavXRVP73WzyiTrlTLreevTmhHs36+Oe4tLdt9d5iC+JXHbMS86iPUHk
SuLcSnaUIzEaWw2y6xsH+Ic7YArlSUrZ7Rv/xEkIN/+6qLPpz1BOEjmS9hDZ
OWF6J0TQnJWB3kv7k8dSWX5khODh6/uyrSxvfTv1aGM+MjCw4dPvQIb13qN/
F3mRvtRHhPMq5DMjJzKQ5iJ/U24G9nff0x4RerEtaa4KOeo4Z66j7108d7vm
GF+teNDL8iBH096fnnSH6xc9hpRrrfmR3MQjq2meatVU3TvKExuJnA7RmWKf
y86pkP/4ZFlotH1LF4QHRujlVfAgTmlqlo7uEPfRrV1NpuWeAIpojkqz77Bj
qHcbm38M8/C4eGVWMBkwEtiePFJFuMluwdZv2lnOI3qr0X+LHk3kO+6luUd7
6gdCzwjOpyQp9xz5yUaUw4o8R+TCXaG5KeTUIMfxJe3NY/82gvb4TtI+EPYK
lGk+GXOOBjQvhbmLA3R/a0r3QDhPjqdzqXT6vsV7Mp63+N2Wrp4ZdekoA0x7
293v6/hwpPhGsNbVbshMUK0w82uC4mOcjtfp+fDa3X7xRxdCvpGRe+Js6smd
/h3LT+p0kaAJFysl7XkkT5XHvT2FIVt/dRQoDt4LxrnW6ukuroQBE9eLKZva
oclba/3OrRzwOjL5kfloIajL9PdN+crAP9kXnIVfhRCfO3Xjjjk8uH/Rbkxm
USdcDQm1ny1TB7sy3ulfU8mEsMNTz6QsLCb/2QaOCNFpIRIep6fe2NBDVDr/
2rmxiE+k61XPlUYz5NZfNmdf3mFIn/3z5qlxfNK8xf2Z+tQe4pV4Kfv1q2Zi
odrut128iOSFOR39dugF9PvfDtp0tw7033CeSgwffB+u9jWpW88Dl5T56hPH
D3m20RcoRr0nyG9GDh3yNLAXmELzzZjTiKPz5lB6b47M8YElnUKywqCi0egb
lxSatH77GtBJfPrlnJ39a8nqs7MF4Z3pZGrCnAnn9d5CuKH2jhLSAntjveVO
uvXAj1OOhT29fBgVSc6uTmZg2ogpmaMG/9+tr+0YMLjMh4O9sydsb+uGT3uu
KhvqNMPH6ZsnevILYNIlkQ+7bdqN9X3y9azfL737skrxQR5xp76SY90+dTcF
Q/zlp/eufPs10Mvy5Cx+xJ1+LF3B8jHiV49atkm3iu37HTU3u/b4EQfyaX45
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
2UO2Kg==
                    "], {{0, 120}, {120, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[ColorSpace -> "Grayscale"], Selectable -> 
                    False], BaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {120, 120}, 
                    PlotRange -> {{0, 120}, {0, 120}}], ",", 
                    "\"OilPainting\""}], "]"}], ShowStringCharacters -> 
                  True], {FontSize -> 11}]}, {
                StyleBox[
                "\"Out[1]=\"", {FontSize -> 8, FontColor -> GrayLevel[0.35]}], 
                StyleBox[
                 StyleBox[
                  GraphicsBox[
                   TagBox[
                    RasterBox[CompressedData["
1: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
v+QteSuRt+Qv+Uveel8H2LmA4Ct4DHRr/bq13bx+cJu3so1vTsqUhOYXT5C/
PvqLnZu8dZe3PH/99b0vdrvIX2vkrWt0q7fYucwSvAWP3eqvW9rJa7dbvFVt
PC8O/+PO9OdydX/det3KLe00ai95Kxfd7q/q7fO2vdg5yVtzBG/BY7d46zZ/
VW+f27wF9n81Jf3NsDzyV9F2qtouq+3FzkX+krd2thM7J3lrjfAcZvAWPCZ/
3dU+7Jzekp7j8V+Ct+Svu9qFndNf3qp2ndwqS1JbNd7MPekaf1Vtl+r+qr4e
rHN4r+SMXU0a0Kq/QKpvtduFnZO8/d/eevvvyV+522O2Xdj5yFt7eCs0M+5e
Wr7y/qrWHvJWLto1HuAvzOOq+mv2OcTYOb1tl2zj4TZv7RoXX+ddWepFtfvQ
VWmHUXuwc4nmK8uypBcWNp84pay/qj1HAvpb1vxm24Ody1dvyV9n6l22epGt
/1VvB9sep38unP+q7q+s+YFG92Vj53Obt6Lkd8v8K2t+1l86bhCrHdh5LgY+
iGz3WYFy/sqa22w7ZPFX1n4X3VvyV8zcZvNj53Obv6IyMbb9gcRa7/3Fzq9q
/cuaW5X8kUPnTliZ2qQBsfO4xV9Zc9PvHTEouq8sfT1+xs7vFn+xc6mam/VW
Nn9LKqPPpE0+Lb23Zv3Fzqdabl5+7DxuIfkrBmXLS96KQTj/lX2doay/d2TJ
qUpu1bgiPCZqy6XTyvuLnU81D2TNi53D34T7Bslfyquit6oTrreRv2Lkxc6l
mrey5bVKq97K5i92Ltl/z8jmryw5sfzFziu7D7LkBAb0mXS+Y5S448/rX+wc
Tvur2vVb2fJi5+J5C8TOQ956V/+i1xnltIeyzLduJ/mLkxM7D/mrBq36K1r9
iZ5PNn/JW7momr/YeWTLx3pL/spFWb2VxQ/R72shb+WmrPOvqLl4/mLnIH/V
pGzeyuKvqLnIW7Uoq7/sum3sPOQvUYQ6k81fX9+/aHe/YueQzVtRx1NUkr/2
9id2HvJXbcrqL+QRbbxF7S/R17NDHtHGU3TK6q+o4y3q+0hF9Zc9jhJtPIGi
fo/wHxrHTEc=
                    "], {{0, 120}, {120, 0}}, {0., 1.}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Real", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], BaseStyle -> "ImageGraphics", 
                   ImageSizeRaw -> {120, 120}, 
                   PlotRange -> {{0, 120}, {0, 120}}], ShowStringCharacters -> 
                  True], GraphicsBoxOptions -> {ImageSize -> 120}, 
                 Graphics3DBoxOptions -> {Boxed -> False, ImageSize -> 120}, {
                 FontSize -> 11}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Right}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "oil painting", "count" -> "3"}, {
        XMLElement[
        "value", {
         "name" -> "CommandWord", "desc" -> "referring to a computation", 
          "input" -> "*C.oil+painting-_*CommandWord-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "*C.oil+painting-_*Word-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "FutureTopic", "desc" -> "an artwork topic", "input" -> 
          "*C.oil+painting-_*FutureTopic-"}, {}]}]}]}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "", "timing" -> "0.513", "parsetiming" -> "0.193", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP107519hci28cge1iabe500004fh93af8ghdc7i4i&s=47", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP107619hci28cge1iabe5000063d1ae8g1e87i0cg&s=47", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 10, 55, 49.6128672`9.448169181784372}, "Line" -> 
    8, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Input", "Input interpretation", 1, 1, "Input", 
    "ImageEffect[%, \"OilPainting\"]"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "oil painting"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{238., {50., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
     "], {{0, 113}, {150, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{150, 113},
   PlotRange->{{0, 150}, {0, 113}}], TraditionalForm]], "Output",
 CellChangeTimes->{3.5272041500572033`*^9, 3.52720419137068*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageEffect", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
      "], {{0, 113}, {150, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSizeRaw->{150, 113},
    PlotRange->{{0, 150}, {0, 113}}], ",", " ", "\"\<Solarization\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{3.5272042054722424`*^9}],

Cell[BoxData[
 FormBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
CqVc/f6/ZT5Wdg==
     "], {{0, 113}, {150, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{150, 113},
   PlotRange->{{0, 150}, {0, 113}}], TraditionalForm]], "Output",
 CellChangeTimes->{3.527204206173414*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Everything should be made as simple as possible", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
              "\"Everything should be made as simple as possible,...\"", 
               Identity], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Data", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell["...But not simpler."], 
                 TextCell["...But not simpler."]]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"according to Albert Einstein\"", 
                   "\[NoBreak]", "\")\""}], 
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0, {FontFamily -> "Verdana", FontSize -> 10}, 
                 GrayLevel[0.5], StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "", "timing" -> "0.588", "parsetiming" -> "0.282", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP89319hci2e93c1i6e7e00002di25977ab4hd045&s=23", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP89419hci2e93c1i6e7e000067g0c2ae50fh21i9&s=23", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 10, 57, 51.2124765`9.461950627731373}, "Line" -> 
    15, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Content"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Everything should be made as simple as possible"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{308., {28., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   FrameBox[
    StyleBox[
     FormBox[
      StyleBox[GridBox[{
         {
          InterpretationBox[Cell["...But not simpler."],
           TextCell["...But not simpler."]]},
         {
          StyleBox[
           
           RowBox[{"\<\"(\"\>", 
            "\[NoBreak]", "\<\"according to Albert Einstein\"\>", 
            "\[NoBreak]", "\<\")\"\>"}],
           StripOnInput->False,
           LineIndent->0,
           LinebreakAdjustments->{1, 100, 1, 0, 100},
           LineColor->GrayLevel[0.5],
           FrontFaceColor->GrayLevel[0.5],
           BackFaceColor->GrayLevel[0.5],
           GraphicsColor->GrayLevel[0.5],
           FontFamily->"Verdana",
           FontSize->10,
           FontColor->GrayLevel[0.5]]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TraditionalForm], "Output",
     ScriptLevel->0,
     FontFamily->"Times",
     FontSize->14,
     Background->None],
    BaseStyle->{Plain},
    FrameMargins->10,
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   WolframAlphaResult[
   "Everything should be made as simple as possible", {{"Result", 1}, 
     "Content"}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.5272042723648205`*^9}]
}, Open  ]],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "speak \"Everything should be made as simple as possible, but not simpler.\
\"", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Input", "Input interpretation", 1, 1, "Input", 
        "Speak[\"Everything should be made as simple as possible, but not \
simpler.\"]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "MInput", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Speak[\"Everything should be made as simple as possible, but not \
simpler.\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"Speak", "[", 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Everything should be made as simple as possible, but \
not simpler.\"", SpanMaxSize -> Automatic, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"expression\"", ShowStringCharacters -> False, 
                    StripOnInput -> False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], {FontSize -> 11}, 
                    ShowStringCharacters -> False, StripOnInput -> False]}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> 1], "Grid"], "]"}], 
              ShowStringCharacters -> True, SpanMaxSize -> 1], 
             ReplaceAll[
              Speak[
              "Everything should be made as simple as possible, but not \
simpler."], Labeled -> First], Editable -> False, Selectable -> False], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/mathematica/ref/Speak.html", 
           "text" -> "Mathematica definition of Speak"}, {}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Example", "scanner" -> "MInput", "id" -> "Example", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Speak[\"Everything should be made as simple as possible, but not \
simpler.\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"In[1]:=\"", {FontSize -> 8, FontColor -> GrayLevel[0.35]}], 
                StyleBox[
                 StyleBox[
                  
                  RowBox[{
                   "Speak", "[", 
                    "\"Everything should be made as simple as possible, but \
not simpler.\"", "]"}], ShowStringCharacters -> True], {FontSize -> 11}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Right}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "", "timing" -> "0.713", "parsetiming" -> "0.484", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP126719hci25a717934hh00003h3be6107ghd757g&s=29", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP126819hci25a717934hh00005g3dacec2i8hbag6&s=29", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 10, 58, 51.9956797`9.468542109836942}, "Line" -> 
    16, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Input", "Input interpretation", 1, 1, "Input", 
    "Speak[\"Everything should be made as simple as possible, but not \
simpler.\"]"}, Typeset`open$$ = False, Typeset`newq$$ = 
   "speak \"Everything should be made as simple as possible, but not simpler.\
\""}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{558., {69., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "find the hamming distance between goat and moat", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result", 1, 1, "Input", 
        "HammingDistance[\"goat\", \"moat\"]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "MInput", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"HammingDistance[\"goat\", \"moat\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"HammingDistance", "[", 
                RowBox[{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    "\"goat\"", SpanMaxSize -> Automatic, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"string\"", ShowStringCharacters -> False, StripOnInput -> 
                    False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], {FontSize -> 11}, 
                    ShowStringCharacters -> False, StripOnInput -> False]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> 1], "Grid"], ",", 
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    "\"moat\"", SpanMaxSize -> Automatic, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"string\"", ShowStringCharacters -> False, StripOnInput -> 
                    False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], {FontSize -> 11}, 
                    ShowStringCharacters -> False, StripOnInput -> False]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}, 
                    BaselinePosition -> 1], "Grid"]}], "]"}], 
              ShowStringCharacters -> True, SpanMaxSize -> 1], 
             ReplaceAll[
              HammingDistance["goat", "moat"], Labeled -> First], Editable -> 
             False, Selectable -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://reference.wolfram.com/mathematica/ref/HammingDistance.\
html", "text" -> "Mathematica definition of HammingDistance"}, {}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "MInput", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["minput", {}, {"HammingDistance[\"goat\", \"moat\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox["1", ShowStringCharacters -> True], 
             Graphics3DBoxOptions -> {Boxed -> False}, StripOnInput -> False],
             TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "", "timing" -> "1.066", "parsetiming" -> "0.824", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP27219hci38067fia62300004i96107b0ibag443&s=55", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP27319hci38067fia62300003671991185ddhif2&s=55", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 10, 59, 33.5718515`9.27855019256093}, "Line" -> 
    18, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Input", "HammingDistance[\"goat\", \"moat\"]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = 
   "find the hamming distance between goat and moat"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{316., {50., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox["1", TraditionalForm]], "Output",
 CellChangeTimes->{{3.527204366149*^9, 3.527204373643141*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "b_s__d___", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "English words", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "DictionaryLookup[\"b\"~~_~~\"s\"~~_~~_~~\"d\"~~_~~_~~_]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              
              GridBox[{{
                "\"b\"", "\"_\"", "\"s\"", "\"_\"", "\"_\"", "\"d\"", "\"_\"",
                  "\"_\"", "\"_\""}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{1}}}], 
              "Grid"], PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "English words", "scanner" -> "WordPuzzle", "id" -> 
     "Result", "position" -> "200", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{
                "\"b\"", "\"a\"", "\"s\"", "\"s\"", "\" \"", "\"d\"", "\"r\"",
                  "\"u\"", "\"m\""}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {"Columns" -> False, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {0.8, {0.2}, 0.8}, "Rows" -> {{1}}}, FrameStyle -> 
               GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "English word continuations", "scanner" -> "WordPuzzle",
      "id" -> "EnglishWordContinuations", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "DictionaryLookup[\"b\"~~_~~\"s\"~~_~~_~~\"d\"~~_~~_~~_~~__]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             
             RowBox[{"\"(\"", "\[NoBreak]", "\"no continuations\"", 
               "\[NoBreak]", "\")\""}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             GrayLevel[0.6], StripOnInput -> False], TraditionalForm]], 
          "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
DictionaryLookupSourceInformationNotes.html", "text" -> 
        "Dictionary lookup"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
    "", "timedout" -> "", "timing" -> "1.53", "parsetiming" -> "0.291", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP9919hci40d31c346g60000204g8ae292g70e4i&s=20", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP10019hci40d31c346g60000611hafhh04g882b1&s=20", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 11, 2, 45.7759531`9.413212261923782}, "Line" -> 
    27, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "English words", 1, 1, "Content"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "b_s__d___"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{113., {28., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   FrameBox[
    StyleBox[
     FormBox[
      StyleBox[
       StyleBox[GridBox[{
          {"\<\"b\"\>", "\<\"a\"\>", "\<\"s\"\>", "\<\"s\"\>", "\<\" \"\>", "\
\<\"d\"\>", "\<\"r\"\>", "\<\"u\"\>", "\<\"m\"\>"}
         },
         AllowScriptLevelChange->False,
         AutoDelete->False,
         BaselinePosition->Automatic,
         FrameStyle->GrayLevel[0.84],
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Automatic}}},
         GridBoxBackground->{"Columns" -> {{None}}},
         GridBoxFrame->{"Columns" -> False, "Rows" -> {{True}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {0.8, {0.2}, 0.8}, "Rows" -> {{1}}}], 
        "Grid"],
       StripOnInput->False,
       LineSpacing->{0.9, 0, 1.5},
       LineIndent->0],
      TraditionalForm], "Output",
     ScriptLevel->0,
     FontFamily->"Times",
     FontSize->14,
     Background->None],
    BaseStyle->{Plain},
    FrameMargins->10,
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   WolframAlphaResult["b_s__d___", {{"Result", 1}, "Content"}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.527204496407789*^9, 3.5272045705943127`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "what' s the meaning of arrangement", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Definition:WordData", "Result", 1, 1, "Content"}, 
      "ExtrusionOpen" -> False, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox["\"arrangement\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "arrangement"}]], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"definitions\""}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Data", "id" -> 
     "Definition:WordData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "1", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    Global`TagBoxWrapper["Label"]], 
                    "\"the thing arranged or agreed to\""}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "2", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    Global`TagBoxWrapper["Label"]], 
                    
                    "\"an orderly grouping (of things or persons) considered \
as a unit; the result of arranging\""}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "3", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    Global`TagBoxWrapper["Label"]], 
                    "\"an organized structure for arranging or \
classifying\""}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "4", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    Global`TagBoxWrapper["Label"]], 
                    "\"the spatial property of the way in which something is \
placed\""}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "5", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    Global`TagBoxWrapper["Label"]], 
                    "\"a piece of music that has been adapted for performance \
by a particular set of voices or instruments\""}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "6", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    Global`TagBoxWrapper["Label"]], 
                    "\"the act of arranging and adapting a piece of \
music\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{{Top}, {Bottom}}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> None, "Rows" -> {{True}}, 
                    "ItemsIndexed" -> {{{1, -1}, {1, -1}} -> None}}, 
                   GridBoxItemSize -> {"Columns" -> {
                    Scaled[0.045], Automatic, Automatic}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {0, 0, 0.8, 0}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 RowBox[{"\"(\"", "\[NoBreak]", 
                   
                   TemplateBox[{"6", "\"meanings\""}, "Row", 
                    DisplayFunction -> (RowBox[{#, " ", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", " "}], "]"}]& )], 
                   "\[NoBreak]", "\")\""}], 
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0, {FontFamily -> "Verdana", FontSize -> 10}, 
                 GrayLevel[0.5], StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show examples", "input" -> 
         "Definition:WordData__Show examples"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "meaning of arrangement"}, {
        XMLElement["alternative", {}, {"the meaning"}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/WordDataSourceInformationNotes.\
html", "text" -> "Word data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "Word", "timedout" -> "", "timing" -> "2.688", "parsetiming" -> "0.101", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP307119hci0f5idihb1740000581i2a75f897ahi2&s=61", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP307219hci0f5idihb1740000584661g576d10538&s=61", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 11, 5, 13.6997812`8.889288584771505}, "Line" -> 
    29, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Definition:WordData", "Result", 1, 1, "Content"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "what' s the meaning of arrangement"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{228., {48., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   FrameBox[
    StyleBox[
     FormBox[
      StyleBox[GridBox[{
         {
          StyleBox[
           StyleBox[GridBox[{
              {
               PaneBox[
                StyleBox["1",
                 StripOnInput->False,
                 LineIndent->0,
                 LinebreakAdjustments->{1, 100, 1, 0, 100},
                 LineColor->GrayLevel[0.5],
                 FrontFaceColor->GrayLevel[0.5],
                 BackFaceColor->GrayLevel[0.5],
                 GraphicsColor->GrayLevel[0.5],
                 FontFamily->"Verdana",
                 FontSize->10,
                 FontColor->GrayLevel[0.5]],
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                BaselinePosition->Baseline], 
               PaneBox[
                StyleBox["\<\"noun\"\>",
                 StripOnInput->False,
                 LineIndent->0,
                 LinebreakAdjustments->{1, 100, 1, 0, 100},
                 LineColor->GrayLevel[0.5],
                 FrontFaceColor->GrayLevel[0.5],
                 BackFaceColor->GrayLevel[0.5],
                 GraphicsColor->GrayLevel[0.5],
                 FontFamily->"Verdana",
                 FontSize->10,
                 FontColor->GrayLevel[0.5]],
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                
                BaselinePosition->
                 Baseline], "\<\"the thing arranged or agreed to\"\>"},
              {
               PaneBox[
                StyleBox["2",
                 StripOnInput->False,
                 LineIndent->0,
                 LinebreakAdjustments->{1, 100, 1, 0, 100},
                 LineColor->GrayLevel[0.5],
                 FrontFaceColor->GrayLevel[0.5],
                 BackFaceColor->GrayLevel[0.5],
                 GraphicsColor->GrayLevel[0.5],
                 FontFamily->"Verdana",
                 FontSize->10,
                 FontColor->GrayLevel[0.5]],
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                BaselinePosition->Baseline], 
               PaneBox[
                StyleBox["\<\"noun\"\>",
                 StripOnInput->False,
                 LineIndent->0,
                 LinebreakAdjustments->{1, 100, 1, 0, 100},
                 LineColor->GrayLevel[0.5],
                 FrontFaceColor->GrayLevel[0.5],
                 BackFaceColor->GrayLevel[0.5],
                 GraphicsColor->GrayLevel[0.5],
                 FontFamily->"Verdana",
                 FontSize->10,
                 FontColor->GrayLevel[0.5]],
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                
                BaselinePosition->
                 Baseline], "\<\"an orderly grouping (of things or persons) \
considered as a unit; the result of arranging\"\>"},
              {
               PaneBox[
                StyleBox["3",
                 StripOnInput->False,
                 LineIndent->0,
                 LinebreakAdjustments->{1, 100, 1, 0, 100},
                 LineColor->GrayLevel[0.5],
                 FrontFaceColor->GrayLevel[0.5],
                 BackFaceColor->GrayLevel[0.5],
                 GraphicsColor->GrayLevel[0.5],
                 FontFamily->"Verdana",
                 FontSize->10,
                 FontColor->GrayLevel[0.5]],
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                BaselinePosition->Baseline], 
               PaneBox[
                StyleBox["\<\"noun\"\>",
                 StripOnInput->False,
                 LineIndent->0,
                 LinebreakAdjustments->{1, 100, 1, 0, 100},
                 LineColor->GrayLevel[0.5],
                 FrontFaceColor->GrayLevel[0.5],
                 BackFaceColor->GrayLevel[0.5],
                 GraphicsColor->GrayLevel[0.5],
                 FontFamily->"Verdana",
                 FontSize->10,
                 FontColor->GrayLevel[0.5]],
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                
                BaselinePosition->
                 Baseline], "\<\"an organized structure for arranging or \
classifying\"\>"},
              {
               PaneBox[
                StyleBox["4",
                 StripOnInput->False,
                 LineIndent->0,
                 LinebreakAdjustments->{1, 100, 1, 0, 100},
                 LineColor->GrayLevel[0.5],
                 FrontFaceColor->GrayLevel[0.5],
                 BackFaceColor->GrayLevel[0.5],
                 GraphicsColor->GrayLevel[0.5],
                 FontFamily->"Verdana",
                 FontSize->10,
                 FontColor->GrayLevel[0.5]],
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                BaselinePosition->Baseline], 
               PaneBox[
                StyleBox["\<\"noun\"\>",
                 StripOnInput->False,
                 LineIndent->0,
                 LinebreakAdjustments->{1, 100, 1, 0, 100},
                 LineColor->GrayLevel[0.5],
                 FrontFaceColor->GrayLevel[0.5],
                 BackFaceColor->GrayLevel[0.5],
                 GraphicsColor->GrayLevel[0.5],
                 FontFamily->"Verdana",
                 FontSize->10,
                 FontColor->GrayLevel[0.5]],
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                
                BaselinePosition->
                 Baseline], "\<\"the spatial property of the way in which \
something is placed\"\>"},
              {
               PaneBox[
                StyleBox["5",
                 StripOnInput->False,
                 LineIndent->0,
                 LinebreakAdjustments->{1, 100, 1, 0, 100},
                 LineColor->GrayLevel[0.5],
                 FrontFaceColor->GrayLevel[0.5],
                 BackFaceColor->GrayLevel[0.5],
                 GraphicsColor->GrayLevel[0.5],
                 FontFamily->"Verdana",
                 FontSize->10,
                 FontColor->GrayLevel[0.5]],
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                BaselinePosition->Baseline], 
               PaneBox[
                StyleBox["\<\"noun\"\>",
                 StripOnInput->False,
                 LineIndent->0,
                 LinebreakAdjustments->{1, 100, 1, 0, 100},
                 LineColor->GrayLevel[0.5],
                 FrontFaceColor->GrayLevel[0.5],
                 BackFaceColor->GrayLevel[0.5],
                 GraphicsColor->GrayLevel[0.5],
                 FontFamily->"Verdana",
                 FontSize->10,
                 FontColor->GrayLevel[0.5]],
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                
                BaselinePosition->
                 Baseline], "\<\"a piece of music that has been adapted for \
performance by a particular set of voices or instruments\"\>"},
              {
               PaneBox[
                StyleBox["6",
                 StripOnInput->False,
                 LineIndent->0,
                 LinebreakAdjustments->{1, 100, 1, 0, 100},
                 LineColor->GrayLevel[0.5],
                 FrontFaceColor->GrayLevel[0.5],
                 BackFaceColor->GrayLevel[0.5],
                 GraphicsColor->GrayLevel[0.5],
                 FontFamily->"Verdana",
                 FontSize->10,
                 FontColor->GrayLevel[0.5]],
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                BaselinePosition->Baseline], 
               PaneBox[
                StyleBox["\<\"noun\"\>",
                 StripOnInput->False,
                 LineIndent->0,
                 LinebreakAdjustments->{1, 100, 1, 0, 100},
                 LineColor->GrayLevel[0.5],
                 FrontFaceColor->GrayLevel[0.5],
                 BackFaceColor->GrayLevel[0.5],
                 GraphicsColor->GrayLevel[0.5],
                 FontFamily->"Verdana",
                 FontSize->10,
                 FontColor->GrayLevel[0.5]],
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                
                BaselinePosition->
                 Baseline], "\<\"the act of arranging and adapting a piece of \
music\"\>"}
             },
             AllowScriptLevelChange->False,
             AutoDelete->False,
             BaselinePosition->Automatic,
             FrameStyle->GrayLevel[0.84],
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{{Top}, {Bottom}}}},
             GridBoxBackground->{"Columns" -> {{None}}},
             
             GridBoxFrame->{
              "Columns" -> None, "Rows" -> {{True}}, 
               "ItemsIndexed" -> {{{1, -1}, {1, -1}} -> None}},
             GridBoxItemSize->{"Columns" -> {
                 Scaled[0.045], Automatic, Automatic}},
             GridBoxSpacings->{"Columns" -> {0, 0, 0.8, 0}, "Rows" -> {{1}}}],
             "Grid"],
           StripOnInput->False,
           LineSpacing->{0.9, 0, 1.5},
           LineIndent->0]},
         {
          StyleBox[
           RowBox[{"\<\"(\"\>", "\[NoBreak]", 
            RowBox[{"6", " ", "\<\"meanings\"\>"}], 
            "\[NoBreak]", "\<\")\"\>"}],
           StripOnInput->False,
           LineIndent->0,
           LinebreakAdjustments->{1, 100, 1, 0, 100},
           LineColor->GrayLevel[0.5],
           FrontFaceColor->GrayLevel[0.5],
           BackFaceColor->GrayLevel[0.5],
           GraphicsColor->GrayLevel[0.5],
           FontFamily->"Verdana",
           FontSize->10,
           FontColor->GrayLevel[0.5]]}
        },
        AllowScriptLevelChange->False,
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TraditionalForm], "Output",
     ScriptLevel->0,
     FontFamily->"Times",
     FontSize->14,
     Background->None],
    BaseStyle->{Plain},
    FrameMargins->10,
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   WolframAlphaResult[
   "what' s the meaning of arrangement", {{"Definition:WordData", 1}, 
     "Content"}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.527204675162672*^9, 3.5272047170386486`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "cloze", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", "WordData[\"cloze\"]"}, 
      "ExtrusionOpen" -> False, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"WordData[\"cloze\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               TemplateBox[{
                 TagBox[
                  TagBox["\"cloze\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {WordData, "cloze"}]], Identity], 
                 StyleBox[
                  
                  RowBox[{
                   "\"(\"", "\[NoBreak]", "\"English word\"", "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, 
                  GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                DisplayFunction -> (RowBox[{#, " ", #2}]& ), 
                InterpretationFunction -> (RowBox[{
                   TagBox[
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], HoldForm], "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", "\" \""}], "]"}]& )], 
               LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
               StripOnInput -> False], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Definition", "scanner" -> "Data", "id" -> 
     "Definition:WordData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox[
                    "\"adjective\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   $CellContext`TagBoxWrapper["Label"]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 "\"based on or being a test of reading skill using the cloze \
procedure\""}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{{Top}, {Bottom}}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {
                "Columns" -> None, "Rows" -> {{True}}, 
                 "ItemsIndexed" -> {{{1, -1}, {1, -1}} -> None}}, 
               GridBoxItemSize -> {"Columns" -> {Automatic, Automatic}}, 
               GridBoxSpacings -> {"Columns" -> {0, 0.8, 0}, "Rows" -> {{1}}},
                FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Word frequency history", "scanner" -> "Data", "id" -> 
     "BookMatchFrequency:WordData", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[
               GraphicsComplexBox[CompressedData["
1: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
x8AY8ukojpl9fxny+d/f7/jv6/8P8xNj0g==
                "], {{{}, {
                   EdgeForm[], 
                   Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                   GraphicsGroupBox[{
                    
                    PolygonBox[{{688, 694, 535, 596, 423, 493, 292, 378, 74, 
                    205, 73, 72, 71, 70, 69, 68, 204, 67, 334, 203, 422, 291, 
                    730, 627}}], 
                    PolygonBox[CompressedData["
1:eJwt1XfYjXUYwPHXSGYyEwpXA02jYRQqStJAGSVCw37tvVd2mcme2St77y0V
2aLMRCGrkPrcV/3xub7n+f3u857znvM8z8lTO7Fi46QJCQlJyOtBDU6z1XFu
i1s0l27WU9Z7soL8VOfbeKK20incT3k2WW6p95HH/jI9oI2Yw3XHL+hrOpCN
5nPqBt2lLThmvyOLyEolJls/Tw7Ksd58c83OUl6lpblUbIu/zxgGWD/COvP3
6lptptlYQllSmuuve7QO0zns+CldY/4ej1drU81Kd+u54zOgGpNYbP0ar9CP
Veaz6EptopnJFf+T7teGzOaq41L6svZlhflMulzzWf/G42b6T3wnWpZRJDqe
REbKsMx8hvgsdKc25qi5DiwkCxWZaP0cd1M6PgPz6XWx7tBGtDeXOV6bCkwI
1n/lLl5ikfmGmo6FvMid5vpobT0Un5kWju8g3oP5tNYWaANNE4/jXCCF/d5a
Sw/GZ6eF4jvha/Oprc3X+poqzrVY133agFlccVxSS+mnzDOfUudqvXhvcU7a
n6/19XKcc1qCYZR03Is55lPobN2udWlnPxM7eYvxwfpZ7qAEs8wn15m6TT+h
rbmM7OBNxgXrv5CM55kRl5FO1636MRnMjdUftC4zOOP4OU0SZVrCfxfvVNmi
H8V3Gud8vHZcy3GNaHGGxvljrri1r/Q2U9js+EPS2x8dr62n4lrRYgzhb3PF
rE3WW0xik+M6cS7EuRivrSfj2tKiDOamuaLWJuoNJlDb8V96wn63uDeQk6rM
s/cHRejJeHN/Mo5ajq/rcXNdWUoOqjDX3iWepQdjzV1jzP/3tY3WDmrTmOV2
XKP6gY7kqrlndLReYRQbHNfkR3NtWEA63uBL6ye4bO7p+BtaI967zol7RpwT
5rrr7ngdpnHAccF4vrlLjGC9tfdJa31EfBd6XNdoEQZx0Vxha1/oBYZT3fHv
+rP9LiwhO5XjnmLvIoXoxjBzvzGUh+2vs9YkvlfdHPcdRvJevAbnzRXUIXqO
wTxkf621RL2lm7RM/C+863h43BvMFdBBepbPqRbnetx34xr1eK/WYyYX4vzX
J7Urn5k7w0BOM4CT9nuwnAfjPbLG7E2qxv/GKXNPaP+Ypx9V4jvSmfo4yeNz
0u+1JlPZ77iA9o3zij7xedKb1fYq09p+GrbzelyTcS1Z/5mfzD0W9xo9Ri+O
0pMHzK2yFz+wN3Sjlo7vmHfis41zy9yjcc7qEbrTjcN0ZaW9tzniOa3ifkdq
ysf1Fa/PIXOPaBc9SGc60ZEDdKCS/f2x53nZ2BXvgYlxX4nziPx0pr25fbSj
LW1oTav4TWcvLagY9yadrvk47G+1iHsryShHJ+v7aG5uT/zmxu9n/BaSSGMa
sTt+R6gQ349O07wk9Tc66nf6Lwc7KGg=
                    "]]}]}, {}, {}}, {{}, {}, {
                   Hue[0.67, 0.6, 0.6], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   LineBox[CompressedData["
1:eJwl1nfc1VMcB/CnodKQStqaVFa0d9paSipkJQ0pJW0pQkQiyU5I9t6jFEU0
CJlFRaLsvdf7wx/v1+ee7/nee3/39zvnPE/toeP6jy1UUFCws3BBQfJieSCv
G0yhNmvVlQqKUJQ9KEZxSrAnJSlFacqwF2XZm3KUpwL7UJF9qURlqlCValSn
BvtRk1rUpg51qcf+HEB9GtCQAzmIgzmEQ2nEYRxOY5rQlGY0pwUtaUVr2tCW
drSnA0fQkUvcgIN4w/2YSh3WqV+h1owPja+kD9cad+JXr5+lk745xgfzpvEd
8iSmeb1I9uCV3H8eZgKbqWv+TtZ7/1Gys9xAF7rSje4cSQ9epSfn6K3HV9zF
AJ9ViSeZyXZe03elbM5WPfPpSy/1S9UOYZPxdPZno3pv+uRa6Es/jqY/xzCA
gQziWI7jeAZzAidyEidzCkM4laGcxjCGM4KRnM4ozuAy13Mob7mWczmA19Xn
q7Vgm/FV9OM648785vUylno9mDqM9p65shHLeTv3WJ6cNc8M48KyvrybN/Ib
5Rj5JmcylnGcxXjOZhMTeEfvTHr6jCI8wkS20ED9Ht7KPZMT5dtMYjJTmMq0
PMN8FtM5T29DvuZelvisgXmGVOY83s0zyL2R7zGDmXkv73N+9oj5zXK7XEBv
7yvJo0zmAwaoL2eWvi1cwIV8wEXZY+Y+lFfLgVzvPV14kd+Nx8rnZF05W99W
LmZb9lD2p7nt8iO5kMX6+rCOUkxhkPoK5qQv65GPswayn/Nbs67lKdmPnG9c
NGtW3seOrD85V37C5TkPjHfKa+Rx/MFKTvC+ejzLRXzCPH2fZm/zWfYJs/Q2
op35b/I9clTWD/cbV5G7st6zl+Rursr1Gn8ur5WDuUFfV17iT+Nx8vnsMblA
3xe5txyu9qW8LtfIjea7sYa/jM+SL2QfyIX6vspvy/NSa8y3PMAg81V5KveJ
j/g6ezHnlPwm30GTvCfXbL4lK/lYbZi8XpbOmSVX5Znr+44bcp3q72WvyCE5
37jQeA/ZVD7I99nz+Q2ymfxB7si94Ch9ZXiMqTlH81zVV3OTvh9ZRHPjn+SN
cgjd9f0tH5LjeT9r0Li+vFnfzyzOmlVrwXfp5Vjz1XiaWfmN/JJzyNwt8ldu
ZbZxy1w7D2fN6KvOM1zAjpwvObvM3SZ/ZwmtsrbkAvOt8myzptSGy5vkXvI0
+RK36/uTpbQ2/ivP3nzrPFt2qo2Qi2RZOUyuyd8PfX9zJ22M/5ELzbdhFZ+q
jcx9kHvL4fLl7Bl9+SN/t2grC9HW/Gc5V+TpOV9ZbFxOjpCv5MzSXzg9sp0s
wq7cr9DXl/WUZxoj1ddmj+gvKu+X7bMm2M2toa8fG6jAOfl+9XVZt/qLZe3k
7JAduMZ8e1bzg/EZOVtlDVlcjsrz1V8izytnjTwi7zX/Y65BjuadnHfG+8k9
8zk8or+kfDRnhXrjnGFZU2qnyjmymOwoH6MUo/Naf2n5uJxnvgkr2Kw2VF4q
i8tO6aEMY3hCf+eshZwNWT+h72heZR+mc6b6ep7UX1Y+JbvkmfIFS+ivryKP
cy5byT90G3hafzn5jOwqy2fN5czJ3tJ3JC/zj/HZ+W7ZIGeh/gpeL8uZK7vl
Xqr/lGcjx+QM5gnjmrnenEcs119RPifnZo/yc64/36vveDZSK2cE+6qPZ4X+
SnKlbKq+JWsu+4RNXG5cItebe0DlXC/P668iX8jfJzmPm/X1Ym2eL5PokXtB
VSawSn9PWY0vWcoxuZ78JmawjYnqr7Faf3X5Yv4myF50zLmRNZrnlDMwZ4Nx
bVlDTsoe1987ay17lsmFCv77R3qjPFE2ZBmzC/////ca0zWzV2Wt7D35Lyjw
a1U=
                    "]]}}}], {GridLines -> Dynamic[
                  Join[{{{-12622780800, 
                    GrayLevel[0.9]}, {-9467107200, 
                    GrayLevel[0.9]}, {-6311347200, 
                    GrayLevel[0.9]}, {-3155673600, 
                    GrayLevel[0.9]}, {0, 
                    GrayLevel[0.9]}, {3155673600, 
                    GrayLevel[0.9]}, {6311433600, 
                    GrayLevel[0.9]}}, {0, 100, 200, 300, 400, 500, 600}}, 
                   Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], Epilog -> {
                  DynamicBox[
                   Typeset`ToBoxes[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[1, {741, 1}, 3, CompressedData["
1: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
1jEKnxTkV2eLj4Fw5omNgY5j8H9+mGXI
                    "], CompressedData["
1:eJwNkHc81Y8bxe2UUdqFkkgpygj5IY+QWYiKvqlEqIw0UETKiER2iIaVVDJD
xvMhZOUaXTPuco2bjLiukl//nnPe53VeZ4eDh5UTNxcXF4OHiytnLM5180kB
wuhtrle4jQAx5llz54+1ACG/MBE5fEKAyBM4UpBjKUDk75xe1DAXIMrOmj+y
1Rcgmkj875OVBYjTGVdKpIQFiCIR/zsqo/zE2gCr3MU6fqK/TyLlcxo/4dUa
Yyx5h5+4kbtU5mPNT/hG7YsLU+QnTIVW7JMV4iceXvsW/JnOR8S5Wz6bqeEj
Xl6P3tb1jI8Qv1h3ocybj3AYe+Ww15qPWG/nI/tCgY9o7Fhj1byCjzChWmsF
0XkJjYHIUa0qXmL2qpfVg2ReYuuo6d2v13mJI1fG1n015yUOBSs7n5HnJVIe
evpN8PISzTJ2xwWHeYilhhWPej/xEMk2ueHvEngI/tsLhmuu8xD9Yf/7fNOM
hyhK13sbtYuHsDOfs1Lj5SGuMlLLhwe4CdP1U0ObyrgJBdMVHrwJ3MTtq+tq
Zjy4iXiZ5jZ3M25CvME7fVKWm/Dgalf4zc1NfAaW7KfvXESo29JQ4EcuYuOB
8lMdcVyE2OCVJ3LuXIRoDEVVyYiL6BnkSWiQ4SIkdit71f5Zxp1EsYpY8TLu
v4qNDe7LuHaihBIsvYzRiby3zvb/RcZmzcdaj/+iTu6C7wO9v6jsKkph/F7C
v39EWo69X0KnKkdlkvMSvrLOlDizdQkZi2595m1/kGiLXGcX+ge9vRPb3TT/
YIP5gmDKzG8UV6WsV8r7jYY/CzPazv1G4Z7B98Gbf+Pr+Gkd/eZFNL0Y+eJK
wCKG2QcG5GksYiNpxQtf9UUUNIgiDNUW8eHeNH6KyiKGL1REbNi/iJEx7MS7
sosYU++eb7F2ETsOzZMkxRZx7Vv/2fHVixgb+0gtWGQR487nfioTXMTERUaj
9DIHe9zcxn8ucXAz5ZdQ5R8OJjXwHj+1yMHkuB3dEXMcTFU8S/k1wcHYvySX
b+McDG8znCod46C3+4Hl20wOuutkhvw3wkFH0a2iOgwOWr3jleSmcdD4rk8G
lcJB3WM/9tYNc1Btm0Nh5hAHFSa/aYZ+56BMlSnhMsjBrY9rjE0GOChmf5C0
t5+Dgoq5p0X6OFj11iJuC4mDNxTYX2UbOTi8T/+oTgkHTfc9qTqZwUFZlZ8b
te5xcPmQuccO+3+7JGZfzYpxMH/f1ImhpgV8K0YO7fBfQAOZDepDBxeQYthf
Zv2TjSl6KtrrvrDRRieihvSSjfPSLdH0p2xMWiFygR3NxjFfhS+Bj9ioyTJX
WhXGRgdZe0ZbMBsj7N2fxt5no9SdW7M3g9hYlHjX/PQ9NhoVhWRrBrJxoP0x
t2QAGz1/JJxZ9mcj36r0YoofGxWOvHfNus3Gu8VfSftv/eOT17zUc2Oj48UY
PZczbDSTyy1XtmOjygQqL51mI8/1aemYk2x8EWTB+8mSjd9fiNatNmLjqeFw
g1JVNpqcvW8kIMpGVec/O0SIeSxLa7mlcGceN74JOW6jOI+ijMRXCSNzuGq/
UrPu8zkcNC+6NXNiDk2THz+rFJ7DJxVWRtHVv7CflVbffP0X1pjq1Ugp/EK/
gK/a/sOz2DlcqDabNIv7raR4O6xm0SHp1omPArN4QFhm+8fqGey2rnCv9prB
Dc2vDw3Lz6CdpVSPK30ab+UFLi4mTqPCQY2kTItprIjpLTvFO43mXLzvvUqn
8HbK/e3ZnlMYIDS5jrZzCrWtzq249vEnBr+difyx9yf6FdhK+MZO4uu1Hi/U
+SfxgcRpRf4rP9DF0NIho5OFfvTfuR4kFj4JyprV/MrC8qrfD0hNLBRSz8r+
iyx8J/ebdTqfhXOCmd4ikSxclX28piechdsMFgUzwlhoeO94suYDFiZxOJ+c
77BQa/wYD+HKQoswjkmkMwuddmXEnnZi4WMHjszP8ywc6nt1VOI0C3/5HItm
2rBQcBOnp+AECw+cOHbZ+DgLg5oXHt0yZKH2R0JsrT4LFzIeJbwFFhY+OSlu
fJiF7nelntO1WLjnyrhMoCYL6aeKXotrsPC5/l3F0oMsPKNkVGilwkIjukd9
zR4WqiYm9ipKsVBkaWR5lQgLRxzUdjE5E5ik2O2V3jmBJovXq0+9nUDjasEu
itMEGj14Nnpl2wTOlSZvibo/jm+EcqbvT4xhYvnFmjdnx1Bp3WwCtXYUuRsO
OJqpjuJk/qlt4z+Y2Jd8tyc0m4kFBbqBf54xMaKJZ/e1OCb6fKPdeRPFREdq
3VdGOBPtXIo5QWFMtJjM3CkVwkTDGwnmlfeZqLUY4m13j4k/9gg1HHFnYppt
1EaFM0zkKkssXlZlosPm59YdokxEPkHRJw0jKDXt0XA8cAQfXV+nN8BgIPfG
houaxxiYt26PX3MNHfkr7FOvyNExrlKvUCeJhsNtWmvFrGi4b1jtGk2IhsW9
P8d6F6io05nj0M6gIo8Ff7rpABUbWi7013dQcWHCJ9epnYryQtG+fG1UPCOf
bfSqmYqPjKs26X2h4mQoqzigjooW9VutK6up6FD2yCD3KRWv5/1VS7xOReWa
Q/Hh+6g41Xlj1p9BQfHMqtLrphT0I5V4pVYM4wd2+astN4dxRLK6K0FxGK+K
q+23FRxGupLdOvW6IczOj9fd/GEIL+8nuXGeDWHLpDvf5bghVHgnnNIXPoTf
I8+MrA0ZwsduuUqm94bwsDnH777fEE7tM2qs8B7CW/LV0ncth3BJTs1fd+8Q
mvnWDPqlfsfkJhOdMpHvGFcjsNqiZwCT+29sc9MdwOfzVIXwnH6sUpo+UHCh
HweuLqv0be3HK+EhB93ZfbiYLaLO09WHeRE6pXFf+9Dew0NdrrkP15x4XlpW
34eEGkndjOjDXX+VNa6V9eHDz3EaCfl9aGF9+tBwWh9upolrykf2IQ+vsNHD
2V78If3HZtS2F0XTku1uN/Wg4pZD54T/14PEpTUHq36R8VQRc5XnOzJ+Cj0b
OJBKRukznXNGEWT8/fXAOnoIGbv0Hx8ICCLju7IJ8613yRiqaHyl2JeMmpv5
siY8ycjirh7e4ULGkpzc5kV9MgYeTyjp3EHG03GbLxs+/Ib7e5Mly6a6Ucu3
ucHeoRtNtvy5xtfVhSNnJSrPNXVh0EstwYqaLmyva3k7WtGF25j/ndhY2oVX
V/5YOFLQhWV7/dOuve3CqaJK1d3JXbhb52/T95AuTLQIYJue70KBi1wyZYe6
kB7K4x/L6kQij++bW3onhm7csv/Xik40C1QIu+3ZgU1U0QPkPR141GCKrEIj
Ycj88F5qNQnrskkB0akkdORqes0MJyGvLdGp40tCq+Aql8ueJHz5oXwp3pmE
TQ0ajXsvknBmsCQG7Um49Zfq2VN2JNRbVSj3w4aELB/jgOJP7RjPHPrmv7Md
Rx2MTWZ2f8Xs+Y6R0VVt6H5gSMy9shVVL09ozXq0YpbPu9C4/1pxc+i1joPG
rWgp2ukdcrgVw+NVJckHW5GQSCDk9rXi71dsZx/pVvxe479U/rsFiUHe2KWu
FrSwlBhbodmCg3Wqh9emN+MqVvChJvcmVF9HVgnS+YJ8PO/knuQ3YvvUA/Hn
0o2o5uIZn93fgKlDZ1a/j2vAh8ee/v0a0YC3Kr/9mApqQId96wfFbjfg8RTL
FuVrDbjbtyX3xrkG5Dl19GGJeQOWrNU21JRvQNc2Zd4qgQY8txy6yOn4jDYH
BqcPptehgIwaPWR1HZZuivpGDqjF6CcVx7k0atFFaLRx9xSBr5JFehSYBH7f
o8JU/k7glrLT8+rdBFob3eXXbiGw6dKXnUfLCdQNXq9nmUPgPiL3rtODf7ll
3Qrf8wQ+2rVussoQkesYQ4pPoQZdbFfQDmE1kjbqP7iyuxpDblKt+QaqULMr
UPZZVBXG8bZHurpW4aTy9vmDR6owpclQXuJAFRo5uNvzSFbhHCc+ZnRlFb58
UlnfNl+JXsLqK5U/f8Ijofmm8bEVWDn23xs52zJUN1spVL6tFNvbQ0xejBXj
ZRu+8LCiIixS+LOk9qIIl/h/XWNEFqHh9wlG7O0ijC6h2eo5F6GMcyek6xb9
+6N2z58tRfjd5yWnuKUQ+fruffEIKETLVF1XGr0A0+yXBU+ZFOD415tGPd/e
YxKVdZdnyxu0v/fmmU5HLspIXf50OyIXQz2+NG92ycXxqt39Jfq5aC4aNm69
IxfzzzI5M0uvUSvFUf2K52ts6KHcoFFz8PuJgZ+dDdk43/btcl1eFsp+bj6f
eSsDrStqTobovkTffMEew+J0NBmP4rk3loxVH5Uio0qeokpo56a0+0no7i5z
VnY8EXNsbr7Ms0hEgy+SBlO8iUjVqmeqlCZgQL57uPflBJSQ2aRQIZmAfGin
11Maiz/Opp2as3yClJWy+5UrAjHgnvxqpx49EOXmHI4euw7zpwV+rvwUBIoG
Ed9yt4eCk9KaKtP7EeB1dZqtkvoIArM7lCSKI2GFQe2xaHgMj6mFV/jaHsOG
wIwwH7soSJWMz2SNRMHAlzeP7IWfwDhfZL2hbAxc1/tvc9KbFPhbvaH4V9JL
ODI9M326+BWESbcrVpIyQL5Cx/znuUxoPfH2yo7JTNj2nH5b82AWeLLEw0/4
ZUFSTKnYcHoWoMaJp1drs2D8+6QUZyQL1gaH5wSvyoZUpr70sSOvQdZkOWWj
3xugnb+Sk7grHwolyDwyUQWQNnHB6+auQggvZ1HqKwuBS7rgqcfKIrj50Nty
s00RHNC2e8u6XQTjU1or8XkRNJooqr8pLILMjO1O8fVFEPR3TWxAbxGcP82D
rqwiUJvf9FxYvASE4xQC3huXwrBDusOeu2VQrCRm+KqgAojP0rsJ+idot1Vd
RdlYBWLXbRZ45KvA6tGtERntKojJTOwytKiCzqqPhMvFKrCeXkzLe1gF33Zq
35l6XwV9Yaji86cKBn8YsJaNqoFeeuzsamo1zNXsdY7SroGEtOEzRmcQNPzi
Lbh9CbADidq2dbXgJ/DqYOq7WmjzahY2/lgLUkOztDmsBS9TiYqXzbVQV6of
c7y7Flyi43Vfj9aCiOvIJM+fWji5Ncy0RLoO0pr35Lga18EBRbcL7Ql1gNH5
W9XpdfCr79kHxfX1ICcbYbRLvwFWeZyQ/ElqgMmP4jOl5xrhkbZLQJxLI8gT
RcLXrjVCoyF3svntRnBuNpeTv98IGV0jQItrhOHBgP9SsxrBdurDE9GmRujg
odcH/miEOjkjJSfVL1BslpdifOcLbI+MP1j5rgkett79eoDaDGFrP2eWXmuB
0FNCfjrcrbBLquvk/nWtUD+aqiQl2wobzbnTNyu2wqUPTsJi6q1QsqHJd6Vu
KwjcVmRyG7eCoVBNKu1qK4SkWlp9jv6nV9+oDOtphWBK4m4zqTbw2ssXWnLo
K7zX/OgVvacdrHxcQ2g322G+eGuyGtEO5/hXnDPtbodG69md50fb4aWLoo3s
j3bw83MNGZ9uh5PRGaXv59tBKWNo9MbvdhhptjFd5iNB8mzz24eiJLgak6Fe
qEoCHSV/HLAjgYWl0szxMRJcuMaQrvXugJg8G/W5ug6oY342lVvbCdHzlPbr
sp1wlv+vTY1GJ6xZaeAdq90JdcKPki7pdYL3ms6yQ0c7QX791n5hs3958RzJ
QptOmJdWO297rhMe67pfngnuBDn7rBsReZ1wr+jWvKR+F/SvOuqT398FGQ9X
nxFc7gI3wR7t89LdYLhZSbN5VzdI7Q5XU9vbDRx1mvKL/d3QcVRrv7BqNzxw
npSjanWDWuhzqY8G3ZBcz7fW8VQ3LPO78q5x7YYnvIuN1e+7YSd3xGOP+W5I
suoVq4n6BqIZcvFr9pAh7cXxBbIZGRTTvc+ke5IhJg1Un/iSYf6ZkMj9IDLk
PPPk/A4hg92zbsaNCDIIP9Ps+BFFhqrU9KpLcWQISVHxNMkiw7Hkhh2KH8ng
Hr9p9NMyGSKjnd+ZHu2Bukvs2MTOHljUCvWlnesF+203z2c69gKx7HDU2bUX
dlEsFPe490IEobNhwqsXrIO30tz9ekHCaD5/JrgX3ra+NVtM6gWdE06j3Hm9
cN6+a7tYRy8EuR45JbXQC/UBO+p19PtAKGFZ9Wx0H5x1FpFw3tYP7zXEea/l
9QNr5YY+3Q/9IN8v+mFNST845wmGDZf3Q4Y/z7n86n7YJjUvbPGlH5KIsfKf
Hf3waAVp4/6Rfrhn9tHLndMPl7+FyP/YPgAnzttQrxgOgOyNGUvX2AFgh0bh
peEBUHTvLjbZPQhO1uK5ip6DMNO6L1suaBACj+pkSMUNAj0ziJaWNAhH+Rqk
JZ8NQq6DkEPKi0EQxeMvtmQNQrd/z/aN7wchVfNC2tqPg/BR4UES38AgdEpl
x8wvD4JGq3QX69F3eOabtoG2ZQgWbnsVnLw0BNZ+hsebCobgjd8dNebnIeDx
z5fk6x0ChSWTJzHUITjtz+DbwRoC98oCndGpIXiwFODzfm4IkrXNC24tDsF7
/60s7eUhUDysN1ixdhiCD3vX9cgOg8G6Xwxlt2HgZ3quiCwahtuXNE+q9Q/D
JIM3c4ibAjmZLmaqGyjg4NQ6G7abArZLZWGz8hSwiM+StFeggJFCbEHjfgoc
/hxwVEWZAopzp68JqlNAQlY5ZfB/FFh8QJ8MNaAAmZ6gp3ycAp86XwhLpFDg
OZH3jZ9JgZkC2/GyBQoYvBL467aKCnZD0zz9olRwFx9cYbSOCj5lVuF3N1Dh
/qlG4eJNVHg8px01sYUKSbGFYtISVEChcPE/MlQYv39e9pvCP9+x3EzHkgoq
ButvZN2gQpbSdx0PpMLmbTkrNURp0Nb6YHCnFA0e+F/4sFqZBue6j6fw/48G
mgo6wb+P0ECptmxZw5AGu20P3r5lRINtP/N/FZrQYEPwPo9pMxrwfNjpeNWS
BlMDW22ZNjT4T6uLq9qXBg0pkTkJz2iQbOIjM0ijgRvH4flOeToIr6BFMRXp
kLf+YsAbFTr4ie/0FlGjg5k0zd1Dgw4Se15dImnSgbX/or2KNh32ml7UrjCk
w+VLFyWOWNBhLPVin9VFOrh0XkxyuEWHS7qO64NS6eD41jH6BUGHOltRkYaV
DJAV+PiQZcGAjdztRtF2DBD8w1yh6siAusW37NRLDAjkXGfyuzJAa+EQ2f0K
Azjzy/VkNwZ4/YrIeu3FgPHpTSF3vBnQwjzKVxvOgHeD3kGr0hhw/Qv57tM6
BmgUq9/ZPcGAxaROEV6xEaj083g+qDYC725uNLDWHYE098qxJuMR2DixRivk
2AhEOTs+hhMj0CL7WD3dZgQE6aXDf06NgP5LykM7uxEIPC+k8vG/EbhgZeuX
6TECevrZn2OCRmDf91APxS//enxctjStZsKZPSPSP6WZ8Lzv4r71akyYNqx1
H9Rkgl6h9Iesw0y47GplJaTHhNjtQbMe+kz41P0hrsuQCfQIysFDxkwIcXxe
3mzFhD3a5w7b/8eEgnQ7q5wgJmjxnHSayWHCQmtm+fsWJhQ9nVvtNsWEmIBn
5aY8o+DpZOAkv34Uzp1+Wr5FchSOmf5YvXLXKNTrJ5YHyo+Ctg44LSiOwoJm
gqaq0igUqU+s9lT5x6nqMt4cHIV9SvHlTPVRaJk1odgFj4JbCZdgW8cofFKQ
X50tPgbCmSc2BjqOwf8BSYhlxg==
                    "], CompressedData["
1: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
iYuty+AdI2ZLM+TxsYb/C6ssYKk=
                    "], Automatic, 
                    Hold[
                    Nearest[CompressedData["
1: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
X50tPgbCmSc2BjqOwf8BSYhlxg==
                    "] -> CompressedData["
1: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
iYuty+AdI2ZLM+TxsYb/C6ssYKk=
                    "]]]][
                    Part[#, 1]]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    (DateString[#, {"Year"}]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     0]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[
                    Part[CalculateUtilities`GraphicsUtilities`Private`scaled, 
                    1] - 0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                     TraditionalForm, Graphics]]}, FrameTicks -> {{{{0., 
                    FormBox[
                    TagBox["0", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {100., 
                    FormBox[
                    TagBox["100", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {200., 
                    FormBox[
                    TagBox["200", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {300., 
                    FormBox[
                    TagBox["300", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {400., 
                    FormBox[
                    TagBox["400", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {500., 
                    FormBox[
                    TagBox["500", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {20., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {40., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {60., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {80., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {120., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {140., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {160., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {180., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {220., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {240., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {260., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {280., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {320., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {340., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {360., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {380., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {420., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {440., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {460., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {480., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {520., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {540., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {560., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {580., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{0., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {100., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {200., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {300., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {400., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {500., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {20., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {40., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {60., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {80., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {120., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {140., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {160., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {180., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {220., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {240., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {260., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {280., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {320., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {340., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {360., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {380., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {420., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {440., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {460., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {480., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {520., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {540., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {560., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {580., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{
                    NCache[-12622780800, -1.26227808*^10], 
                    FormBox["\"1500\"", TraditionalForm]}, {
                    NCache[-9467107200, -9.4671072*^9], 
                    FormBox["\"1600\"", TraditionalForm]}, {
                    NCache[-6311347200, -6.3113472*^9], 
                    FormBox["\"1700\"", TraditionalForm]}, {
                    NCache[-3155673600, -3.1556736*^9], 
                    FormBox["\"1800\"", TraditionalForm]}, {0, 
                    FormBox["\"1900\"", TraditionalForm]}, {
                    NCache[3155673600, 3.1556736*^9], 
                    FormBox["\"2000\"", TraditionalForm]}, {
                    NCache[6311433600, 6.3114336*^9], 
                    FormBox["\"2100\"", TraditionalForm]}}, {{
                    NCache[-12622780800, -1.26227808*^10], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[-9467107200, -9.4671072*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[-6311347200, -6.3113472*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[-3155673600, -3.1556736*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {0, 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3155673600, 3.1556736*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[6311433600, 6.3114336*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}}}}, ImagePadding -> All, GridLines -> 
                NCache[{{{-12622780800, 
                    GrayLevel[0.9]}, {-9467107200, 
                    GrayLevel[0.9]}, {-6311347200, 
                    GrayLevel[0.9]}, {-3155673600, 
                    GrayLevel[0.9]}, {0, 
                    GrayLevel[0.9]}, {3155673600, 
                    GrayLevel[0.9]}, {6311433600, 
                    GrayLevel[0.9]}}, Automatic}, {{{-1.26227808*^10, 
                    GrayLevel[0.9]}, {-9.4671072*^9, 
                    GrayLevel[0.9]}, {-6.3113472*^9, 
                    GrayLevel[0.9]}, {-3.1556736*^9, 
                    GrayLevel[0.9]}, {0, 
                    GrayLevel[0.9]}, {3.1556736*^9, 
                    GrayLevel[0.9]}, {6.3114336*^9, 
                    GrayLevel[0.9]}}, Automatic}], PlotRangePadding -> None, 
                AspectRatio -> 0.2, AxesOrigin -> {0, 0}, BaseStyle -> 
                AbsoluteThickness[1], Frame -> True, FrameTicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10], GridLines -> 
                NCache[{{{-15778454400, 
                    GrayLevel[0.9]}, {-9467107200, 
                    GrayLevel[0.9]}, {-3155673600, 
                    GrayLevel[0.9]}, {3155673600, 
                    GrayLevel[0.9]}, {9467107200, 
                    GrayLevel[0.9]}}, Automatic}, {{{-1.57784544*^10, 
                    GrayLevel[0.9]}, {-9.4671072*^9, 
                    GrayLevel[0.9]}, {-3.1556736*^9, 
                    GrayLevel[0.9]}, {3.1556736*^9, 
                    GrayLevel[0.9]}, {9.4671072*^9, 
                    GrayLevel[0.9]}}, Automatic}], GridLinesStyle -> 
                GrayLevel[0.9], ImageSize -> 360., 
                LabelStyle -> {FontFamily -> "Verdana", FontSize -> 10}, 
                Method -> {"AxesInFront" -> True}, 
                PlotRange -> {{-1.199171512261409*^10, 
                  3.4081343226138973`*^9}, {0, 580.7664176520473}}, 
                PlotRangeClipping -> True, PlotRangePadding -> None, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                TicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10]}], 
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"1539\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2007\"", Identity], TraditionalForm]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )], 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], 
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"in \"", "\"occurrences per billion words per year\""}, 
                    "Row", DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}}], "Grid"]}, 
             "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  
                  ItemBox[#2, Alignment -> {Left, Inherited}, 
                   DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", #2, "}"}], ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement["statelist", {"count" -> "2", "value" -> "Linear scale"}, {
         XMLElement[
         "state", {
          "name" -> "Linear scale", "input" -> 
           "BookMatchFrequency:WordData__Linear scale"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Log scale", "input" -> 
           "BookMatchFrequency:WordData__Log scale"}, {}]}], 
       XMLElement["statelist", {"count" -> "2", "value" -> "Binned"}, {
         XMLElement[
         "state", {
          "name" -> "Binned", "input" -> 
           "BookMatchFrequency:WordData__Binned"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Raw", "input" -> 
           "BookMatchFrequency:WordData__Raw"}, {}]}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Rhymes", "scanner" -> "Data", "id" -> "Rhyme:WordData",
      "position" -> "400", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"none among common words\"", 
                 "\[NoBreak]", "\")\""}], 
               LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
               GrayLevel[0.6], StripOnInput -> False], 
              Global`TagBoxWrapper["Missing" -> "WordDataNotAvailable"]], 
             TraditionalForm], TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Lexically close words", "scanner" -> "Data", "id" -> 
     "LexicallyCloseWords:WordData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                StyleBox[
                 TagBox[
                  TagBox["\"clone\"", 
                   Global`TagBoxWrapper["Entity" -> {WordData, "clone"}]], 
                  Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                StyleBox[
                 TagBox[
                  TagBox["\"close\"", 
                   Global`TagBoxWrapper["Entity" -> {WordData, "close"}]], 
                  Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                StyleBox[
                 TagBox[
                  TagBox["\"clove\"", 
                   Global`TagBoxWrapper["Entity" -> {WordData, "clove"}]], 
                  Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0, StripOnInput -> False], TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "statelist", {"count" -> "2", "value" -> "1-letter difference"}, {
         XMLElement[
         "state", {
          "name" -> "1-letter difference", "input" -> 
           "LexicallyCloseWords:WordData__1-letter difference"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Up to 2-letter difference", "input" -> 
           "LexicallyCloseWords:WordData__Up to 2-letter difference"}, \
{}]}]}]}], Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Phrases", "scanner" -> "Data", "id" -> 
     "Phrase:WordData", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
               "\"cloze procedure\"", 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
                StripOnInput -> False], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
               "\"cloze test\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Other notable uses", "scanner" -> "Data", "id" -> 
     "Entities:WordData", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> "Internet domains"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TemplateBox[{
                 TagBox[
                  TagBox["\"cloze.com\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {Global`InternetData, "cloze.com"}]], 
                  Identity]}, "Row", DisplayFunction -> (#& ), 
                InterpretationFunction -> (RowBox[{
                   StyleBox[
                   "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                   RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\"\[InvisibleSpace]\""}], 
                   "]"}]& )], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               TemplateBox[{
                 TagBox[
                  TagBox["\"cloze.info\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {Global`InternetData, "cloze.info"}]], 
                  Identity]}, "Row", DisplayFunction -> (#& ), 
                InterpretationFunction -> (RowBox[{
                   StyleBox[
                   "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                   RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\"\[InvisibleSpace]\""}], 
                   "]"}]& )], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               TemplateBox[{
                 TagBox[
                  TagBox["\"cloze.net\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {Global`InternetData, "cloze.net"}]], 
                  Identity]}, "Row", DisplayFunction -> (#& ), 
                InterpretationFunction -> (RowBox[{
                   StyleBox[
                   "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                   RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\"\[InvisibleSpace]\""}], 
                   "]"}]& )]}], LinebreakAdjustments -> {1, 10, 0, 0, 100}, 
             LineIndent -> 0], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Crossword puzzle clues", "scanner" -> "Data", "id" -> 
     "NYTCrosswordPuzzleClues:WordData", "position" -> "800", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"none\"", "\[NoBreak]", "\")\""}], 
               LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
               GrayLevel[0.6], StripOnInput -> False], 
              Global`TagBoxWrapper["Missing" -> "None"]], TraditionalForm], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod9$$ = 
   XMLElement[
   "pod", {"title" -> "Scrabble score", "scanner" -> "Data", "id" -> 
     "ScrabbleScore:WordData", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
                TemplateBox[{
                  StyleBox[
                   TagBox[
                    RowBox[{
                    TagBox["16", 
                    Global`TagBoxWrapper["StringBoxes" -> "16"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], #& , SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], "\" \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"International English\"", 
                    "\[NoBreak]", "\")\""}], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, 
                   GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                 DisplayFunction -> (
                  RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                 InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                LineIndent -> 0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  StyleBox[
                   TagBox[
                    RowBox[{
                    TagBox["16", 
                    Global`TagBoxWrapper["StringBoxes" -> "16"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], #& , SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], "\" \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"North American English\"", 
                    "\[NoBreak]", "\")\""}], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, 
                   GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                 DisplayFunction -> (
                  RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                 InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                LineIndent -> 0]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Anagrams", "scanner" -> "Data", "id" -> 
     "Anagram:WordData", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"none among common words\"", 
                 "\[NoBreak]", "\")\""}], 
               LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
               GrayLevel[0.6], StripOnInput -> False], 
              Global`TagBoxWrapper["Missing" -> "WordDataNotAvailable"]], 
             TraditionalForm], TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "16"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
AdministrativeDivisionDataSourceInformationNotes.html", "text" -> 
        "Administrative division data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/BookDataSourceInformationNotes.\
html", "text" -> "Book data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/BridgeDataSourceInformationNotes.\
html", "text" -> "Bridge data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
BuildingDataSourceInformationNotes.html", "text" -> "Building data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/CityDataSourceInformationNotes.\
html", "text" -> "City data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
CompanyDataSourceInformationNotes.html", "text" -> "Company data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
GivenNameDataSourceInformationNotes.html", "text" -> "Given name data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
InternetDataSourceInformationNotes.html", "text" -> "Internet data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/LakeDataSourceInformationNotes.\
html", "text" -> "Lake data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
MountainDataSourceInformationNotes.html", "text" -> "Mountain data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/MovieDataSourceInformationNotes.\
html", "text" -> "Movie data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/OceanDataSourceInformationNotes.\
html", "text" -> "Ocean data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/RiverDataSourceInformationNotes.\
html", "text" -> "River data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
SurnameDataSourceInformationNotes.html", "text" -> "Surname data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/WordDataSourceInformationNotes.\
html", "text" -> "Word data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "10", "datatypes" -> 
    "Word", "timedout" -> "", "timing" -> "2.431", "parsetiming" -> "0.062", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP512119hchia5cid7717500004ff159ig07315c84&s=23", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP512219hchia5cid7717500003c4426da26gg1ffd&s=23", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 11, 6, 3.3111094`8.272548511180176}, "Line" -> 
    31, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9, 10}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", "WordData[\"cloze\"]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = "cloze"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{130., {31., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"cloze\"\>", "\<\"Adjective\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.527204755549391*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "today' s weather", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "WeatherSummary:WeatherData", 
        "Recorded weather for Hangzhou, Zhejiang, China", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    ItemBox[
                    "\"weather\"", Alignment -> {Center}, StripOnInput -> 
                    False], {LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    FormBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"today\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {
                    "Columns" -> {None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                    AllowScriptLevelChange -> False], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    TraditionalForm]}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Recorded weather for Hangzhou, Zhejiang, China", 
     "scanner" -> "Data", "id" -> "WeatherSummary:WeatherData", "position" -> 
     "200", "error" -> "false", "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"temperature\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["25", 
                    Global`TagBoxWrapper["StringBoxes" -> "25"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"conditions\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TemplateBox[{"\"fog\"", "\", \"", "\"cloudy\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )]}, {
                    TagBox[
                    PaneBox[
                    "\"relative humidity\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["74", 
                    Global`TagBoxWrapper["StringBoxes" -> "74"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"dew point: \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20", 
                    Global`TagBoxWrapper["StringBoxes" -> "20"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (RowBox[{#, "  ", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", "\"  \""}], "]"}]& )]}, {
                    TagBox[
                    PaneBox[
                    "\"wind speed\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3", 
                    Global`TagBoxWrapper["StringBoxes" -> "3"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"m\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 RowBox[{"\"(\"", "\[NoBreak]", 
                   TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["37", 
                    Global`TagBoxWrapper["StringBoxes" -> "37"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"minutes\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}, "Row", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\"  \""}], "]"}]& )], 
                    "\" ago\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )]}, "Row", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], "\[NoBreak]", "\")\""}],
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0, {FontFamily -> "Verdana", FontSize -> 10}, 
                 GrayLevel[0.5], StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "WeatherSummary:WeatherData__Show non-metric"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "WeatherSummary:WeatherData__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement[
           "unit", {"short" -> "m/s", "long" -> "meters per second"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    
                    RowBox[{
                    "\"m\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"meters per second\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}}, "Rows" -> {{0.5}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False], TraditionalForm]], "Output"]}]}]}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Weather forecast for Hangzhou, Zhejiang, China", 
     "scanner" -> "Data", "id" -> "WeatherForecast:WeatherData", "position" -> 
     "300", "error" -> "false", "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> "Today"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TemplateBox[{
                   StyleBox[
                   "\"between \"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                   StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["23", 
                    Global`TagBoxWrapper["StringBoxes" -> "23"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                   StyleBox[
                   "\" and \"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                   StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["26", 
                    Global`TagBoxWrapper["StringBoxes" -> "26"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                  DisplayFunction -> (
                   RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4}]& ), 
                  InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], 
                    "]"}]& )]}, {
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{"\"rain\"", "\" \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"all day\"", "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], Smaller, StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{"\"few clouds\"", "\" \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"all day\"", "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], Smaller, StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}}, GridBoxAlignment -> {
                "Columns" -> {Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> "Tonight"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TemplateBox[{
                   StyleBox[
                   "\"between \"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                   StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20", 
                    Global`TagBoxWrapper["StringBoxes" -> "20"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                   StyleBox[
                   "\" and \"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                   StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["23", 
                    Global`TagBoxWrapper["StringBoxes" -> "23"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                  DisplayFunction -> (
                   RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4}]& ), 
                  InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], 
                    "]"}]& )]}, {
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{"\"rain\"", "\" \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"all day\"", "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], Smaller, StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{"\"few clouds\"", "\" \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"late afternoon\"", 
                    StyleBox[
                    "\" to \"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], {
                    GrayLevel[0.8]}, StripOnInput -> False], 
                    "\"late night\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], Smaller, StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{"\"partly cloudy\"", "\" \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"late night\"", 
                    StyleBox[
                    "\" onward\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], {
                    GrayLevel[0.8]}, StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], Smaller, StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}}, GridBoxAlignment -> {
                "Columns" -> {Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "WeatherForecast:WeatherData__Show non-metric"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More details", "input" -> 
         "WeatherForecast:WeatherData__More details"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Weather history & forecast", "scanner" -> "Data", "id" -> 
     "WeatherCharts:WeatherData", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "4"}, {
     XMLElement["subpod", {"title" -> "Temperature"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    GraphicsComplexBox[CompressedData["
1:eJzt1v1PjWEYB/BWZo3mB/lBoullrZeFOkkdNdUvDoulH1RIL+r0IlKhJJVQ
IamkF72jUyzFWM1GzNKYamwxkTaLNqJZxQyTc1/nea7T9/wHtvNs1fnsep7r
vu/rvp+rYxuTEhJnamJiMqX9EX+1V+j2jZ8DdB+9/cWvULaPsFUY+peB34aj
7+3Q+nm/9gpSCtfvxHjOLnRkBNp/N87HNhJtGqV1U432siKPRXHcS7g3mr1W
uCUGXbAHHR+LVsXJzvMUdlZznLwgHj1h4P4E9I1EtkK4JInnT07Zi/HgZLaH
sPs+9OL96GkDD6WgK1PZa4Qz0tjuwmHp7FXCPgfRyw6hfxt45DD6fga6IRPH
zz2C40dl4XwDjmL97LJxf8yOoT/ovU74cQ5ak4vnpzAPnXAcz9+mfLTLCfTC
k2w631/0Xi88cArjHQXoA0WYb9tpnI/HGZy/5Vn0jN503l8Wo7vOoatK0Jnn
sX7hpWhlGdq6HJ//U47xdxfQPRXoxovovEp0dBU6sBptX4Oedwn9UW86L321
+D611mG8qB6d2IDe3Ij5XZvQFs3orwYevIzuvIIuvYr1TG1Bh2jQilbc/yVt
eF6+603nydjPjf3c2M/pMvZzE2M//9/7+atrOjfVDJOXd0qOc6TzF3NHcrcN
5Wu7K8c1tP7JHskDxWTPXjlfODnrqWTFNNX34SCPR54/xPfTeoOGJc9uIJeP
4nivxzgf9QObT/L4FuTYSX6e+sf1aZ39nwWtFv72k+dL43v95fupPtlmKjlO
9XhkLtuC1m++SCXXh57fasmmflSxFONvVkiefUDxlfacj/ZL7cTj+Qq3u6nk
evgJT3nIHtb9v/WWrEin/Dl+HKf19wby8+QFKp3948epvwZvkeen0fX7EM5H
6xsJ5fnSeHYRkt8rqf4JMVI+xW034Y54ybVWLsIzySq53k7CyjSOuwrnZXB9
aH/6srkelN8in+dH+x9SKHniBa2nuljK193gLDxaJnk211HYoYrn5yCcVMe2
E77ZzONTvh8aNu2HbzvXg5x/i+tB9z/p4vXQ+PT+qNXq8f5+a47PMX1fmmN6
/2T/A/BdNxo=
                    "], {{{}, {
                    EdgeForm[], 
                    RGBColor[0.928, 0.928, 0.966, 0.5], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 241, 242, 93, 92, 91, 90, 89, 88, 87, 86, 
                    85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 
                    71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 
                    57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 
                    43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 
                    29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 
                    15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
                    2}}]}]}, {}, {}, {}, {
                    EdgeForm[], 
                    RGBColor[0.928, 0.928, 0.966, 0.5], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{187, 239, 240, 238, 237, 236, 235, 234, 233, 
                    232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 
                    221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 
                    210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 
                    199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 
                    188}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    Dashing[{Small, Small}]], 
                    
                    LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
                    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
                    29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 
                    43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 
                    57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 
                    71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
                    85, 86, 87, 88, 89, 90, 91, 92, 93}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    
                    LineBox[{94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 
                    105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 
                    116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 
                    127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
                    138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 
                    149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 
                    160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 
                    171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 
                    182, 183, 184, 185, 186}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    Dashing[{0, Small}]], 
                    
                    LineBox[{187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
                     197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 
                    208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 
                    219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 
                    230, 231, 232, 233, 234, 235, 236, 237, 238}]}}}], {
                    Antialiasing -> False, 
                    RGBColor[1, 0, 0], 
                    LineBox[
                    
                    NCache[{{3527233200, 6.950000381469726}, {
                    3527233200, 31.750000381469725`}}, {{3.5272332*^9, 
                    6.950000381469726}, {3.5272332*^9, 
                    31.750000381469725`}}]]}}, {
                    AspectRatio -> 0.2, AxesOrigin -> {3.527147195066*^9, 7.},
                     BaselinePosition -> Scaled[0.56], Frame -> True, 
                    FrameTicks -> {{{{0, 
                    FormBox["0", TraditionalForm], {0.01, 0}}, {5, 
                    FormBox["\"\"", TraditionalForm], {0.005, 0}}, {10, 
                    FormBox["10", TraditionalForm], {0.01, 0}}, {15, 
                    FormBox["\"\"", TraditionalForm], {0.005, 0}}, {20, 
                    FormBox["20", TraditionalForm], {0.01, 0}}, {25, 
                    FormBox["\"\"", TraditionalForm], {0.005, 0}}, {30, 
                    FormBox["30", TraditionalForm], {0.01, 0}}, {35, 
                    FormBox["\"\"", TraditionalForm], {0.005, 0}}, {40, 
                    FormBox["40", TraditionalForm], {0.01, 0}}, {
                    19.350000381469727`, 
                    FormBox[
                    StyleBox[
                    "\"100%\"", ShowContents -> False, StripOnInput -> False],
                     TraditionalForm], {0, 0}}}, None}, {{{
                    NCache[3527136000, 3.527136*^9], 
                    FormBox["\"8am\"", TraditionalForm]}, {
                    NCache[3527150400, 3.5271504*^9], 
                    FormBox["\"12pm\"", TraditionalForm]}, {
                    NCache[3527164800, 3.5271648*^9], 
                    FormBox["\"4pm\"", TraditionalForm]}, {
                    NCache[3527179200, 3.5271792*^9], 
                    FormBox["\"8pm\"", TraditionalForm]}, {
                    NCache[3527193600, 3.5271936*^9], 
                    FormBox["\"12am\"", TraditionalForm]}, {
                    NCache[3527208000, 3.527208*^9], 
                    FormBox["\"4am\"", TraditionalForm]}, {
                    NCache[3527222400, 3.5272224*^9], 
                    FormBox["\"8am\"", TraditionalForm]}, {
                    NCache[3527236800, 3.5272368*^9], 
                    FormBox["\"12pm\"", TraditionalForm]}, {
                    NCache[3527251200, 3.5272512*^9], 
                    FormBox["\"4pm\"", TraditionalForm]}, {
                    NCache[3527265600, 3.5272656*^9], 
                    FormBox["\"8pm\"", TraditionalForm]}, {
                    NCache[3527280000, 3.52728*^9], 
                    FormBox["\"12am\"", TraditionalForm]}, {
                    NCache[3527294400, 3.5272944*^9], 
                    FormBox["\"4am\"", TraditionalForm]}, {
                    NCache[3527308800, 3.5273088*^9], 
                    FormBox["\"8am\"", TraditionalForm]}, {
                    NCache[3527323200, 3.5273232*^9], 
                    FormBox["\"12pm\"", TraditionalForm]}, {
                    NCache[3527143200, 3.5271432*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527157600, 3.5271576*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527172000, 3.527172*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527186400, 3.5271864*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527200800, 3.5272008*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527215200, 3.5272152*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527229600, 3.5272296*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527244000, 3.527244*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527258400, 3.5272584*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527272800, 3.5272728*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527287200, 3.5272872*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527301600, 3.5273016*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527316000, 3.527316*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527150400, 3.5271504*^9], 
                    FormBox[
                    TagBox[
                    GridBox[{{"\"\""}, {
                    StyleBox[
                    "\"yesterday\"", Larger, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TraditionalForm]}, {
                    NCache[3527236800, 3.5272368*^9], 
                    FormBox[
                    TagBox[
                    GridBox[{{"\"\""}, {
                    StyleBox["\"today\"", Larger, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TraditionalForm]}, {
                    NCache[3527323200, 3.5273232*^9], 
                    FormBox[
                    TagBox[
                    GridBox[{{"\"\""}, {
                    StyleBox["\"tomorrow\"", Larger, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TraditionalForm]}}, None}}, GridLines -> 
                    NCache[{{3527107200, 3527193600, 3527280000}, {0, 5, 10, 
                    15, 20, 25, 30, 35, 40}}, {{3.5271072*^9, 3.5271936*^9, 
                    3.52728*^9}, {0, 5, 10, 15, 20, 25, 30, 35, 40}}], 
                    GridLinesStyle -> {
                    GrayLevel[0.85], 
                    GrayLevel[0.9]}, 
                    ImagePadding -> {{Automatic, Automatic}, {Automatic, 1}}, 
                    ImageSize -> 475, PlotRange -> 
                    NCache[{{
                    3.52714719506599999999889405444264411928`23.\
957127125763133*^9, 3527317800}, {6.950000381469726, 31.750000381469725`}}, {{
                    3.527147195066*^9, 3.5273178*^9}, {6.950000381469726, 
                    31.750000381469725`}}], PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], 
                    Annotation[#, "CarlToldMeToPutALabelHere", "Frame"]& ]}, 
                    Ticks -> None}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    RowBox[{
                    StyleBox[
                    "\"\"", ShowContents -> False, StripOnInput -> False], 
                    " ", 
                    StyleBox[
                    StyleBox[
                    "\"100%\"", ShowContents -> False, StripOnInput -> False],
                     9, StripOnInput -> False]}], 
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    "\"\"", ItemSize -> {Automatic, 0.5}, StripOnInput -> 
                    False], "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
                    ItemBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    StyleBox[
                    
                    TemplateBox[{"\"low\"", "\": \""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["19", 
                    Global`TagBoxWrapper["StringBoxes" -> "19"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox["Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )]}, {
                    StyleBox[
                    
                    TemplateBox[{"\"Mon, Oct 10, 3:00am\"", "\"\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                    ItemSize -> {12, 2}, Frame -> True, FrameStyle -> 
                    GrayLevel[0.84], Alignment -> {Center, Automatic}, 
                    StripOnInput -> False], 
                    ItemBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    StyleBox[
                    "\"average: \"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["22", 
                    Global`TagBoxWrapper["StringBoxes" -> "22"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )]}, {
                    StyleBox[
                    StyleBox[
                    "\"Wed\"", ShowContents -> False, StripOnInput -> False], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                    ItemSize -> {10.2, 2}, Frame -> True, FrameStyle -> 
                    GrayLevel[0.84], Alignment -> {Center, Automatic}, 
                    StripOnInput -> False], 
                    ItemBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    StyleBox[
                    
                    TemplateBox[{"\"high\"", "\": \""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["27", 
                    Global`TagBoxWrapper["StringBoxes" -> "27"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )]}, {
                    StyleBox[
                    
                    TemplateBox[{"\"Sun, Oct 9, 2:00pm\"", "\"\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                    ItemSize -> {12, 2}, Frame -> True, FrameStyle -> 
                    GrayLevel[0.84], Alignment -> {Center, Automatic}, 
                    StripOnInput -> False]}, {
                    ItemBox[
                    "\"\"", ItemSize -> {Automatic, 1}, StripOnInput -> 
                    False], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0}}}], "Grid"]}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata,\
timeseriesdata"}]}], 
     XMLElement["subpod", {"title" -> "Cloud cover"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    GraphicsComplexBox[CompressedData["
1:eJzt1ttLFGEYx/FFI2STLtKLjlLahRVdpBGbJKE3blGhe5FaSrp5WM3y0EFb
bTXzVJmnzFMeMo+FaUKYQm1lKgXl1ZZZJohFB00iNaIimnfJ0e/8BV3sAzPD
hx/zvu8M8z7MOn28LtJOpVJNSYe4ShW43++zj2q+NIH0iiD6p8Jvgul7B+ia
g7QphD4UStuF0eMK94XTTXo65zAdHUFrI+kNUbQ6mp5Q+JmBvhVDF8TS8Udo
/zh6y1F62TF6WmFLPF2WSCcn0UHH6e0n6JUn6V8Kj5yi7yfTtSl0+mk6zEj7
pNKuabT9Gfqdwv0mujmdzs2gDWfpXZn0xnP0kix6UuHn2XR7Dp2QRwecpz0u
0E4X6RmFX+TTXZfo8gI6pZAOLqK9iulVJfRvhd9eps2ldN0VOqOMDi+nfSto
t0p6URX9XuGBq3RLNZ1XQ8fUyrbslE676+hN12jHevqLwoPXZX8U7migixrp
xCZa10x7ttDOrfSswrZ+bevXtn49X7Z+bevX/3O/fnlDcqpzu9+YsVF4dYfk
yYBul+yJR8L6O3JeKtzaI1k91JDgrb4rPGWWXFUpalh4a59kazw0Lmx8Sj8c
lOxpLasXW+TxPgjvGZasHTOKGYVLRiU/nnUPKeztF341Ls/XI+zyieuLmJIs
Vh/QXSt8c5rr/fpDzs3C2/5wvDR77dzzdwr3OtAOS7V4X/uctPg+SpfLeZbI
X69hvtaNjnKn2zbT3zxojYY2eXO+Pl9araX99/L+Mh09Eki7htIGPd0eTc/E
0V5JdEYyPZBGO2bSuly6Ip8eLabXl9Ox1fTtevp7M72jjc7spJ900db98+/7
eTCXL7D1f2iBrftvzn8BtfHZFQ==
                    "], {{{}, {
                    EdgeForm[], 
                    RGBColor[0.928, 0.928, 0.966, 0.5], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 237, 238, 91, 90, 89, 88, 87, 86, 85, 84, 
                    83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 
                    69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 
                    55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 
                    41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 
                    27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 
                    13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}, {}, {
                    EdgeForm[], 
                    RGBColor[0.928, 0.928, 0.966, 0.5], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{183, 235, 236, 234, 233, 232, 231, 230, 229, 
                    228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 
                    217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 
                    206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 
                    195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 
                    184}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    Dashing[{Small, Small}]], 
                    
                    LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
                    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
                    29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 
                    43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 
                    57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 
                    71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
                    85, 86, 87, 88, 89, 90, 91}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    LineBox[{92, 93, 94, 95, 96, 97, 98, 99, 100}], 
                    
                    LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
                     111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 
                    122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 
                    133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 
                    144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 
                    155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 
                    166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
                    177, 178, 179, 180, 181, 182}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    Dashing[{0, Small}]], 
                    
                    LineBox[{183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
                     193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 
                    204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 
                    215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 
                    226, 227, 228, 229, 230, 231, 232, 233, 234}]}}}], {
                    Antialiasing -> False, 
                    RGBColor[1, 0, 0], 
                    LineBox[
                    
                    NCache[{{3527233200, -0.1}, {3527233200, 1.1}}, {{
                    3.5272332*^9, -0.1}, {3.5272332*^9, 1.1}}]]}}, {
                    AspectRatio -> 0.1, AxesOrigin -> {3.527147195066*^9, 0}, 
                    BaselinePosition -> Scaled[0.56], Frame -> True, 
                    FrameTicks -> {{{{0, 
                    FormBox["\"0%\"", TraditionalForm]}, {
                    NCache[
                    Rational[1, 2], 0.5], 
                    FormBox[
                    StyleBox[
                    "\"100%\"", ShowContents -> False, StripOnInput -> False],
                     TraditionalForm]}, {1, 
                    FormBox["\"100%\"", TraditionalForm]}}, None}, {{{
                    NCache[3527136000, 3.527136*^9], 
                    FormBox["\"8am\"", TraditionalForm]}, {
                    NCache[3527150400, 3.5271504*^9], 
                    FormBox["\"12pm\"", TraditionalForm]}, {
                    NCache[3527164800, 3.5271648*^9], 
                    FormBox["\"4pm\"", TraditionalForm]}, {
                    NCache[3527179200, 3.5271792*^9], 
                    FormBox["\"8pm\"", TraditionalForm]}, {
                    NCache[3527193600, 3.5271936*^9], 
                    FormBox["\"12am\"", TraditionalForm]}, {
                    NCache[3527208000, 3.527208*^9], 
                    FormBox["\"4am\"", TraditionalForm]}, {
                    NCache[3527222400, 3.5272224*^9], 
                    FormBox["\"8am\"", TraditionalForm]}, {
                    NCache[3527236800, 3.5272368*^9], 
                    FormBox["\"12pm\"", TraditionalForm]}, {
                    NCache[3527251200, 3.5272512*^9], 
                    FormBox["\"4pm\"", TraditionalForm]}, {
                    NCache[3527265600, 3.5272656*^9], 
                    FormBox["\"8pm\"", TraditionalForm]}, {
                    NCache[3527280000, 3.52728*^9], 
                    FormBox["\"12am\"", TraditionalForm]}, {
                    NCache[3527294400, 3.5272944*^9], 
                    FormBox["\"4am\"", TraditionalForm]}, {
                    NCache[3527308800, 3.5273088*^9], 
                    FormBox["\"8am\"", TraditionalForm]}, {
                    NCache[3527323200, 3.5273232*^9], 
                    FormBox["\"12pm\"", TraditionalForm]}, {
                    NCache[3527143200, 3.5271432*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527157600, 3.5271576*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527172000, 3.527172*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527186400, 3.5271864*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527200800, 3.5272008*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527215200, 3.5272152*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527229600, 3.5272296*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527244000, 3.527244*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527258400, 3.5272584*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527272800, 3.5272728*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527287200, 3.5272872*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527301600, 3.5273016*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527316000, 3.527316*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527150400, 3.5271504*^9], 
                    FormBox[
                    TagBox[
                    GridBox[{{"\"\""}, {
                    StyleBox[
                    "\"yesterday\"", Larger, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TraditionalForm]}, {
                    NCache[3527236800, 3.5272368*^9], 
                    FormBox[
                    TagBox[
                    GridBox[{{"\"\""}, {
                    StyleBox["\"today\"", Larger, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TraditionalForm]}, {
                    NCache[3527323200, 3.5273232*^9], 
                    FormBox[
                    TagBox[
                    GridBox[{{"\"\""}, {
                    StyleBox["\"tomorrow\"", Larger, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TraditionalForm]}}, None}}, GridLines -> 
                    NCache[{{3527107200, 3527193600, 3527280000}, {0, 1}}, {{
                    3.5271072*^9, 3.5271936*^9, 3.52728*^9}, {0, 1}}], 
                    GridLinesStyle -> {
                    GrayLevel[0.85], 
                    GrayLevel[0.9]}, 
                    ImagePadding -> {{Automatic, Automatic}, {Automatic, 1}}, 
                    ImageSize -> 475, PlotRange -> 
                    NCache[{{
                    3.52714719506599999999889405444264411928`23.\
957127125763133*^9, 3527317800}, {-0.1, 1.1}}, {{3.527147195066*^9, 
                    3.5273178*^9}, {-0.1, 1.1}}], PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], 
                    Annotation[#, "CarlToldMeToPutALabelHere", "Frame"]& ]}, 
                    Ticks -> None}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    "\"100%\"", ShowContents -> False, StripOnInput -> False],
                     10, StripOnInput -> False], 
                    FrameBox[
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    "\"clear\"", FontColor -> GrayLevel[0.3], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], "\": \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["37.6", 
                    Global`TagBoxWrapper["StringBoxes" -> "37.6"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\" \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["16.8", 
                    Global`TagBoxWrapper["StringBoxes" -> "16.8"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"hours\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], StripOnInput -> False], "\" \""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4, 
                    "\[InvisibleSpace]", #5, "\[InvisibleSpace]", #6}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], "]"}]& )], "Caption", Smaller, StripOnInput -> 
                    False], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, StripOnInput -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    "\"overcast\"", FontColor -> GrayLevel[0.3], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], "\": \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    Global`TagBoxWrapper["StringBoxes" -> "0"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\" \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    Global`TagBoxWrapper["StringBoxes" -> "0"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"minutes\"", LinebreakAdjustments -> {1, 100, 1, 0, 
                    100}, LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], StripOnInput -> False], "\" \""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4, 
                    "\[InvisibleSpace]", #5, "\[InvisibleSpace]", #6}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], "]"}]& )], "Caption", Smaller, StripOnInput -> 
                    False], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], FrameStyle -> GrayLevel[0.84], StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,timeseriesdata"}]}], 
     XMLElement["subpod", {"title" -> "Conditions"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                GraphicsBox[{{Antialiasing -> False, 
                   RGBColor[1, 0, 0], 
                   LineBox[
                    NCache[{{3527233200, 
                    Rational[1, 2]}, {3527233200, 
                    Rational[5, 2]}}, {{3.5272332*^9, 0.5}, {3.5272332*^9, 
                    2.5}}]]}, 
                  Dashing[{0, Small}], 
                  GrayLevel[0.7], {
                   LineBox[
                    
                    NCache[{{
                    3.52714719506599999999889405444264411928`23.\
957127125763133*^9, 1}, {3527317800, 1}}, {{3.527147195066*^9, 1}, {
                    3.5273178*^9, 1}}]], 
                   LineBox[
                    
                    NCache[{{
                    
                    3.52714719506599999999889405444264411928`23.\
957127125763133*^9, 2}, {3527317800, 2}}, {{3.527147195066*^9, 2}, {
                    3.5273178*^9, 2}}]]}, 
                  AbsoluteThickness[2], {{
                    RGBColor[
                    0.24720000000000014`, 0.24, 
                    0.6], {{{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {
                    LineBox[{{3.5271819*^9, 1}, {3.5271837*^9, 1}}], {}}, {
                    LineBox[{{3.5271837*^9, 1}, {3.5271855*^9, 1}}], {}}, {
                    LineBox[{{3.5271855*^9, 1}, {3.5271873*^9, 1}}], {}}, {
                    LineBox[{{3.5271873*^9, 1}, {3.5271891*^9, 1}}], {}}, {
                    LineBox[{{3.5271891*^9, 1}, {3.5271909*^9, 1}}], {}}, {
                    LineBox[{{3.5271909*^9, 1}, {3.5271927*^9, 1}}], {}}, {
                    LineBox[{{3.5271927*^9, 1}, {3.5271945*^9, 1}}], {}}, {
                    LineBox[{{3.5271945*^9, 1}, {3.5271963*^9, 1}}], {}}, {
                    LineBox[{{3.5271963*^9, 1}, {3.5271981*^9, 1}}], {}}, {
                    LineBox[{{3.5271981*^9, 1}, {3.5271999*^9, 1}}], {}}, {
                    LineBox[{{3.5271999*^9, 1}, {3.5272017*^9, 1}}], {}}, {
                    LineBox[{{3.5272017*^9, 1}, {3.5272035*^9, 1}}], {}}, {
                    LineBox[{{3.5272035*^9, 1}, {3.5272053*^9, 1}}], {}}, {
                    LineBox[{{3.5272053*^9, 1}, {3.5272071*^9, 1}}], {}}, {
                    LineBox[{{3.5272071*^9, 1}, {3.5272089*^9, 1}}], {}}, {
                    LineBox[{{3.5272089*^9, 1}, {3.5272107*^9, 1}}], {}}, {
                    LineBox[{{3.5272107*^9, 1}, {3.5272125*^9, 1}}], {}}, {
                    LineBox[{{3.5272125*^9, 1}, {3.5272143*^9, 1}}], {}}, {
                    LineBox[{{3.5272143*^9, 1}, {3.5272161*^9, 1}}], {}}, {
                    LineBox[{{3.5272161*^9, 1}, {3.5272179*^9, 1}}], {}}, {
                    LineBox[{{3.5272179*^9, 1}, {3.5272197*^9, 1}}], {}}, {
                    LineBox[{{3.5272197*^9, 1}, {3.5272215*^9, 1}}], {}}, {
                    LineBox[{{3.5272215*^9, 1}, {3.5272233*^9, 1}}], {}}, {
                    LineBox[{{3.5272233*^9, 1}, {3.5272251*^9, 1}}], {}}, {
                    LineBox[{{3.5272251*^9, 1}, {3.5272269*^9, 1}}], {}}, {
                    LineBox[{{3.5272269*^9, 1}, {3.5272287*^9, 1}}], {}}, {
                    LineBox[{{3.5272287*^9, 1}, {3.5272305*^9, 1}}], {}}, {
                    LineBox[{{3.5272305*^9, 1}, {3.5272323*^9, 1}}], {}}, {{}, 
                    LineBox[{{3.5272323*^9, 2}, {3.5272386*^9, 2}}]}, {{}, 
                    LineBox[{{3.5272386*^9, 2}, {3.5272494*^9, 2}}]}, {{}, 
                    LineBox[{{3.5272494*^9, 2}, {3.5272602*^9, 2}}]}, {{}, 
                    LineBox[{{3.5272602*^9, 2}, {3.527271*^9, 2}}]}, {{}, 
                    LineBox[{{3.527271*^9, 2}, {3.5272818*^9, 2}}]}, {{}, 
                    LineBox[{{3.5272818*^9, 2}, {3.5272926*^9, 2}}]}, {{}, 
                    LineBox[{{3.5272926*^9, 2}, {3.5273034*^9, 2}}]}, {{}, 
                    LineBox[{{3.5273034*^9, 2}, {3.5273088*^9, 2}}]}}}}}, 
                 PlotRange -> 
                 NCache[{{
                    3.52714719506599999999889405444264411928`23.\
957127125763133*^9, 3527317800}, {
                    Rational[1, 2], 
                    Rational[5, 2]}}, {{3.527147195066*^9, 3.5273178*^9}, {
                   0.5, 2.5}}], AspectRatio -> 0.085, ImageSize -> 475, 
                 GridLines -> 
                 NCache[{{3527107200, 3527193600, 3527280000}, None}, {{
                    3.5271072*^9, 3.5271936*^9, 3.52728*^9}, None}], 
                 GridLinesStyle -> {
                   GrayLevel[0.85], 
                   GrayLevel[0.9]}, 
                 ImagePadding -> {{Automatic, Automatic}, {Automatic, 1}}, 
                 FrameTicks -> {{{{1, 
                    FormBox["\"fog\"", TraditionalForm]}, {2, 
                    FormBox["\"rain\"", TraditionalForm]}, {
                    NCache[
                    Rational[3, 2], 1.5], 
                    FormBox[
                    StyleBox[
                    "\"100%\"", ShowContents -> False, StripOnInput -> False],
                     TraditionalForm], {0, 0}}}, None}, {{{
                    NCache[3527136000, 3.527136*^9], 
                    FormBox["\"8am\"", TraditionalForm]}, {
                    NCache[3527150400, 3.5271504*^9], 
                    FormBox["\"12pm\"", TraditionalForm]}, {
                    NCache[3527164800, 3.5271648*^9], 
                    FormBox["\"4pm\"", TraditionalForm]}, {
                    NCache[3527179200, 3.5271792*^9], 
                    FormBox["\"8pm\"", TraditionalForm]}, {
                    NCache[3527193600, 3.5271936*^9], 
                    FormBox["\"12am\"", TraditionalForm]}, {
                    NCache[3527208000, 3.527208*^9], 
                    FormBox["\"4am\"", TraditionalForm]}, {
                    NCache[3527222400, 3.5272224*^9], 
                    FormBox["\"8am\"", TraditionalForm]}, {
                    NCache[3527236800, 3.5272368*^9], 
                    FormBox["\"12pm\"", TraditionalForm]}, {
                    NCache[3527251200, 3.5272512*^9], 
                    FormBox["\"4pm\"", TraditionalForm]}, {
                    NCache[3527265600, 3.5272656*^9], 
                    FormBox["\"8pm\"", TraditionalForm]}, {
                    NCache[3527280000, 3.52728*^9], 
                    FormBox["\"12am\"", TraditionalForm]}, {
                    NCache[3527294400, 3.5272944*^9], 
                    FormBox["\"4am\"", TraditionalForm]}, {
                    NCache[3527308800, 3.5273088*^9], 
                    FormBox["\"8am\"", TraditionalForm]}, {
                    NCache[3527323200, 3.5273232*^9], 
                    FormBox["\"12pm\"", TraditionalForm]}, {
                    NCache[3527143200, 3.5271432*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527157600, 3.5271576*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527172000, 3.527172*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527186400, 3.5271864*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527200800, 3.5272008*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527215200, 3.5272152*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527229600, 3.5272296*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527244000, 3.527244*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527258400, 3.5272584*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527272800, 3.5272728*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527287200, 3.5272872*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527301600, 3.5273016*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527316000, 3.527316*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527150400, 3.5271504*^9], 
                    FormBox[
                    TagBox[
                    GridBox[{{"\"\""}, {
                    StyleBox[
                    "\"yesterday\"", Larger, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TraditionalForm]}, {
                    NCache[3527236800, 3.5272368*^9], 
                    FormBox[
                    TagBox[
                    GridBox[{{"\"\""}, {
                    StyleBox["\"today\"", Larger, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TraditionalForm]}, {
                    NCache[3527323200, 3.5273232*^9], 
                    FormBox[
                    TagBox[
                    GridBox[{{"\"\""}, {
                    StyleBox["\"tomorrow\"", Larger, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TraditionalForm]}}, None}}, Frame -> True, 
                 Prolog -> {
                   Opacity[0], 
                   TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], 
                    Annotation[#, "CarlToldMeToPutALabelHere", "Frame"]& ]}, 
                 PlotRangeClipping -> True]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    "\"100%\"", ShowContents -> False, StripOnInput -> False],
                     10, StripOnInput -> False], 
                    FrameBox[
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    "\"rain\"", FontColor -> GrayLevel[0.3], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], "\": \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["47.8", 
                    Global`TagBoxWrapper["StringBoxes" -> "47.8"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\" \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["21.2", 
                    Global`TagBoxWrapper["StringBoxes" -> "21.2"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"hours\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], StripOnInput -> False], "\" \""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4, 
                    "\[InvisibleSpace]", #5, "\[InvisibleSpace]", #6}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], "]"}]& )], "Caption", Smaller, StripOnInput -> 
                    False], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, StripOnInput -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    "\"fog\"", FontColor -> GrayLevel[0.3], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], "\": \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["31.5", 
                    Global`TagBoxWrapper["StringBoxes" -> "31.5"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\" \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["14", 
                    Global`TagBoxWrapper["StringBoxes" -> "14"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"hours\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], StripOnInput -> False], "\" \""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4, 
                    "\[InvisibleSpace]", #5, "\[InvisibleSpace]", #6}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], "]"}]& )], "Caption", Smaller, StripOnInput -> 
                    False], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], FrameStyle -> GrayLevel[0.84], StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "Precipitation rate"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQDQThYe6vHBkQ4OsKVD4h+WsrUfky68H8htbpeYvs
gfykLWD+gkW7px0A8VfshMtvAvHf7UNVb3IEVb7qJJj/IM2W6ziIf+AcKp/t
Clz9IRDf5yaY7+DxeOluEH/SPVTzbzxGda/cS1R+yjtU/qrPqPwPP1D5Zv9Q
+TXMHij8QxyofA4+VL6fMCp/igQq/5YsKl9BGZWfpoHKX6ML5je0FLstAfn3
kxGE736C/S6Ib2EB5j9gjs39CuLX2XqghNcRJ4h8quSjHSA+lweq+QG+qPxp
Qaj8O+GofKVYVH5GEip/XToq/0sOKt+qCJXfUI7KP1aDyudpQuUHtaPyZ/Sg
8u9NROWrTEflZ81B5W9YiMr/tgyVb7MGld+0EZV/YhsqH5Z/nn6aeGQ/kjyM
D8t/MD4s/4H5AL490wc=
                    "], {{{}, {
                    EdgeForm[], 
                    RGBColor[0.928, 0.928, 0.966, 0.5], 
                    GraphicsGroupBox[{
                    PolygonBox[{{1, 59, 60, 2}}]}]}, {}, {}, {}, {
                    EdgeForm[], 
                    RGBColor[0.928, 0.928, 0.966, 0.5], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{5, 57, 58, 56, 55, 54, 53, 52, 51, 50, 49, 
                    48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 
                    34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
                    20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 
                    6}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, \
{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    Dashing[{Small, Small}]], 
                    LineBox[{1, 2}]}, {}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    Dashing[{0, Small}]], 
                    
                    LineBox[{5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
                    18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
                    32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                    46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56}]}}}], {
                    Antialiasing -> False, 
                    RGBColor[1, 0, 0], 
                    LineBox[
                    
                    NCache[{{3527233200, -0.16070400411263108`}, {
                    3527233200, 1.4999040383845568`}}, {{
                    3.5272332*^9, -0.16070400411263108`}, {3.5272332*^9, 
                    1.4999040383845568`}}]]}}, {
                    AspectRatio -> 0.1, AxesOrigin -> {3.527147195066*^9, 0}, 
                    BaselinePosition -> Scaled[0.56], Frame -> True, 
                    FrameTicks -> {{{{-1, 
                    FormBox[
                    RowBox[{"-", "1"}], TraditionalForm], {0.01, 0}}, {-0.5, 
                    FormBox["\"\"", TraditionalForm], {0.005, 0}}, {0, 
                    FormBox["0", TraditionalForm], {0.01, 0}}, {0.5, 
                    FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1, 
                    FormBox["1", TraditionalForm], {0.01, 0}}, {1.5, 
                    FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2, 
                    FormBox["2", TraditionalForm], {0.01, 0}}, {
                    0.6696000171359628, 
                    FormBox[
                    StyleBox[
                    "\"100%\"", ShowContents -> False, StripOnInput -> False],
                     TraditionalForm], {0, 0}}}, None}, {{{
                    NCache[3527136000, 3.527136*^9], 
                    FormBox["\"8am\"", TraditionalForm]}, {
                    NCache[3527150400, 3.5271504*^9], 
                    FormBox["\"12pm\"", TraditionalForm]}, {
                    NCache[3527164800, 3.5271648*^9], 
                    FormBox["\"4pm\"", TraditionalForm]}, {
                    NCache[3527179200, 3.5271792*^9], 
                    FormBox["\"8pm\"", TraditionalForm]}, {
                    NCache[3527193600, 3.5271936*^9], 
                    FormBox["\"12am\"", TraditionalForm]}, {
                    NCache[3527208000, 3.527208*^9], 
                    FormBox["\"4am\"", TraditionalForm]}, {
                    NCache[3527222400, 3.5272224*^9], 
                    FormBox["\"8am\"", TraditionalForm]}, {
                    NCache[3527236800, 3.5272368*^9], 
                    FormBox["\"12pm\"", TraditionalForm]}, {
                    NCache[3527251200, 3.5272512*^9], 
                    FormBox["\"4pm\"", TraditionalForm]}, {
                    NCache[3527265600, 3.5272656*^9], 
                    FormBox["\"8pm\"", TraditionalForm]}, {
                    NCache[3527280000, 3.52728*^9], 
                    FormBox["\"12am\"", TraditionalForm]}, {
                    NCache[3527294400, 3.5272944*^9], 
                    FormBox["\"4am\"", TraditionalForm]}, {
                    NCache[3527308800, 3.5273088*^9], 
                    FormBox["\"8am\"", TraditionalForm]}, {
                    NCache[3527323200, 3.5273232*^9], 
                    FormBox["\"12pm\"", TraditionalForm]}, {
                    NCache[3527143200, 3.5271432*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527157600, 3.5271576*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527172000, 3.527172*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527186400, 3.5271864*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527200800, 3.5272008*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527215200, 3.5272152*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527229600, 3.5272296*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527244000, 3.527244*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527258400, 3.5272584*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527272800, 3.5272728*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527287200, 3.5272872*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527301600, 3.5273016*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527316000, 3.527316*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3527150400, 3.5271504*^9], 
                    FormBox[
                    TagBox[
                    GridBox[{{"\"\""}, {
                    StyleBox["\"yesterday\"", Larger, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TraditionalForm]}, {
                    NCache[3527236800, 3.5272368*^9], 
                    FormBox[
                    TagBox[
                    GridBox[{{"\"\""}, {
                    StyleBox["\"today\"", Larger, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TraditionalForm]}, {
                    NCache[3527323200, 3.5273232*^9], 
                    FormBox[
                    TagBox[
                    GridBox[{{"\"\""}, {
                    StyleBox["\"tomorrow\"", Larger, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TraditionalForm]}}, None}}, GridLines -> 
                    NCache[{{
                    3527107200, 3527193600, 3527280000}, {-1, -0.5, 0, 0.5, 1,
                     1.5, 2}}, {{3.5271072*^9, 3.5271936*^9, 
                    3.52728*^9}, {-1, -0.5, 0, 0.5, 1, 1.5, 2}}], 
                    GridLinesStyle -> {
                    GrayLevel[0.85], 
                    GrayLevel[0.9]}, 
                    ImagePadding -> {{Automatic, Automatic}, {Automatic, 1}}, 
                    ImageSize -> 475, PlotRange -> 
                    NCache[{{
                    3.52714719506599999999889405444264411928`23.\
957127125763133*^9, 3527317800}, {-0.16070400411263108`, 
                    1.4999040383845568`}}, {{3.527147195066*^9, 
                    3.5273178*^9}, {-0.16070400411263108`, 
                    1.4999040383845568`}}], PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], 
                    Annotation[#, "CarlToldMeToPutALabelHere", "Frame"]& ]}, 
                    Ticks -> None}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    RowBox[{
                    StyleBox[
                    "\"\"", ShowContents -> False, StripOnInput -> False], 
                    " ", 
                    StyleBox[
                    StyleBox[
                    "\"100%\"", ShowContents -> False, StripOnInput -> False],
                     9, StripOnInput -> False]}], 
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    "\"\"", ItemSize -> {Automatic, 0.5}, StripOnInput -> 
                    False]}, {
                    ItemBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    StyleBox[
                    
                    TemplateBox[{"\"maximum\"", "\": \""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.18", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.18"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"mm\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"h\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )]}, {
                    StyleBox[
                    
                    TemplateBox[{"\"Tue, Oct 11, 5:00am\"", "\", ...\""}, 
                    "Row", DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                    ItemSize -> {12, 2}, Frame -> True, FrameStyle -> 
                    GrayLevel[0.84], Alignment -> {Center, Automatic}, 
                    StripOnInput -> False]}, {
                    ItemBox[
                    "\"\"", ItemSize -> {Automatic, 1}, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0}}}], "Grid"]}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata,\
timeseriesdata"}]}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "WeatherCharts:WeatherData__Show non-metric"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "WeatherCharts:WeatherData__More"}, {}], 
       XMLElement["statelist", {"count" -> "9", "value" -> "Current day"}, {
         XMLElement[
         "state", {
          "name" -> "Current day", "input" -> 
           "WeatherCharts:WeatherData__Current day"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Current week", "input" -> 
           "WeatherCharts:WeatherData__Current week"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Next week", "input" -> 
           "WeatherCharts:WeatherData__Next week"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Past week", "input" -> 
           "WeatherCharts:WeatherData__Past week"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Past month", "input" -> 
           "WeatherCharts:WeatherData__Past month"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Past year", "input" -> 
           "WeatherCharts:WeatherData__Past year"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Past 5 years", "input" -> 
           "WeatherCharts:WeatherData__Past 5 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Past 10 years", "input" -> 
           "WeatherCharts:WeatherData__Past 10 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "All", "input" -> 
           "WeatherCharts:WeatherData__All"}, {}]}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Historical temperatures for October 10", "scanner" -> 
     "Data", "id" -> "HistoricalTemperature:WeatherData", "position" -> "500",
      "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[
                    GraphicsComplexBox[CompressedData["
1:eJztljtvE0EUhQfoeEukAopFIME6PMzbDg85lQkFGBQBBRIWVtziJiC5coFp
QMJS6HBhJS2yQmgoHRqXWCjSUoETxy8kovwAgpg5M2d2XNDRsS4SH82dc++d
/Xx3jjx+cndmuxBi5zYh1H/5iecfrE7qr+dS8k/t1RvqmNL7P7Sozyq9uGPP
mtFxpb3YFPVJpSuZ8ogWz5bXXL9ac4v6PPw3kh2jPaVLY0+h2wuFM0pvTix1
3P2VlxvQXr15Gv5LsXWs+9WLShe+5qG9h69PKN3+Pa/XRekC/G9/Xx/xnz3U
dfvJVu93zf7jSrc+zXXdfgoHWl03fzu5uwe/O4lTSmeyN3omHvkaL573jB/y
ZYMG47G/tfWr5/qnjiX72j+N/Ys3Z/vueWXevu+7z6Ox/LPvnk984A9Mf/Cr
7c0PTD7sTz2aH5j4cfiXvw1MP6jPe3dwqOM/In/ly72h21/86NzQ7a829Xk4
8jwLu364PJEv2T/WyZf0Q/0OX0nUY/hi/w5f8LN8+VVo8iXr1f7ky69egr/h
q5ZexXk7fMGffLWL09hPvqy/4UvGJ5QmX8I/jHXy1V7YRD7yxfrJl1yHf8jX
PvRPvng+5Ev2g3XyJdfBN/nyyuPQ5EsEHe1PvorT2t/wJZ8v4smXjIcmX1wn
X1KjH/LVLq7o52n4kvv1vCBfxRWcD/mS/Wl+DV/kKeQrgXjyJQw/5Iv5yZc8
T9RHvqQf1p35hXVnfl1GfMjXJOoJ5xfyO3zBz5lfWHfm1wT8w/l1Hf7h/EL9
5EvWD57t/Ao6ul/yJUrIR75KY7dSStv5VW+ifju/ghzyky9hfi/O/IImX6wn
nF8lza+dX5pP8iU/V5S2fNXTyG/5MudJvqw/55dfvaq05UuUEO/ML9Rn51fQ
uQb/cH4hv+XLnD/5kueBeDu/gg7iyZf8PernafiSH8Rbvvwq6iFfkj/9PDm/
ghz22/kV5HQ9f+crej+K6P34r96PIrp/RXyJ6P4V3b+i+5e7Ht2//uP71x+0
Cgpv
                    
                    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {
                    RGBColor[
                    0.49813333333333343`, 0.4933333333333333, 
                    0.7333333333333333], 
                    LineBox[{1, 115}], 
                    LineBox[{78, 116}], 
                    LineBox[{79, 117}], 
                    LineBox[{80, 118}], 
                    LineBox[{81, 119}], 
                    LineBox[{82, 120}], 
                    LineBox[{83, 121}], 
                    LineBox[{84, 122}], 
                    LineBox[{85, 123}], 
                    LineBox[{86, 124}], 
                    LineBox[{87, 125}], 
                    LineBox[{88, 126}], 
                    LineBox[{89, 127}], 
                    LineBox[{90, 128}], 
                    LineBox[{91, 129}], 
                    LineBox[{92, 130}], 
                    LineBox[{93, 131}], 
                    LineBox[{94, 132}], 
                    LineBox[{95, 133}], 
                    LineBox[{96, 134}], 
                    LineBox[{97, 135}], 
                    LineBox[{98, 136}], 
                    LineBox[{99, 137}], 
                    LineBox[{100, 138}], 
                    LineBox[{101, 139}], 
                    LineBox[{102, 140}], 
                    LineBox[{103, 141}], 
                    LineBox[{104, 142}], 
                    LineBox[{105, 143}], 
                    LineBox[{106, 144}], 
                    LineBox[{107, 145}], 
                    LineBox[{108, 146}], 
                    LineBox[{109, 147}], 
                    LineBox[{110, 148}], 
                    LineBox[{111, 149}], 
                    LineBox[{112, 150}], 
                    LineBox[{113, 151}], 
                    LineBox[{114, 152}]}}, {{
                    Hue[0.67, 0.6, 0.6], 
                    RGBColor[0, 0, 1], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 153], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 154], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 155], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 156], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 157], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 158], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 159], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 160], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 161], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 162], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 163], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 164], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 165], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 166], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 167], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 168], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 169], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 170], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 171], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 172], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 173], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 174], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 175], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 176], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 177], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 178], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 179], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 180], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 181], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 182], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 183], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 184], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 185], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 186], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 187], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 188], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 189], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 190], 
                    "InsetString"]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    TagBox[
                    InsetBox["", 191], "InsetString"], 
                    TagBox[
                    InsetBox["", 192], "InsetString"], 
                    TagBox[
                    InsetBox["", 193], "InsetString"], 
                    TagBox[
                    InsetBox["", 194], "InsetString"], 
                    TagBox[
                    InsetBox["", 195], "InsetString"], 
                    TagBox[
                    InsetBox["", 196], "InsetString"], 
                    TagBox[
                    InsetBox["", 197], "InsetString"], 
                    TagBox[
                    InsetBox["", 198], "InsetString"], 
                    TagBox[
                    InsetBox["", 199], "InsetString"], 
                    TagBox[
                    InsetBox["", 200], "InsetString"], 
                    TagBox[
                    InsetBox["", 201], "InsetString"], 
                    TagBox[
                    InsetBox["", 202], "InsetString"], 
                    TagBox[
                    InsetBox["", 203], "InsetString"], 
                    TagBox[
                    InsetBox["", 204], "InsetString"], 
                    TagBox[
                    InsetBox["", 205], "InsetString"], 
                    TagBox[
                    InsetBox["", 206], "InsetString"], 
                    TagBox[
                    InsetBox["", 207], "InsetString"], 
                    TagBox[
                    InsetBox["", 208], "InsetString"], 
                    TagBox[
                    InsetBox["", 209], "InsetString"], 
                    TagBox[
                    InsetBox["", 210], "InsetString"], 
                    TagBox[
                    InsetBox["", 211], "InsetString"], 
                    TagBox[
                    InsetBox["", 212], "InsetString"], 
                    TagBox[
                    InsetBox["", 213], "InsetString"], 
                    TagBox[
                    InsetBox["", 214], "InsetString"], 
                    TagBox[
                    InsetBox["", 215], "InsetString"], 
                    TagBox[
                    InsetBox["", 216], "InsetString"], 
                    TagBox[
                    InsetBox["", 217], "InsetString"], 
                    TagBox[
                    InsetBox["", 218], "InsetString"], 
                    TagBox[
                    InsetBox["", 219], "InsetString"], 
                    TagBox[
                    InsetBox["", 220], "InsetString"], 
                    TagBox[
                    InsetBox["", 221], "InsetString"], 
                    TagBox[
                    InsetBox["", 222], "InsetString"], 
                    TagBox[
                    InsetBox["", 223], "InsetString"], 
                    TagBox[
                    InsetBox["", 224], "InsetString"], 
                    TagBox[
                    InsetBox["", 225], "InsetString"], 
                    TagBox[
                    InsetBox["", 226], "InsetString"], 
                    TagBox[
                    InsetBox["", 227], "InsetString"], 
                    TagBox[
                    InsetBox["", 228], "InsetString"]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    RGBColor[1, 0, 0], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 229], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 230], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 231], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 232], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 233], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 234], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 235], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 236], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 237], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 238], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 239], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 240], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 241], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 242], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 243], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 244], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 245], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 246], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 247], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 248], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 249], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 250], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 251], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 252], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 253], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 254], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 255], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 256], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 257], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 258], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 259], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 260], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 261], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 262], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 263], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 264], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 265], "InsetString"], 
                    TagBox[
                    InsetBox["\[FilledVerySmallSquare]", 266], 
                    "InsetString"]}, {}}}], {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    AspectRatio -> 0.15, AxesOrigin -> {2.35*^9, 5.}, Frame -> 
                    True, FrameTicks -> {{{{0, 
                    FormBox["0", TraditionalForm], {0.01, 0}}, {5, 
                    FormBox["\"\"", TraditionalForm], {0.005, 0}}, {10, 
                    FormBox["10", TraditionalForm], {0.01, 0}}, {15, 
                    FormBox["\"\"", TraditionalForm], {0.005, 0}}, {20, 
                    FormBox["20", TraditionalForm], {0.01, 0}}, {25, 
                    FormBox["\"\"", TraditionalForm], {0.005, 0}}, {30, 
                    FormBox["30", TraditionalForm], {0.01, 0}}, {35, 
                    FormBox["\"\"", TraditionalForm], {0.005, 0}}, {40, 
                    FormBox["40", TraditionalForm], {0.01, 0}}}, None}, {{{
                    NCache[2233353600, 2.2333536*^9], 
                    FormBox[
                    
                    TemplateBox[{"1970"}, "Row", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], TraditionalForm]}, {
                    NCache[2391120000, 2.39112*^9], 
                    FormBox[
                    
                    TemplateBox[{"1975"}, "Row", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], TraditionalForm]}, {
                    NCache[2548972800, 2.5489728*^9], 
                    FormBox[
                    TemplateBox[{"1980"}, "Row", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], TraditionalForm]}, {
                    NCache[2706739200, 2.7067392*^9], 
                    FormBox[
                    
                    TemplateBox[{"1985"}, "Row", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], TraditionalForm]}, {
                    NCache[2864505600, 2.8645056*^9], 
                    FormBox[
                    
                    TemplateBox[{"1990"}, "Row", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], TraditionalForm]}, {
                    NCache[3022272000, 3.022272*^9], 
                    FormBox[
                    
                    TemplateBox[{"1995"}, "Row", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], TraditionalForm]}, {
                    NCache[3180124800, 3.1801248*^9], 
                    FormBox[
                    
                    TemplateBox[{"2000"}, "Row", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], TraditionalForm]}, {
                    NCache[3337891200, 3.3378912*^9], 
                    FormBox[
                    
                    TemplateBox[{"2005"}, "Row", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], TraditionalForm]}, {
                    NCache[3495657600, 3.4956576*^9], 
                    FormBox[
                    
                    TemplateBox[{"2010"}, "Row", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], TraditionalForm]}}, {{
                    NCache[2233353600, 2.2333536*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[2391120000, 2.39112*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[2548972800, 2.5489728*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[2706739200, 2.7067392*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[2864505600, 2.8645056*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3022272000, 3.022272*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3180124800, 3.1801248*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3337891200, 3.3378912*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3495657600, 3.4956576*^9], 
                    FormBox["\"\"", TraditionalForm]}}}}, 
                    GridLines -> {{}, None}, GridLinesStyle -> GrayLevel[0.9],
                     ImagePadding -> {{Automatic, Automatic}, {Automatic, 1}},
                     ImageSize -> 475, 
                    PlotRange -> {{2.328048*^9, 3.4956576*^9}, {8., 34.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {
                    Scaled[0.02], 
                    Scaled[0.1]}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], 
                    Annotation[#, "CarlToldMeToPutALabelHere", "Frame"]& ]}, 
                    Ticks -> None}]}, {
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    StyleBox[
                    
                    TemplateBox[{"\"low\"", "\": \""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["8", 
                    Global`TagBoxWrapper["StringBoxes" -> "8"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )]}, {
                    StyleBox[
                    
                    TemplateBox[{"\"1981\"", "\"\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                    ItemSize -> {12, 2}, Frame -> True, FrameStyle -> 
                    GrayLevel[0.84], Alignment -> {Center, Automatic}, 
                    StripOnInput -> False], 
                    ItemBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"average high: \"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["25", 
                    Global`TagBoxWrapper["StringBoxes" -> "25"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    StyleBox[
                    "\"average low: \"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["15", 
                    Global`TagBoxWrapper["StringBoxes" -> "15"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}],
                     "Grid"], ItemSize -> {12, 2}, Frame -> True, FrameStyle -> 
                    GrayLevel[0.84], Alignment -> {Center, Automatic}, 
                    StripOnInput -> False], 
                    ItemBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    StyleBox[
                    
                    TemplateBox[{"\"high\"", "\": \""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["34", 
                    Global`TagBoxWrapper["StringBoxes" -> "34"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )]}, {
                    StyleBox[
                    
                    TemplateBox[{"\"1975\"", "\"\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"], 
                    ItemSize -> {12, 2}, Frame -> True, FrameStyle -> 
                    GrayLevel[0.84], Alignment -> {Center, Automatic}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                    False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0}}}], "Grid"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"daily ranges, not corrected for changes in local \
weather station environment\"", "\[NoBreak]", "\")\""}], 
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0, {FontFamily -> "Verdana", FontSize -> 10}, 
                 GrayLevel[0.5], StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show table", "input" -> 
         "HistoricalTemperature:WeatherData__Show table"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "HistoricalTemperature:WeatherData__Show non-metric"}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Weather station information", "scanner" -> "Data", 
     "id" -> "WeatherStationInformation:WeatherData", "position" -> "600", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"name\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TemplateBox[{"\"ZSHC\"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"Hangzhou Xiaoshan Airport\"", 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                  DisplayFunction -> (RowBox[{#, "  ", #2}]& ), 
                  InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", "\"  \""}], "]"}]& )]}, {
                 TagBox[
                  PaneBox[
                  "\"relative position\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    Global`TagBoxWrapper["StringBoxes" -> "2"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    "\"S\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (RowBox[{#, " ", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", " "}], "]"}]& )], 
                    "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    
                    TemplateBox[{"\"center of\"", "\" \"", "\"Hangzhou\""}, 
                    "Row", DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}, "Row", 
                   DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                   InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                  LineIndent -> 0]}, {
                 TagBox[
                  PaneBox[
                  "\"relative elevation\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"comparable to \"", 
                    
                    TemplateBox[{"\"center of\"", "\" \"", "\"Hangzhou\""}, 
                    "Row", DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, 
                  GrayLevel[0.6], StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "WeatherStationInformation:WeatherData__Show non-metric"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "WeatherStationInformation:WeatherData__More"}, {}]}], 
     XMLElement["infos", {"count" -> "2"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://www.bing.com/maps/?v=2&sty=b&lvl=12&cp=30.233~120.167&\
where1=30.233%20N%2C%20120.167%20E", "text" -> "Satellite image"}, {}]}], 
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement["unit", {"short" -> "km", "long" -> "kilometers"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"kilometers\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}}, "Rows" -> {{0.5}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False], TraditionalForm]], "Output"]}]}]}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Weather station comparisons", "scanner" -> "Data", 
     "id" -> "LocalTemperature:WeatherData", "position" -> "700", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"position\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"elevation\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"min\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"average\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"max\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]]}, {
                    TagBox[
                    PaneBox[
                    "\"ZSHC\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    Global`TagBoxWrapper["StringBoxes" -> "2"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    "\"S\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (RowBox[{#, 
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[1]], #2}]& ), InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[1]]}], "]"}]& )], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["43", 
                    Global`TagBoxWrapper["StringBoxes" -> "43"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"m\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["22", 
                    Global`TagBoxWrapper["StringBoxes" -> "22"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["23", 
                    Global`TagBoxWrapper["StringBoxes" -> "23"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["25", 
                    Global`TagBoxWrapper["StringBoxes" -> "25"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"WMO58556\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["95", 
                    Global`TagBoxWrapper["StringBoxes" -> "95"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    "\"SE\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (RowBox[{#, 
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[1]], #2}]& ), InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[1]]}], "]"}]& )], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["108", 
                    Global`TagBoxWrapper["StringBoxes" -> "108"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"m\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20", 
                    Global`TagBoxWrapper["StringBoxes" -> "20"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20", 
                    Global`TagBoxWrapper["StringBoxes" -> "20"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20", 
                    Global`TagBoxWrapper["StringBoxes" -> "20"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left, Left, Left, Left, Left}, 
                    "Rows" -> {{Baseline}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}, {1, 3} -> {Center, Baseline}, {
                    1, 4} -> {Center, Baseline}, {1, 5} -> {
                    Center, Baseline}, {1, 6} -> {Center, Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"sorted by distance and inferred reliability\"", 
                   "\[NoBreak]", "\")\""}], 
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0, {FontFamily -> "Verdana", FontSize -> 10}, 
                 GrayLevel[0.5], StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "LocalTemperature:WeatherData__Show non-metric"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "2"}, {
           XMLElement["unit", {"short" -> "km", "long" -> "kilometers"}, {}], 
           XMLElement["unit", {"short" -> "m", "long" -> "meters"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"kilometers\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"m\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"meters\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}}, "Rows" -> {{0.5}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False], TraditionalForm]], "Output"]}]}]}]}]}], 
   Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, 
   Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, 
   Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, 
   Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, 
   Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, 
   Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
   Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "today weather"}, {}]}], 
    XMLElement["sources", {"count" -> "2"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
WeatherDataSourceInformationNotes.html", "text" -> "Weather data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
WeatherForecastDataSourceInformationNotes.html", "text" -> 
        "Weather forecast data"}, {}]}], 
    XMLElement["sources", {"count" -> "2"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
WeatherDataSourceInformationNotes.html", "text" -> "Weather data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
WeatherForecastDataSourceInformationNotes.html", "text" -> 
        "Weather forecast data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "5", "datatypes" -> 
     "City,Weather", "timedout" -> "Data", "timing" -> "6.626", "parsetiming" -> 
     "0.108", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4b.wolframalpha.com/api/v2/recalc.jsp?id=\
MSP137819hci2e611g5f8if000035h4chb1c9hhf6cb&s=22", "id" -> 
     "MSP137919hci2e611g5f8if000027hbha3i03c35278&s=22", "related" -> 
     "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP138019hci2e611g5f8if00000cf31bfia4hb8205&s=22", "version" -> "2.1"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
     "City,Weather", "timedout" -> "", "timing" -> "2.539", "parsetiming" -> 
     "0.", "parsetimedout" -> "false", "recalculate" -> "", "id" -> "", 
     "related" -> "", "version" -> "2.1"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 11, 6, 38.8980234`9.342502418760281}, "Line" -> 
    31, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7}, Typeset`failedpods$$ = {8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35}, 
   Typeset`chosen$$ = {
   "WeatherSummary:WeatherData", 
    "Recorded weather for Hangzhou, Zhejiang, China", 1, 1, "Content"}, 
   Typeset`open$$ = False, Typeset`newq$$ = "today' s weather"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$}, Typeset`chosen$$,
         Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{318., {48., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$}, 
         Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www4b.wolframalpha.com/api/v2/recalc.jsp?id=\
MSP137819hci2e611g5f8if000035h4chb1c9hhf6cb&s=22", Typeset`asyncpods$$}]]; 
     Typeset`asyncpods$$ = {}; Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   FrameBox[
    StyleBox[
     FormBox[
      StyleBox[GridBox[{
         {
          StyleBox[
           StyleBox[GridBox[{
              {
               PaneBox["\<\"temperature\"\>",
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                BaselinePosition->Baseline], 
               StyleBox[
                RowBox[{
                "25", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                 "\[ThickSpace]", "\[InvisibleSpace]", 
                 StyleBox["\<\"\[Degree]C\"\>",
                  FontFamily->"Helvetica",
                  FontSize->Smaller]}],
                ZeroWidthTimes->False,
                LineIndent->0,
                LinebreakAdjustments->{1, 100, 1, 0, 100}]},
              {
               PaneBox["\<\"conditions\"\>",
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                BaselinePosition->Baseline], 
               
               RowBox[{"\<\"fog\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
                "\[InvisibleSpace]", "\<\"cloudy\"\>"}]},
              {
               PaneBox["\<\"relative humidity\"\>",
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                BaselinePosition->Baseline], 
               RowBox[{
                StyleBox[
                 RowBox[{"74", "\[InvisibleSpace]", 
                  StyleBox["\<\"%\"\>",
                   FontFamily->"Helvetica",
                   FontSize->Smaller]}],
                 ZeroWidthTimes->False,
                 LineIndent->0,
                 LinebreakAdjustments->{1, 100, 1, 0, 100}], "  ", 
                StyleBox[
                 
                 RowBox[{"\<\"(\"\>", "\[NoBreak]", "\<\"dew point: \"\>", 
                  "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{
                   "20", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                    "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox["\<\"\[Degree]C\"\>",
                    FontFamily->"Helvetica",
                    FontSize->Smaller]}],
                   ZeroWidthTimes->False,
                   LineIndent->0,
                   LinebreakAdjustments->{1, 100, 1, 0, 100}], 
                  "\[NoBreak]", "\<\")\"\>"}],
                 StripOnInput->False,
                 LineIndent->0,
                 LinebreakAdjustments->{1, 100, 1, 0, 100},
                 LineColor->GrayLevel[0.6],
                 FrontFaceColor->GrayLevel[0.6],
                 BackFaceColor->GrayLevel[0.6],
                 GraphicsColor->GrayLevel[0.6],
                 FontColor->GrayLevel[0.6]]}]},
              {
               PaneBox["\<\"wind speed\"\>",
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                BaselinePosition->Baseline], 
               StyleBox[
                RowBox[{
                "3", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                 "\[ThickSpace]", "\[InvisibleSpace]", 
                 StyleBox[
                  
                  RowBox[{"\<\"m\"\>", "\[InvisibleSpace]", "\<\"/\"\>", 
                   "\[InvisibleSpace]", "\<\"s\"\>"}],
                  FontFamily->"Helvetica",
                  FontSize->Smaller]}],
                ZeroWidthTimes->False,
                LineIndent->0,
                LinebreakAdjustments->{1, 100, 1, 0, 100}]}
             },
             AllowScriptLevelChange->False,
             AutoDelete->False,
             BaselinePosition->Automatic,
             FrameStyle->GrayLevel[0.84],
             
             GridBoxAlignment->{
              "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}},
             GridBoxBackground->{"Columns" -> {None, None}},
             GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}], 
            "Grid"],
           StripOnInput->False,
           LineSpacing->{0.9, 0, 1.5},
           LineIndent->0]},
         {
          StyleBox[
           RowBox[{"\<\"(\"\>", "\[NoBreak]", 
            RowBox[{
             StyleBox[
              RowBox[{"37", "\[InvisibleSpace]", " ", 
               StyleBox["\<\"minutes\"\>",
                StripOnInput->False,
                LineIndent->0,
                LinebreakAdjustments->{1, 100, 1, 0, 100},
                FontFamily->"Helvetica",
                FontSize->Smaller]}],
              ZeroWidthTimes->False,
              LineIndent->0,
              LinebreakAdjustments->{1, 100, 1, 0, 100}], 
             "\[InvisibleSpace]", "\<\" ago\"\>"}], 
            "\[NoBreak]", "\<\")\"\>"}],
           StripOnInput->False,
           LineIndent->0,
           LinebreakAdjustments->{1, 100, 1, 0, 100},
           LineColor->GrayLevel[0.5],
           FrontFaceColor->GrayLevel[0.5],
           BackFaceColor->GrayLevel[0.5],
           GraphicsColor->GrayLevel[0.5],
           FontFamily->"Verdana",
           FontSize->10,
           FontColor->GrayLevel[0.5]]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TraditionalForm], "Output",
     ScriptLevel->0,
     FontFamily->"Times",
     FontSize->14,
     Background->None],
    BaseStyle->{Plain},
    FrameMargins->10,
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   WolframAlphaResult[
   "today' s weather", {{"WeatherSummary:WeatherData", 1}, "Content"}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.527204805388258*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "function", Typeset`newq$$ = "function", 
   Typeset`chosen$$ = "WordData[\"function\"]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}}], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse["function", 
               Defer[
                WordData["function"]], "Fast parse"]; Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse["function", 
                  Defer[
                   WordData["function"]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"WordData", "[", "\"\<function\>\"", "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"WordData", "[", "\<\"function\"\>", "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"WordData", "[", "\"function\"", "]"}]], "Input"],
                   All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}}], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse["function", 
                   Defer[
                    WordData["function"]], "Fast parse"]; 
                 Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "function", 
                    Defer[
                    WordData["function"]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"WordData", "[", "\<\"function\"\>", "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"WordData", "[", "\<\"function\"\>", "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"WordData", "[", "\"function\"", "]"}]], "Input"],
                     All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], 
            PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{Deployed -> True}]}
      },
      BaselinePosition->{1, 1},
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"function\"\>", "\<\"Noun\"\>", "\<\"Duty\"\>"},
     {"\<\"function\"\>", "\<\"Noun\"\>", "\<\"Utility\"\>"},
     {"\<\"function\"\>", "\<\"Noun\"\>", "\<\"SoftwareSystem\"\>"},
     {"\<\"function\"\>", "\<\"Noun\"\>", "\<\"SocialEvent\"\>"},
     {"\<\"function\"\>", "\<\"Noun\"\>", "\<\"SocialGathering\"\>"},
     {"\<\"function\"\>", "\<\"Noun\"\>", "\<\"Relation\"\>"},
     {"\<\"function\"\>", "\<\"Noun\"\>", "\<\"MathematicalRelation\"\>"},
     {"\<\"function\"\>", "\<\"Verb\"\>", "\<\"Officiate\"\>"},
     {"\<\"function\"\>", "\<\"Verb\"\>", "\<\"Go\"\>"},
     {"\<\"function\"\>", "\<\"Verb\"\>", "\<\"Answer\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.52720497118318*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Mathematician", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}, 
      "ExtrusionOpen" -> True}}, Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods"}, Typeset`pod1$$ = 
   XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox["\"mathematicians\"", 
                    Global`TagBoxWrapper[
                    "Definition" -> ("mathematicians" -> 
                    "Conduct research in fundamental mathematics or in \
application of mathematical techniques to science, management, and other \
fields. Solve or direct solutions to problems in various fields by \
mathematical methods.")]], 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`ExpandedSalaryData, "Mathematicians15-2020"}]], 
                    Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"people employed\"", "\"United States\""}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Data", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               StyleBox[
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["2770", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                 Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, ZeroWidthTimes -> False], "\" \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  FormBox[
                   TagBox["\"2009\"", Identity], TraditionalForm], 
                  "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0, {FontFamily -> "Verdana", FontSize -> 10}, 
                GrayLevel[0.5], StripOnInput -> False]}, "Row", 
              DisplayFunction -> (
               RowBox[{#, "\[InvisibleSpace]", #2, 
                 "\[InvisibleSpace]", #3}]& ), 
              InterpretationFunction -> (RowBox[{
                 StyleBox[
                 "Row", FontFamily -> "Bitstream Vera Sans", 
                  FontSize -> -1 + Inherited], "[", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
             LineIndent -> 0], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Employment history", "scanner" -> "Data", "id" -> 
     "EmploymenWageHistory:Employment:ExpandedSalaryData", "position" -> 
     "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                GraphicsComplexBox[CompressedData["
1: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
                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1Hl8z3UcwPGNkJo0y2zCGGOuxsbctkzLWGrrEirpUNKmO12KChUdSrcu
KgpROXOkk6J0qFTO6I5CdKDn++GP5+P1+bz32Xff3+/7pcnQyvKKKgkJCYmU
Jx5uWeLhda71ybSnHTmcQFvaUExrLuEk7mYg/f3uIS3QxXEN/T1+V0fpfjpb
P6frSbVupfexgF/iumYX6x3MYgtNzHrrOdzAs3xBXfOWmk0LmlPEAK7nGT7n
OOey9CLG8gqbaWzeS99iLx3tJ2ip/qfddV58Rt0R19ezdRG/xfdhf50+zWek
2DfTCxnDy2wiw/xEPYtrmcqn1DFvqpnxGeN+KORMruEp1pHsXIYO5XZmspFG
5gVaJT4HK6xLdI920PHaT//VbjpXt5NlfYYu5Nd4pvZX65N8wrH2jfQCbmMG
39HQvKeezlU8wcfUNm+oDTie+vSI94oreZy1HONcuk5iPj/TymyILuNPcu1H
6z90tX5Je+u3cX3trqfG+xrfKcvtd5NnPU5f5Xua2ZfpSB5jDbXM0vR8buVF
vol7Nu+mp1HJo3xEknk9TY13Ld6juKf4+1TwCB9ytHMpOpE3+ImWZudp/MMq
ZKllH/1D2+st+jddrF/QDfG9WXfRu5jDNpqa9dcrmMJqjjKro+dyM9P5mnTz
znoKI3iYVdQ0T47nGs8qngOdKOVyHuIDjnSulr7Nvjhjf29cTw9qT31di/VH
zdbB+ia7aGd/k07jK9Ls8/VOZrOVTLN+OpzJvE8Ns6T4HuOzxf3GvdCRvlzG
g7xHdWdrxLPSqhSxMs7pX5qv9+iBeAetX9MfaGE9SJewkxz7G/V5vqSefQct
4VIe4F2qmVePcgRVif838+J5Moz7eSd+7uz/U5SPJw==
                    "]]}]}, {}, {}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    LineBox[CompressedData["
1:eJwl0nl8z3UcwPHZykgUSSqpLWEqO2yaWqnGappNiwpRDVHYCF0qOp0djtKh
HN1KulzlKjooFXIfIZSzO3Q/3w9/PH+v7+e9776/7+/7+aaUVZSWV0pISGjn
I3qUjyX6OD25nGYkkhR/52gqR537sY6hF4Vkc5L5Wn2Bu0i3/lE/oDONrL/X
d7nQ8T86iuaO/9A2+pHma1KlI/eWHN+pn+hYbo7zyKEKVTmGahxLsnM/1XHc
whWkmm3XN3kovo+6Zuv0RQaTYf2TzuM6Glv/oAX6nl6k/2pbHa3n6UFdTPW4
F+vPdDy9KYpzqMFxHE/NuF/nLdUn6BPXI5eTzdfrS9xNF2rFbzNfpk/Sl2LO
NPtOZ/AwLTjFbIO+HGvHh/UeMh3/HPup8/Xi2Gy6Spru1pk8wgnxHM0+1wmU
U8L51OZE6sQ+x7N23hf6FBXxHnEBp5pv1Fe4l+vjWcczMl+uT9OPK2lgtkPf
Yli8b9a/6kIuifeSEvKs6+kmbaWvxj3pnzqELMe/6AJuoIn1Hp3Fo/FsYx/M
vtRn6E9pvIPx3OKe4/qcFnvlvK/0WW7lqtj7+Jv5Zn2NodxI/dhX8691IgM4
x3qfzqE9Z1nv1Lfj+Tj+K95JHa7Z+psW6iK9VBNpGdfWLTqN+yjj9HiHzFfo
cwykQ+wpZ5BCarwf8e44b6U+zyCujmca1zD/Vl/nfrrFPsTem6/SSdzGudb7
dS7X0NB6l7bWdzRP/9YiHaE5+rt+GL8j7sd6q77BA3SPZxHvkfk3OpnbuZb8
uD6NaExavGvOW61TuIOOsffxG8236XQepAdnm+3V2TwW+08dszU6lVzHh/RO
mjo+oJfp+9pS/9Ni7aQj4zdyU1yXgtjTeB7xv6STQWZcgyz+B0Qajn4=
                    "]]}}}], {{{}, {
                   Hue[0.67, 0.6, 0.6], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   
                   PointBox[{{3.187296*^9, 3080.}, {3.218832*^9, 2600.}, {
                    3.250368*^9, 2470.}, {3.281904*^9, 2410.}, {3.3135264*^9, 
                    2930.}, {3.3450624*^9, 2840.}, {3.3765984*^9, 3160.}, {
                    3.4081344*^9, 2770.}, {3.4501248*^9, 2770.}}]}, {}}}}, {
               GridLines -> Dynamic[
                  Join[{{{3155673600, 
                    GrayLevel[0.9]}, {3218832000, 
                    GrayLevel[0.9]}, {3281904000, 
                    GrayLevel[0.9]}, {3345062400, 
                    GrayLevel[0.9]}, {3408134400, 
                    GrayLevel[0.9]}, {3471292800, 
                    GrayLevel[0.9]}}, {2000, 2200, 2400, 2600, 2800, 3000, 
                    3200, 3400}}, 
                   Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], Epilog -> {{
                   CapForm[None], {
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}]}, {
                    AbsoluteThickness[1], 
                    GrayLevel[0], 
                    LineBox[{{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}, {
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]]}}]}}, 
                  DynamicBox[
                   Typeset`ToBoxes[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[
                    1, {9, 2}, 3, {{12.126890698788404`, 12.246877554441909`, 
                    12.366864410095413`, 12.486851265748916`, 
                    12.6071668525138, 12.727153708167304`, 
                    12.847140563820808`, 12.967127419474313`, 
                    13.126890739604733`}, {2.8323971034251905`, 
                    2.3909845678264596`, 2.2714353394351363`, 
                    2.216258772485295, 2.694455686050587, 2.611690835625825, 
                    2.905965859358312, 2.547318174184343, 
                    2.547318174184343}}, {{12.126890698788404`, 
                    2.8323971034251905`}, {12.246877554441909`, 
                    2.3909845678264596`}, {12.366864410095413`, 
                    2.2714353394351363`}, {12.486851265748916`, 
                    2.216258772485295}, {12.6071668525138, 
                    2.694455686050587}, {12.727153708167304`, 
                    2.611690835625825}, {12.847140563820808`, 
                    2.905965859358312}, {12.967127419474313`, 
                    2.547318174184343}, {13.126890739604733`, 
                    2.547318174184343}}, {{3.187296*^9, 3080.}, {3.218832*^9, 
                    2600.}, {3.250368*^9, 2470.}, {3.281904*^9, 2410.}, {
                    3.3135264*^9, 2930.}, {3.3450624*^9, 2840.}, {
                    3.3765984*^9, 3160.}, {3.4081344*^9, 2770.}, {
                    3.4501248*^9, 2770.}}, Automatic, 
                    Hold[
                    
                    Nearest[{{12.126890698788404`, 2.8323971034251905`}, {
                    12.246877554441909`, 2.3909845678264596`}, {
                    12.366864410095413`, 2.2714353394351363`}, {
                    12.486851265748916`, 2.216258772485295}, {
                    12.6071668525138, 2.694455686050587}, {
                    12.727153708167304`, 2.611690835625825}, {
                    12.847140563820808`, 2.905965859358312}, {
                    12.967127419474313`, 2.547318174184343}, {
                    13.126890739604733`, 2.547318174184343}} -> {{3.187296*^9,
                     3080.}, {3.218832*^9, 2600.}, {3.250368*^9, 2470.}, {
                    3.281904*^9, 2410.}, {3.3135264*^9, 2930.}, {3.3450624*^9,
                     2840.}, {3.3765984*^9, 3160.}, {3.4081344*^9, 2770.}, {
                    3.4501248*^9, 2770.}}]]][#/{2.6282878927229404`*^8, 
                    1087.4181435489345`}]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    (DateString[#, {"MonthNameShort", " ", "Year"}]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    Function[Null, 
                    RawBoxes[
                    FormBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    MakeBoxes[#, TraditionalForm], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm]]][
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[
                    Part[CalculateUtilities`GraphicsUtilities`Private`scaled, 
                    1] - 0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                     TraditionalForm, Graphics]]}, FrameTicks -> {{{{2400., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox["2400", 
                    Global`TagBoxWrapper["StringBoxes" -> "2400"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2600., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox["2600", 
                    Global`TagBoxWrapper["StringBoxes" -> "2600"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2800., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox["2800", 
                    Global`TagBoxWrapper["StringBoxes" -> "2800"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {3000., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox["3000", 
                    Global`TagBoxWrapper["StringBoxes" -> "3000"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {3200., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox["3200", 
                    Global`TagBoxWrapper["StringBoxes" -> "3200"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2450., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2550., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2650., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2700., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2750., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2850., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2900., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2950., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3050., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3100., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3150., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3250., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{2200., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2400., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2600., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2800., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {3000., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {3200., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2250., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2300., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2350., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2450., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2550., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2650., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2700., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2750., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2850., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2900., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2950., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3050., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3100., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3150., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3250., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{
                    NCache[3155673600, 3.1556736*^9], 
                    FormBox["\"2000\"", TraditionalForm]}, {
                    NCache[3218832000, 3.218832*^9], 
                    FormBox["\"2002\"", TraditionalForm]}, {
                    NCache[3281904000, 3.281904*^9], 
                    FormBox["\"2004\"", TraditionalForm]}, {
                    NCache[3345062400, 3.3450624*^9], 
                    FormBox["\"2006\"", TraditionalForm]}, {
                    NCache[3408134400, 3.4081344*^9], 
                    FormBox["\"2008\"", TraditionalForm]}, {
                    NCache[3471292800, 3.4712928*^9], 
                    FormBox["\"2010\"", TraditionalForm]}, {
                    NCache[3187296000, 3.187296*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3250368000, 3.250368*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3313526400, 3.3135264*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3376598400, 3.3765984*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3439756800, 3.4397568*^9], 
                    FormBox["\"\"", TraditionalForm]}}, {{
                    NCache[3155673600, 3.1556736*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3218832000, 3.218832*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3281904000, 3.281904*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3345062400, 3.3450624*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3408134400, 3.4081344*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3471292800, 3.4712928*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3187296000, 3.187296*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3250368000, 3.250368*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3313526400, 3.3135264*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3376598400, 3.3765984*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3439756800, 3.4397568*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}}}}, ImagePadding -> All, GridLines -> 
                NCache[{{{3155673600, 
                    GrayLevel[0.9]}, {3218832000, 
                    GrayLevel[0.9]}, {3281904000, 
                    GrayLevel[0.9]}, {3345062400, 
                    GrayLevel[0.9]}, {3408134400, 
                    GrayLevel[0.9]}, {3471292800, 
                    GrayLevel[0.9]}}, Automatic}, {{{3.1556736*^9, 
                    GrayLevel[0.9]}, {3.218832*^9, 
                    GrayLevel[0.9]}, {3.281904*^9, 
                    GrayLevel[0.9]}, {3.3450624*^9, 
                    GrayLevel[0.9]}, {3.4081344*^9, 
                    GrayLevel[0.9]}, {3.4712928*^9, 
                    GrayLevel[0.9]}}, Automatic}], PlotRangePadding -> None, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                AxesOrigin -> {3.19*^9, 2200.}, BaseStyle -> 
                AbsoluteThickness[1], Epilog -> {
                  CapForm[None], {
                   GrayLevel[1], 
                   PolygonBox[{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}]}, {
                   AbsoluteThickness[1], 
                   GrayLevel[0], 
                   LineBox[{{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}, {
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]]}}]}}, Frame -> True, FrameTicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10], GridLines -> 
                NCache[{{{3155673600, 
                    GrayLevel[0.9]}, {3218832000, 
                    GrayLevel[0.9]}, {3281904000, 
                    GrayLevel[0.9]}, {3345062400, 
                    GrayLevel[0.9]}, {3408134400, 
                    GrayLevel[0.9]}, {3471292800, 
                    GrayLevel[0.9]}}, Automatic}, {{{3.1556736*^9, 
                    GrayLevel[0.9]}, {3.218832*^9, 
                    GrayLevel[0.9]}, {3.281904*^9, 
                    GrayLevel[0.9]}, {3.3450624*^9, 
                    GrayLevel[0.9]}, {3.4081344*^9, 
                    GrayLevel[0.9]}, {3.4712928*^9, 
                    GrayLevel[0.9]}}, Automatic}], GridLinesStyle -> 
                GrayLevel[0.9], ImageSize -> 250, 
                LabelStyle -> {FontFamily -> "Verdana", FontSize -> 10}, 
                Method -> {"AxesInFront" -> True}, 
                PlotRange -> {{3.187296005363853*^9, 3.450124794636147*^9}, {
                 2185.0593801817386`, 3272.477523730673}}, PlotRangePadding -> 
                None, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                TicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10]}], 
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"2001\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2009\"", Identity], TraditionalForm]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )], 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}, {
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{"\"in \"", "\"people\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", #2, "}"}], ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Right", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Center", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show wage history", "input" -> 
         "EmploymenWageHistory:Employment:ExpandedSalaryData__Show wage \
history"}, {}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Employment summary", "scanner" -> "Data", "id" -> 
     "EmploymentChangeInformation:Employment:ExpandedSalaryData", "position" -> 
     "400", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TagBox["\"people employed\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2770", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"yearly change\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    Global`TagBoxWrapper["StringBoxes" -> "0"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"workforce fraction\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.002", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.002"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"1 in 47165\"", "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], "Comment", StripOnInput -> False]}, "Row",
                     DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"median wage\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{"\"$\"", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                    TagBox["95150", #& ], "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\[InvisibleSpace]", "\" \"", "\[InvisibleSpace]",
                     "\"per year\""}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"US dollars per year\"", 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"median wage yearly change\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    
                    RowBox[{"+", "\"$\"", "\[InvisibleSpace]", 
                    "\[InvisibleSpace]", 
                    TagBox["4280", #& ], "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\[InvisibleSpace]", "\" \"", "\[InvisibleSpace]",
                     "\"per year\""}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{"\"(\"", "\[NoBreak]", "\"US dollars per year\"", 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"+", 
                    TagBox["5", 
                    Global`TagBoxWrapper["StringBoxes" -> "5"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    "\"50% range\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{"\"$\"", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["71430", #& ], 
                    StyleBox["\"\[MediumSpace]to\[MediumSpace]\"", 
                    GrayLevel[0.6]], 
                    TagBox["119480", #& ], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}], "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\[InvisibleSpace]", "\" \"", "\[InvisibleSpace]", 
                    "\"per year\""}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"80% range\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{"\"$\"", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["53570", #& ], 
                    StyleBox["\"\[MediumSpace]to\[MediumSpace]\"", 
                    GrayLevel[0.6]], 
                    TagBox["140500", #& ], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}], "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\[InvisibleSpace]", "\" \"", "\[InvisibleSpace]", 
                    "\"per year\""}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"2009 data\"", "\[NoBreak]", 
                   "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0, {FontFamily -> "Verdana", FontSize -> 10}, 
                 GrayLevel[0.5], StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "EmploymentChangeInformation:Employment:ExpandedSalaryData__More"}, \
{}], 
       XMLElement[
       "state", {
        "name" -> "Show hourly", "input" -> 
         "EmploymentChangeInformation:Employment:ExpandedSalaryData__Show \
hourly"}, {}]}]}], Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Related occupations", "scanner" -> "Data", "id" -> 
     "RelatedOccupations:ExpandedSalaryData", "position" -> "500", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"people employed\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean wage\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  TagBox[
                   TagBox["\"actuaries\"", 
                    Global`TagBoxWrapper[
                    "Definition" -> ("actuaries" -> 
                    "Analyze statistical data, such as mortality, accident, \
sickness, disability, and retirement rates and construct probability tables \
to forecast risk and liability for payment of future benefits. May ascertain \
premium rates required and cash reserves necessary to ensure payment of \
future benefits.")]], 
                   Global`TagBoxWrapper[
                   "Entity" -> {
                    Global`ExpandedSalaryData, "Actuaries15-2010"}]], 
                  Identity], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox["17940", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{"\"$\"", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                    TagBox["97450", #& ], "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\[InvisibleSpace]", "\" \"", "\[InvisibleSpace]", 
                    "\"per year\""}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  TagBox[
                   TagBox["\"operations research analysts\"", 
                    Global`TagBoxWrapper[
                    "Definition" -> ("operations research analysts" -> 
                    "Formulate and apply mathematical modeling and other \
optimizing methods using a computer to develop and interpret information that \
assists management with decision making, policy formulation, or other \
managerial functions.  May develop related software, service, or products.  \
Frequently concentrates on collecting and analyzing data and developing \
decision support software.  May develop and supply optimal time, cost, or \
logistics networks for program evaluation, review, or implementation.")]], 
                   Global`TagBoxWrapper[
                   "Entity" -> {
                    Global`ExpandedSalaryData, 
                    "OperationsResearchAnalysts15-2030"}]], Identity], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox["60960", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{"\"$\"", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                    TagBox["75370", #& ], "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\[InvisibleSpace]", "\" \"", "\[InvisibleSpace]", 
                    "\"per year\""}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  TagBox[
                   TagBox["\"statisticians\"", 
                    Global`TagBoxWrapper[
                    "Definition" -> ("statisticians" -> 
                    "Engage in the development of mathematical theory or \
apply statistical theory and methods to collect, organize, interpret, and \
summarize numerical data to provide usable information. May specialize in \
fields, such as bio-statistics, agricultural statistics, business statistics, \
economic statistics, or other fields. Include mathematical statisticians.")]], 
                   Global`TagBoxWrapper[
                   "Entity" -> {
                    Global`ExpandedSalaryData, "Statisticians15-2040"}]], 
                  Identity], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox["21370", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{"\"$\"", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                    TagBox["75220", #& ], "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\[InvisibleSpace]", "\" \"", "\[InvisibleSpace]", 
                    "\"per year\""}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  TagBox["\"miscellaneous mathematical science occupations\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {
                    Global`ExpandedSalaryData, 
                    "MiscellaneousMathematicalScienceOccupations15-2090"}]], 
                  Identity], 
                 FormBox[
                  TagBox["\"\"", 
                   Global`TagBoxWrapper["Missing" -> "NotApplicable"]], 
                  TraditionalForm], 
                 FormBox[
                  TagBox["\"\"", 
                   Global`TagBoxWrapper["Missing" -> "NotApplicable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Right, Right}, "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 2} -> {
                    Center, Baseline}, {1, 3} -> {Center, Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["definitions", {"count" -> "3"}, {
       XMLElement[
       "definition", {
        "word" -> "actuaries", "desc" -> 
         "Analyze statistical data, such as mortality, accident, sickness, \
disability, and retirement rates and construct probability tables to forecast \
risk and liability for payment of future benefits. May ascertain premium \
rates required and cash reserves necessary to ensure payment of future \
benefits."}, {}], 
       XMLElement[
       "definition", {
        "word" -> "operations research analysts", "desc" -> 
         "Formulate and apply mathematical modeling and other optimizing \
methods using a computer to develop and interpret information that assists \
management with decision making, policy formulation, or other managerial \
functions.  May develop related software, service, or products.  Frequently \
concentrates on collecting and analyzing data and developing decision support \
software.  May develop and supply optimal time, cost, or logistics networks \
for program evaluation, review, or implementation."}, {}], 
       XMLElement[
       "definition", {
        "word" -> "statisticians", "desc" -> 
         "Engage in the development of mathematical theory or apply \
statistical theory and methods to collect, organize, interpret, and summarize \
numerical data to provide usable information. May specialize in fields, such \
as bio-statistics, agricultural statistics, business statistics, economic \
statistics, or other fields. Include mathematical statisticians."}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Standard occupational classification information", 
     "scanner" -> "Data", "id" -> "SOCInfo:ExpandedSalaryData", "position" -> 
     "600", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"SOC code\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"15-2020\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"SOC parent occupation\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                  TagBox["\"mathematical science occupations\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {
                    Global`ExpandedSalaryData, 
                    "MathematicalScienceOccupations15-2000"}]], Identity]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "Mathematician", "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "Occupation", "desc" -> "an occupation", "input" -> 
          "*C.Mathematician-_*Occupation-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "*C.Mathematician-_*Word-"}, {}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
ExpandedSalaryDataSourceInformationNotes.html", "text" -> 
        "Expanded salary data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "6", "datatypes" -> 
    "ExpandedSalary", "timedout" -> "", "timing" -> "1.14", "parsetiming" -> 
    "0.077", "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP207319hci2e3chbeifec000065a32a0chh7f57a9&s=2", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP207419hci2e3chbeifec00003acaab9f3bh33idd&s=2", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 11, 10, 48.7613047`9.44065017570231}, "Line" -> 
    43, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Content"}, Typeset`open$$ = True, 
   Typeset`newq$$ = "Mathematician"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{560., {1118., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   FrameBox[
    StyleBox[
     FormBox[
      StyleBox[
       RowBox[{
        StyleBox[
         RowBox[{"2770", "\[InvisibleSpace]", " ", 
          StyleBox["\<\"people\"\>",
           StripOnInput->False,
           LineIndent->0,
           LinebreakAdjustments->{1, 100, 1, 0, 100},
           FontFamily->"Helvetica",
           FontSize->Smaller]}],
         ZeroWidthTimes->False,
         LineIndent->0,
         LinebreakAdjustments->{1, 100, 1, 0, 100}], 
        "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"\<\"(\"\>", "\[NoBreak]", 
          FormBox["\<\"2009\"\>",
           TraditionalForm], "\[NoBreak]", "\<\")\"\>"}],
         StripOnInput->False,
         LineIndent->0,
         LinebreakAdjustments->{1, 100, 1, 0, 100},
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontFamily->"Verdana",
         FontSize->10,
         FontColor->GrayLevel[0.5]]}],
       LineIndent->0],
      TraditionalForm], "Output",
     ScriptLevel->0,
     FontFamily->"Times",
     FontSize->14,
     Background->None],
    BaseStyle->{Plain},
    FrameMargins->10,
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   WolframAlphaResult["Mathematician", {{"Result", 1}, "Content"}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.527205049598219*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "integrate (sin x)/x from 0 to infinite", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", 
        "Integrate[Sin[x]/x, {x, 0, Infinity}]"}, "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}, 
    PodStates -> {"Input__More digits"}}, Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods"}, Typeset`pod1$$ = 
   XMLElement[
   "pod", {"title" -> "Definite integral", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"N[Integrate[Sin[x]/x, {x, 0, Infinity}], 100]"}], 
       XMLElement[
       "moutput", {}, {
        "1.5707963267948966192313216916397514420985846996875529104874722961539\
08203143104499314017412671058534"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
                 RowBox[{
                   FractionBox[
                    RowBox[{"sin", "(", "x", ")"}], "x"], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox["\[Pi]", "2"], Identity], "\[TildeTilde]", 
              TagBox[
              "1.5707963267948966192313216916397514420985846996875529104874722\
96153908203143104499314017412671058533991074043256641153323546922304775473`\
100.", Identity]}], TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Fewer digits", "input" -> "Input__Fewer digits"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> "Input__More digits"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "", "timedout" -> "", "timing" -> "1.019", "parsetiming" -> "0.445", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP9919hci4a4a57c270i00006b07034f300ifda0&s=53", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP10019hci4a4a57c270i0000429e2ec9eic87cah&s=53", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 11, 11, 58.4976328`9.519713122982207}, "Line" -> 
    45, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", 
    "Integrate[Sin[x]/x, {x, 0, Infinity}]"}, Typeset`open$$ = True, 
   Typeset`newq$$ = "integrate (sin x)/x from 0 to infinite"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{560., {209., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  FractionBox["\[Pi]", "2"], TraditionalForm]], "Output",
 CellChangeTimes->{3.5272051114947033`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "financial of SZ:000400", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    PodStates -> {"DailyReturnsVersusS&P 500__Last year"}, 
    Method -> {
     "ExtrusionChosen" -> {
       "Quote", "Last close", 1, 1, "Input", 
        "FinancialData[\"SZ:000400\", \"LatestTrade\"]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}, 
      "ExtrusionOpen" -> False}}, Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods"}, Typeset`pod1$$ = 
   XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"FinancialData[\"SZ:000400\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               TemplateBox[{
                 TagBox[
                  TagBox["\"Xj Electric Co., Ltd.\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {FinancialData, "SZ:000400"}]], Identity], 
                 StyleBox[
                 "\"(000400)\"", {FontColor -> GrayLevel[0.3]}, StripOnInput -> 
                  False]}, "Row", DisplayFunction -> (RowBox[{#, " ", #2}]& ),
                 InterpretationFunction -> (RowBox[{
                   TagBox[
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], HoldForm], "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", "\" \""}], "]"}]& )], 
               LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
               StripOnInput -> False], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Last close", "scanner" -> "FinancialData", "id" -> 
     "Quote", "position" -> "200", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"FinancialData[\"SZ:000400\", \"LatestTrade\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             
             RowBox[{"\"(\"", "\[NoBreak]", "\"no data available\"", 
               "\[NoBreak]", "\")\""}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             GrayLevel[0.6], StripOnInput -> False], TraditionalForm]], 
          "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "Quote__More"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Recent returns", "scanner" -> "FinancialData", "id" -> 
     "RecentReturns", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"day\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"month\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"YTD\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"year\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"5 year\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]]}, {
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["2.03", 
                    Global`TagBoxWrapper["StringBoxes" -> "2.03"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["14.62", 
                    Global`TagBoxWrapper["StringBoxes" -> "14.62"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["29.09", 
                    Global`TagBoxWrapper["StringBoxes" -> "29.09"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["21.72", 
                    Global`TagBoxWrapper["StringBoxes" -> "21.72"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   Global`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Right, Right, Right, Right, "."}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 2} -> {
                    Center, Baseline}, {1, 3} -> {Center, Baseline}, {1, 
                    4} -> {Center, Baseline}, {1, 5} -> {Center, Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Price history", "scanner" -> "FinancialData", "id" -> 
     "PriceHistory", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  GraphicsBox[
                   GraphicsComplexBox[CompressedData["
1:eJxVl3tsk2UUxj8QxHBbx7orMLpbx650K13Xrt2+dSzghNCBmphM/LgNL3/Q
AIpMMTUKykUo0QQhEwtTYuRikYsLifoxuQiSWAI6QdESE0CGUCX8IXJxe845
Ji8JaX55b+d9znmf8y1v3uJZCwdrmna7///Ab/8/feuIa439v+bpkQ16/2/o
KHE0dA8cvUEc7nGB41kjwbZVu/wDrDUR685bvgGOHBHej3Gzjzi6Jbt+gJPp
o2j8UgfYphObuUPBwedHyXycl7hKHPaX6gNsSRvN8U4H6/7RSnyhRaN5/8PY
L7qJ2OjeBnZYUsCJ1m7MN7wpvN9p7BdZkMLrc8DmBh6//TY42S18FRx2W0iP
tpmNAxybK3wT44l1Fr7fxxT/IWKtpJPiTxAb7e2ILz4nVfRDfNoa4v6TwI79
qYp+xkXi6NS54MiwMXJfzLetHsP56gMHY8Jl4PAFmV+PeGJD0jj+xRR/ZRqf
d4f03cM8fDPuG+1Nk/oJIP5BVspHXypYK7dyPs9jvuNJ4RVg85xV0T9538r6
3AXbStI53hGYH5xNnOhYRvqvTOf5v5C+d9N5/y2Yr9sz+D4bwaFgBt/3NYq/
I4Pvsxwc/yiD13vARkEm5+Ms1ceMTM6HRvEvz+T5T4GT22W+E2w7nanoFWvJ
4vUm6bssi/M3iOL/kNjYGKD6OCnzdXDoFnNvF1hbkq2wozOb9TkANo7L+Hyc
H0lmSz1R/Dk5zAbpuyWH6/sT0vebHCU/sT9zRF+KP3Os6EfxB8bye11L/mEy
99yGH8SvMfedIf9IH8f37aH32TCO9bgEPzGeI050xcDJK+N4/aY66DtmvPgR
OOgbz+9pJ+aH28fLfXBeLEIctt4A6ym5XB8pOD/kyZV6Jv+Yr3L8HZW1bpUj
NRMUNg2Vk2snsD4t5H8HJ4ie5H+/8bh1LzjxtI3i2zsMeuqf28SfKb6H88Q/
KP+r8sQPKP+f5cn7wPrIeZm/k/ztoXzlfSYr8pX3EN6dr9RH7Md8Xn+Z8q8V
SP4o/2UFSn3rTwgnwPGzBXzeP1S/94XJDxwTC5X3ZMwq5Hq2Uv2+Wsj72eh9
/VvI+kwNQL+iIoXDM4u4fkLg2IoiqRdwoqtI9AeH8u1yX3B0up3vawfHX7Lz
fpYmxL/dzv7oBTu+s0u+weajxVyv+7A+ubRY8UvbtmLuRy/T+/tWxqeT/n8X
cz5fJ/86NpHfUzr5182JXN+PkH9ll7D/zCb93i9h/SaTfj3MrVn0/q+XcH34
KP8ZpYpf2hpL+fztlP+vS0VPcOKPUo73OuXfWqb0R72+TPoH+dezZYqfaFfK
xI+oflPLJV6q37pyrkc3+e/Cco7ve9SzubGc34Of/GleBetzkOpzfQWft5vi
+6KC538JjroqFf+KP1PJ8U+j+NZWKn7nOMDzne9SfL9Wcr2doP7VNon5CvWv
t4SLKb/7VA7/PInfz2DSd6hDYf1NB9dPK/XfvQ7RC/4V/Ym593fy18FVEi/8
T6uokn6E8ciuKsVPzR+q5L1gPPlA+ATYVlot9Q8OPl7N+9H3neVetehJflrs
VDjU6hR/onhfcSrxOO442e8q6fwdk+X9w8/DeS6pFy/0eUzlxIsu8SOwJeri
eu7E/fRTLumfpM+0GulP1H+W1kh9Ujwf1Eh/p++rEzVSb+Tvf9Xw/VaSf4fc
vN9w+r7a6hZ9MR4+6pZ8gWM3iM3cZvq+zaplP6LvsdDmWvEH6p9HakUf6j99
tcr5WoZH/IP6p+5R+qn5lUf6AfWfqx7Ri/Kb5pV+S/n1ezk/S8HhRV6+3ynK
92WvnEf6WupkHBzy1rFeM6k/LeDxHhfFv6FO+gP2M0b5OF9tVJ9un+Sf/n6Y
62N9XqD6WOeT/k/xH/KJH1F/n+znfHYgnsQc4cOoJ8saP/vLObC+3y/9FBy6
KOyn99NWL/qBHavrJT76PonJ+CWsj1yo5/3fA5tDGqTe6fvkjQaO/wzqNbyn
QeoB47Fe4aHgxCBd3jPFX67L+wJHP9X5/XeB4+d00R+sPSA2unPBjpJGqW+w
MbtR9EU8yTM83lvggb53Gzm/LbWI3x4Qf8J4OBiQ/cCxjgDHfwzzQwVNzKvA
0RlNch9wfHmTvGewtqNJ9ARHbFOk/sFmyxR5r27Eu0y4A+cHT05R9ktMbZZ8
gC1LmiUfYL2TeXgmxXu8We5D8SabJV6ch7+XnU5nX2F79f/jwv8Bj70Ehg==

                    "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 244, 245, 243, 242, 241, 240, 239, 238, 
                    237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 
                    226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 
                    215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 
                    204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 
                    193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 
                    182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 
                    171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 
                    160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 
                    149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 
                    138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 
                    127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 
                    116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 
                    105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 
                    92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 
                    78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 
                    64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 
                    50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 
                    36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 
                    22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 
                    7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    
                    LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
                    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
                    29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 
                    43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 
                    57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 
                    71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
                    85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 
                    99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
                     111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 
                    122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 
                    133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 
                    144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 
                    155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 
                    166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
                    177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 
                    188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 
                    199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
                    210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 
                    221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 
                    232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 
                    243}]}}}], {GridLines -> Dynamic[
                    Join[{{{3497558400, 
                    GrayLevel[0.9]}, {3502828800, 
                    GrayLevel[0.9]}, {3507926400, 
                    GrayLevel[0.9]}, {3513196800, 
                    GrayLevel[0.9]}, {3518467200, 
                    GrayLevel[0.9]}, {3523824000, 
                    GrayLevel[0.9]}}, {15, 20, 25, 30, 35, 40, 45}}, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], Epilog -> {{
                    CapForm[None], {
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}]}, {
                    AbsoluteThickness[1], 
                    GrayLevel[0], 
                    LineBox[{{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}, {
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]]}}]}}, 
                    DynamicBox[
                    Typeset`ToBoxes[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[1, {243, 1}, 3, CompressedData["
1:eJwlz2lQD3Ecx/FfuR44WqXDvRWRinVUdG5iEMYqPAqLnE/sJBphZmdcU5H1
CE1YxyPEuj1ic0R4sMYRGewjUo6lZ+Ro/u/fzG9ezz7z/sav3ly8NlwIEdbz
u0ToqfX9Owp6NO6j/Q29uAEhRSFaTeh2YhA9MKSsorYJ/XaUogaFVHPRWI/2
YVSkiJB6Flpl6NZhcAvNTCmkswr9WpRuoOqjt2IwvdWoXEX9HVr9Iundh5qD
Zhs6vaPYn4hGI9qt6IUNYT8VlWXovsDgL8rJ0eyXoLkLpW5Uk2LY19CuQu8s
6omx9C5EtxKDUyg/Racojt4KlE6i2oJGF4ryofQ2oN6MVoDusGH0HkPzHjpf
0Y8dzv5MtF30OlBEj2A/H/WNGHxCOXIk+zlorkPHQjViFL0z0F6D3kEUt9DK
GE2vjkENytdR+4D+cpndK2j3jadvL+qX0HqDbq8E9tLQvIDOK/RFIvenoLoU
veco/qIyfgz7xWjtRPk3amPHsr8Ine3on0EjIYneBehtQ3EKlSfozhtH7xaU
T6D2CM2faDwYz9539IYm03cUrbvofsEgZgJ7BejcQf8zSkNSuD8PjQ0oPqEy
OJX9bLTWonsIndVp7B1A6Sba6RPpW4miBpVrqL/HoHQSfftRu4zmW3T6KPTt
QeMi2q/RC5/Mfhpa59F9icE/lCdMYX8JSn9QHTeV3cVo70DlFwanp9ETn07P
fPS3omSj+hi9uRn0bEHlOOoP0fqBspFJTz2a99H5hn7cdLqOoN2EXieKmBns
q+jexqAd5ags9nPRXI/SR1SlbPaz0C5Drw71gTn0ZqK7CoNalG+gMy2X3hUo
VaN6FY13KErz6N2HuoNWG7q98+ndjWYjOq3oh6nsp6J9Dr0XKP6hklzAfgkG
z1DuRi1pJvsaOlVoJBayuxC9ShSn0ZJn0VmEQQVqLejPmU1fOaoNaDSjHfT4
H6JjMJc=
                    "], CompressedData["
1:eJwlz2lQD3Ecx/FfhAeu1SX3VnSoWESkYyvG2ViFR8mW2xM7ikaY2RlkcmQ9
QhO2eIRYV3rE5sj5YI0jMthHblk8c4T5v79PXs8+8/7GVWwsXh0mhPghQqc2
9P+Y/1/jFtrd6MUOCCkK0WpH9xMG0QNDyipqG9B/j1LkoJBqDhpr0T6EijQ4
pJ6F1ip06zFoQzNTCumUo78PpVZUffTKhtBbh8ol1F+h1S+C3lrUHDS70AmP
ZH8CGi1od6IXFsV+GirL0H2CQQ/KKdHsl6C5A6XfqCbGsK+hXYPeKdQThtJb
hG41Bk0oP0Rnfiy9VSidQPUeGj9QbBpGbyPqHWgF6A4fTu9RNG+i8wX9oSPY
L0DbRe8jiuiR7Oehvh6DdyhHjGI/G8016FioDh5N7wy0V6J3AEUbWtPG0Ktj
sBflK6i9QX+5zO5FtPvG0bcb9fNovUC3dzx76WieRecZ+iKB/1NRXYreYxQ9
qCSPZb8Yre0o/0Jt3Dj2F6GzFf2TaMQn0rsQvS0omlB5gO68JHorUT6O2l00
v6NxO5m9r+gNS6HvCFo30P2MQcx49vLRuY7+B5SiUvk/F411KN6hMiSN/Zlo
rUb3IDoV6eztR+kq2lMn0LcCxV5ULqP+GoPSifTtQe0Cmi/R6aPQtwuNc2g/
R6/XJPbT0TqD7lMM/qI8fjL7S1D6g2rSFHYXo70NlZ8YNGfQEzeVngXob0bJ
RvU+enOn0VOJyjHU76D1DWUjk54GNG+h041+7HS6DqPdjt4nFDEz2FfRvYbB
e5Qjs9jPQXMtSm9RlWayn4X2KvTqUR+YTW8muuUY7EO5FZ2MHHrLUKpD9RIa
r1CU5tJbi7qDVhe64Xn07kSzBZ1O9MNU9tPQPo3eExR/UUnJZ78Eg0co/0Yt
sYB9DZ0aNBIK2S1CrxpFM1ryLDrnY1CF2j3058ymbxOqjWh0oB389x+MczCV

                    "], CompressedData["
1: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
                    "], Automatic, 
                    Hold[
                    Nearest[CompressedData["
1:eJwlz2lQD3Ecx/FfhAeu1SX3VnSoWESkYyvG2ViFR8mW2xM7ikaY2RlkcmQ9
QhO2eIRYV3rE5sj5YI0jMthHblk8c4T5v79PXs8+8/7GVWwsXh0mhPghQqc2
9P+Y/1/jFtrd6MUOCCkK0WpH9xMG0QNDyipqG9B/j1LkoJBqDhpr0T6EijQ4
pJ6F1ip06zFoQzNTCumUo78PpVZUffTKhtBbh8ol1F+h1S+C3lrUHDS70AmP
ZH8CGi1od6IXFsV+GirL0H2CQQ/KKdHsl6C5A6XfqCbGsK+hXYPeKdQThtJb
hG41Bk0oP0Rnfiy9VSidQPUeGj9QbBpGbyPqHWgF6A4fTu9RNG+i8wX9oSPY
L0DbRe8jiuiR7Oehvh6DdyhHjGI/G8016FioDh5N7wy0V6J3AEUbWtPG0Ktj
sBflK6i9QX+5zO5FtPvG0bcb9fNovUC3dzx76WieRecZ+iKB/1NRXYreYxQ9
qCSPZb8Yre0o/0Jt3Dj2F6GzFf2TaMQn0rsQvS0omlB5gO68JHorUT6O2l00
v6NxO5m9r+gNS6HvCFo30P2MQcx49vLRuY7+B5SiUvk/F411KN6hMiSN/Zlo
rUb3IDoV6eztR+kq2lMn0LcCxV5ULqP+GoPSifTtQe0Cmi/R6aPQtwuNc2g/
R6/XJPbT0TqD7lMM/qI8fjL7S1D6g2rSFHYXo70NlZ8YNGfQEzeVngXob0bJ
RvU+enOn0VOJyjHU76D1DWUjk54GNG+h041+7HS6DqPdjt4nFDEz2FfRvYbB
e5Qjs9jPQXMtSm9RlWayn4X2KvTqUR+YTW8muuUY7EO5FZ2MHHrLUKpD9RIa
r1CU5tJbi7qDVhe64Xn07kSzBZ1O9MNU9tPQPo3eExR/UUnJZ78Eg0co/0Yt
sYB9DZ0aNBIK2S1CrxpFM1ryLDrnY1CF2j3058ymbxOqjWh0oB389x+MczCV

                    "] -> CompressedData["
1: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
                    "]]]][
                    Part[#, 1]]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    (
                    DateString[#, {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    Function[Null, 
                    RawBoxes[
                    FormBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox[
                    StyleBox["\"\:5143\"", FontFamily -> "Code2000"], 
                    TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    MakeBoxes[#, TraditionalForm]}], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm]]][
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                     TraditionalForm, Graphics]]}, AspectRatio -> NCache[
                    Rational[1, 4], 0.25], AxesOrigin -> {3.496*^9, 19.}, 
                    BaseStyle -> AbsoluteThickness[1.], Epilog -> {
                    CapForm[None], {
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}]}, {
                    AbsoluteThickness[1], 
                    GrayLevel[0], 
                    LineBox[{{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}, {
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]]}}]}}, Frame -> True, 
                    FrameTicks -> {{{{25., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox[
                    StyleBox["\"\:5143\"", FontFamily -> "Code2000"], 
                    TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["25", #& ]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {30., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox[
                    StyleBox["\"\:5143\"", FontFamily -> "Code2000"], 
                    TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["30", #& ]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {35., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox[
                    StyleBox["\"\:5143\"", FontFamily -> "Code2000"], 
                    TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["35", #& ]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {40., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox[
                    StyleBox["\"\:5143\"", FontFamily -> "Code2000"], 
                    TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["40", #& ]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {23., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {24., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {26., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {27., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {28., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {29., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {31., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {32., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {33., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {34., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {36., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {37., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {38., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {39., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {41., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{20., 
                    FormBox["\" \"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {25., 
                    FormBox["\" \"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {30., 
                    FormBox["\" \"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {35., 
                    FormBox["\" \"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {40., 
                    FormBox["\" \"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {21., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {22., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {23., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {24., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {26., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {27., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {28., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {29., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {31., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {32., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {33., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {34., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {36., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {37., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {38., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {39., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {19., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {41., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{
                    NCache[3497558400, 3.4975584*^9], 
                    FormBox["\"Nov\"", TraditionalForm]}, {
                    NCache[3502828800, 3.5028288*^9], 
                    FormBox["\"Jan\"", TraditionalForm]}, {
                    NCache[3507926400, 3.5079264*^9], 
                    FormBox["\"Mar\"", TraditionalForm]}, {
                    NCache[3513196800, 3.5131968*^9], 
                    FormBox["\"May\"", TraditionalForm]}, {
                    NCache[3518467200, 3.5184672*^9], 
                    FormBox["\"Jul\"", TraditionalForm]}, {
                    NCache[3523824000, 3.523824*^9], 
                    FormBox["\"Sep\"", TraditionalForm]}, {
                    NCache[3500150400, 3.5001504*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3505507200, 3.5055072*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3510604800, 3.5106048*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3515875200, 3.5158752*^9], 
                    FormBox["\"\"", TraditionalForm]}, {
                    NCache[3521145600, 3.5211456*^9], 
                    FormBox["\"\"", TraditionalForm]}}, None}}, GridLines -> 
                    NCache[{{{3497558400, 
                    GrayLevel[0.9]}, {3502828800, 
                    GrayLevel[0.9]}, {3507926400, 
                    GrayLevel[0.9]}, {3513196800, 
                    GrayLevel[0.9]}, {3518467200, 
                    GrayLevel[0.9]}, {3523824000, 
                    GrayLevel[0.9]}}, Automatic}, {{{3.4975584*^9, 
                    GrayLevel[0.9]}, {3.5028288*^9, 
                    GrayLevel[0.9]}, {3.5079264*^9, 
                    GrayLevel[0.9]}, {3.5131968*^9, 
                    GrayLevel[0.9]}, {3.5184672*^9, 
                    GrayLevel[0.9]}, {3.523824*^9, 
                    GrayLevel[0.9]}}, Automatic}], GridLinesStyle -> 
                    GrayLevel[0.9], ImageSize -> Full, 
                    PlotRange -> {{3.495744*^9, 3.5263296*^9}, {
                    18.3990008354187, 41.431998825073244`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> None, 
                    Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                    Ticks -> None}], 
                  TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0.24720000000000014`, 0.24, 0.6], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, ImageSize -> 13, 
                    BaselinePosition -> (Center -> Center)}], 
                    StyleBox[
                    "\"daily closing prices\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}, "Row", 
                   DisplayFunction -> (RowBox[{#, "  ", #2}]& ), 
                   InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", "  "}], "]"}]& )]}, 
                 "Labeled", DisplayFunction -> (FormBox[
                   GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], TraditionalForm]& ), 
                 InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Labeled", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{#, ",", 
                    RowBox[{"{", #2, "}"}], ",", 
                    RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Center", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                    "]"}]& )]}, {
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"minimum\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"average\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"maximum\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]]}, {
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox[
                    StyleBox["\"\:5143\"", FontFamily -> "Code2000"], 
                    TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["23.60", 
                    Global`TagBoxWrapper["StringBoxes" -> "23.60"]]}], 
                    Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox[
                    StyleBox["\"\:5143\"", FontFamily -> "Code2000"], 
                    TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["31.27", 
                    Global`TagBoxWrapper["StringBoxes" -> "31.27"]]}], 
                    Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox[
                    StyleBox["\"\:5143\"", FontFamily -> "Code2000"], 
                    TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["38.46", 
                    Global`TagBoxWrapper["StringBoxes" -> "38.46"]]}], 
                    Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    FormBox[
                    TagBox["\"Friday, Sep 30, 2011\"", Identity], 
                    TraditionalForm], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\[SpanFromAbove]", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    FormBox[
                    TagBox["\"Thursday, Mar 24, 2011\"", Identity], 
                    TraditionalForm], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Top}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}, {1, 3} -> {Center, Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {
                    "Columns" -> {{None}}, "Rows" -> {None, None}}, 
                   GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> None}, 
                   GridBoxItemSize -> {"Columns" -> {{
                    Scaled[0.33]}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.3}}},
                    FrameStyle -> GrayLevel[0.84], BaselinePosition -> 
                   Automatic, AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{1}}}], "Column"], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata,\
timeseriesdata"}]}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Log scale", "input" -> "PriceHistory__Log scale"}, {}], 
       XMLElement["statelist", {"count" -> "8", "value" -> "Last year"}, {
         XMLElement[
         "state", {
          "name" -> "Last year", "input" -> "PriceHistory__Last year"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last week", "input" -> "PriceHistory__Last week"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last month", "input" -> "PriceHistory__Last month"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 2 years", "input" -> 
           "PriceHistory__Last 2 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 5 years", "input" -> 
           "PriceHistory__Last 5 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 10 years", "input" -> 
           "PriceHistory__Last 10 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 30 years", "input" -> 
           "PriceHistory__Last 30 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "All data", "input" -> "PriceHistory__All data"}, {}]}], 
       XMLElement["statelist", {"count" -> "4", "value" -> "Basic chart"}, {
         XMLElement[
         "state", {
          "name" -> "Basic chart", "input" -> 
           "PriceHistory__Basic chart"}, {}], 
         XMLElement[
         "state", {
          "name" -> "With MA", "input" -> "PriceHistory__With MA"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Candlestick chart", "input" -> 
           "PriceHistory__Candlestick chart"}, {}], 
         XMLElement[
         "state", {
          "name" -> "With trend", "input" -> 
           "PriceHistory__With trend"}, {}]}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Performance comparisons", "scanner" -> "FinancialData",
      "id" -> "PerformanceComparisons", "position" -> "500", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"average daily return\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"daily volatility\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"annual return\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"annual volatility\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]]}, {
                    TagBox[
                    PaneBox[
                    "\"000400\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["0.098", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.098"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2.49", 
                    Global`TagBoxWrapper["StringBoxes" -> "2.49"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["21.72", 
                    Global`TagBoxWrapper["StringBoxes" -> "21.72"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["39.42", 
                    Global`TagBoxWrapper["StringBoxes" -> "39.42"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"SP500\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"+", 
                    TagBox["0.014", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.014"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.27", 
                    Global`TagBoxWrapper["StringBoxes" -> "1.27"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"+", 
                    TagBox["3.5", 
                    Global`TagBoxWrapper["StringBoxes" -> "3.5"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20.08", 
                    Global`TagBoxWrapper["StringBoxes" -> "20.08"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"bonds\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"+", 
                    TagBox["0.002", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.002"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.27", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.27"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"+", 
                    TagBox["0.53", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.53"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4.29", 
                    Global`TagBoxWrapper["StringBoxes" -> "4.29"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"T-bills\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"+", 
                    TagBox["0.0003", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.0003"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    Global`TagBoxWrapper["StringBoxes" -> "0"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"+", 
                    TagBox["0.08", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.08"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    Global`TagBoxWrapper["StringBoxes" -> "0"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, {Right}}, "Rows" -> {{Baseline}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}, {1, 3} -> {Center, Baseline}, {
                    1, 4} -> {Center, Baseline}, {1, 5} -> {
                    Center, Baseline}}}, AutoDelete -> False, 
                   GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                InterpretationBox[
                 StyleBox[
                  
                  GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> 
                   Baseline], "CacheGraphics" -> False], 
                 Spacer[10]]}, {
                GraphicsBox[{{{{}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    RGBColor[1, 0, 0], 
                    PointSize[Medium]], 
                    
                    PointBox[{{0.39494283218717224`, -0.21724707528802067`}, {
                    0.39494283218717224`, -0.21724707528802067`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    RGBColor[1, 0.5, 0], 
                    PointSize[Medium]], 
                    
                    PointBox[{{0.20123830233370618`, 0.03502422870853228}, {
                    0.04296959472316472, 0.0053432512305331414`}, {0., 
                    0.0007556420591956492}}]}, {}}}, {
                   InsetBox[
                    FormBox["\"T-bills\"", TraditionalForm], {
                    0, 0.0007556420591956492}, {-0.75, 1.5}], 
                   InsetBox[
                    FormBox["\"bonds\"", TraditionalForm], {
                    0.04296959472316472, 0.0053432512305331414`}, {0, -1.25}], 
                   InsetBox[
                    FormBox["\"SP500\"", TraditionalForm], {
                    0.20123830233370618`, 0.03502422870853228}, {0, 1.25}], 
                   InsetBox[
                    FormBox["\"000400\"", TraditionalForm], {
                    0.39494283218717224`, -0.21724707528802067`}, {
                    1.25, 0}]}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                  Method -> {"GridLinesInFront" -> True}, Epilog -> {
                    DynamicBox[
                    Typeset`ToBoxes[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[
                    1, {5, 2}, 3, {{0.7995904558546462, 0.7995904558546462, 
                    0.40742156277991454`, 0.08699506620315524, 
                    0.}, {-0.5636752022360977, -0.5636752022360977, 
                    0.09087482155638434, 0.013863745755729972`, 
                    0.001960609550073403}}, {{
                    0.7995904558546462, -0.5636752022360977}, {
                    0.7995904558546462, -0.5636752022360977}, {
                    0.40742156277991454`, 0.09087482155638434}, {
                    0.08699506620315524, 0.013863745755729972`}, {0., 
                    0.001960609550073403}}, {{
                    0.39494283218717224`, -0.21724707528802067`}, {
                    0.39494283218717224`, -0.21724707528802067`}, {
                    0.20123830233370618`, 0.03502422870853228}, {
                    0.04296959472316472, 0.0053432512305331414`}, {0., 
                    0.0007556420591956492}}, Automatic, 
                    Hold[
                    
                    Nearest[{{0.7995904558546462, -0.5636752022360977}, {
                    0.7995904558546462, -0.5636752022360977}, {
                    0.40742156277991454`, 0.09087482155638434}, {
                    0.08699506620315524, 0.013863745755729972`}, {0., 
                    0.001960609550073403}} -> {{
                    0.39494283218717224`, -0.21724707528802067`}, {
                    0.39494283218717224`, -0.21724707528802067`}, {
                    0.20123830233370618`, 0.03502422870853228}, {
                    0.04296959472316472, 0.0053432512305331414`}, {0., 
                    0.0007556420591956492}}]]][#/{0.49393139862460667`, 
                    0.3854118017365359}]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    Composition[
                    Function[Null, 
                    RawBoxes[
                    FormBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    MakeBoxes[#, TraditionalForm], "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm]]], 
                    SetPrecision[(# - 
                    Part[{{0., 0.}, {0.1, 10.}, {0.2, 20.}, {
                    0.30000000000000004`, 30.000000000000004`}, {0.4, 40.}, {
                    0.5, 50.}}, 1, 1])/0.01 + 
                    Part[{{0., 0.}, {0.1, 10.}, {0.2, 20.}, {
                    0.30000000000000004`, 30.000000000000004`}, {0.4, 40.}, {
                    0.5, 50.}}, 1, 2], 3]& ][
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    Composition[
                    Function[Null, 
                    RawBoxes[
                    FormBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    MakeBoxes[#, TraditionalForm], "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm]]], 
                    SetPrecision[(# - 
                    Part[{{-0.30000000000000004`, -30.000000000000004`}, \
{-0.25, -25.}, {-0.2, -20.}, {-0.15000000000000002`, -15.000000000000002`}, \
{-0.1, -10.}, {-0.05, -5.}, {0., 0.}, {0.05, 5.}}, 1, 1])/0.01 + 
                    Part[{{-0.30000000000000004`, -30.000000000000004`}, \
{-0.25, -25.}, {-0.2, -20.}, {-0.15000000000000002`, -15.000000000000002`}, \
{-0.1, -10.}, {-0.05, -5.}, {0., 0.}, {0.05, 5.}}, 1, 2], 3]& ][
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[CalculateUtilities`GraphicsUtilities`Private`pt, 
                    1], {1.5 
                    Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                     TraditionalForm, Graphics]]}, AspectRatio -> 
                  NCache[GoldenRatio^(-1), 0.6180339887498948], 
                  AxesOrigin -> {0, 0}, 
                  BaseStyle -> {CellBaseline -> Baseline}, Frame -> True, 
                  FrameLabel -> {
                    FormBox["\"volatility\"", TraditionalForm], 
                    FormBox["\"realized return\"", TraditionalForm]}, 
                  FrameTicks -> {{{0., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    Global`TagBoxWrapper["StringBoxes" -> "0"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.1, 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["10", 
                    Global`TagBoxWrapper["StringBoxes" -> "10"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.2, 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20", 
                    Global`TagBoxWrapper["StringBoxes" -> "20"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.30000000000000004`, 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["30", 
                    Global`TagBoxWrapper["StringBoxes" -> "30"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.4, 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["40", 
                    Global`TagBoxWrapper["StringBoxes" -> "40"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.5, 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["50", 
                    Global`TagBoxWrapper["StringBoxes" -> "50"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.020000000000000004`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.04000000000000001, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.06000000000000001, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.08000000000000002, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.12000000000000001`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.14, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.16000000000000003`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.18000000000000002`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.22000000000000003`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.24000000000000002`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.26, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.28, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.32000000000000006`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.3400000000000001, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.36000000000000004`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.38000000000000006`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.42000000000000004`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.44000000000000006`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.46, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.48000000000000004`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{-0.30000000000000004`, 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["30", 
                    Global`TagBoxWrapper["StringBoxes" -> "30"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {-0.25, 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["25", 
                    Global`TagBoxWrapper["StringBoxes" -> "25"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {-0.2, 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["20", 
                    Global`TagBoxWrapper["StringBoxes" -> "20"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {-0.15000000000000002`, 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["15", 
                    Global`TagBoxWrapper["StringBoxes" -> "15"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {-0.1, 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["10", 
                    Global`TagBoxWrapper["StringBoxes" -> "10"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {-0.05, 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["5", 
                    Global`TagBoxWrapper["StringBoxes" -> "5"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    Global`TagBoxWrapper["StringBoxes" -> "0"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.05, 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", 
                    Global`TagBoxWrapper["StringBoxes" -> "5"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {-0.29000000000000004`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.28, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.27, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.26, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.24, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.22999999999999998`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.21999999999999997`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.20999999999999996`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.19, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.18, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.16999999999999998`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.15999999999999998`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.14, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.13, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.12, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.10999999999999999`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.09, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.07999999999999999, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.06999999999999998, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.05999999999999997, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.039999999999999994`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.029999999999999985`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.019999999999999976`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {-0.009999999999999967, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.010000000000000009`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.020000000000000018`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.030000000000000027`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {0.040000000000000036`, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, None, None}, FrameTicksStyle -> 
                  Directive[FontFamily -> "Times", FontSize -> 10], ImageSize -> 
                  320, LabelStyle -> {
                   FontFamily -> "Verdana", FontSize -> 10}, 
                  PlotRange -> {{-0.02, 
                   0.47393139862460665`}, {-0.325870612932031, 
                   0.059541188804504874`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> Scaled[0.05], Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                  TicksStyle -> 
                  Directive[FontFamily -> "Times", FontSize -> 10]}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement["statelist", {"count" -> "6", "value" -> "Last year"}, {
         XMLElement[
         "state", {
          "name" -> "Last year", "input" -> 
           "PerformanceComparisons__Last year"}, {}], 
         XMLElement[
         "state", {
          "name" -> "YTD", "input" -> "PerformanceComparisons__YTD"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 2 years", "input" -> 
           "PerformanceComparisons__Last 2 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 5 years", "input" -> 
           "PerformanceComparisons__Last 5 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 10 years", "input" -> 
           "PerformanceComparisons__Last 10 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 15 years", "input" -> 
           "PerformanceComparisons__Last 15 years"}, {}]}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Correlation matrix", "scanner" -> "FinancialData", 
     "id" -> "CorrelationMatrix", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"000400\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"SP500\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"000400\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], "1", "0.037`"}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, ".", "."}, "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 2} -> {
                    Center, Baseline}, {1, 3} -> {Center, Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {None, None}, "Rows" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Daily return analysis", "scanner" -> "FinancialData", 
     "id" -> "DailyReturnAnalysis", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"return histograms\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]]}, {
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458], 
                    EdgeForm[
                    GrayLevel[0.6]], 
                    Hue[0.67, 0.6, 0.6, 0.15]], {{}, {
                    Directive[
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458], 
                    EdgeForm[
                    GrayLevel[0.6]], 
                    Hue[0.67, 0.6, 0.6, 0.15]], {{{
                    
                    RectangleBox[{-0.10401806069937214`, 
                    0.}, {-0.09601667141480505, 0.24896074939787632`}, 
                    "RoundingRadius" -> 0]}}, {}, {{
                    
                    RectangleBox[{-0.08801528213023796, 
                    0.}, {-0.08001389284567087, 0.24896074939787632`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.08001389284567087, 
                    0.}, {-0.07201250356110378, 0.7468822481936289}, 
                    "RoundingRadius" -> 0]}}, {}, {{
                    RectangleBox[{-0.06401111427653669, 
                    0.}, {-0.056009724991969614`, 1.4937644963872603`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.056009724991969614`, 
                    0.}, {-0.048008335707402525`, 1.9916859951830106`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.048008335707402525`, 
                    0.}, {-0.040006946422835435`, 4.232332739763897}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.040006946422835435`, 
                    0.}, {-0.032005557138268345`, 4.979214987957526}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.032005557138268345`, 
                    0.}, {-0.024004167853701255`, 5.975057985549031}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.024004167853701255`, 
                    0.}, {-0.016002778569134166`, 8.713626228925671}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.016002778569134166`, 
                    0.}, {-0.00800138928456709, 13.692841216883222`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.00800138928456709, 0.}, {0., 
                    20.165820701227982`}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0., 0.}, {0.00800138928456709, 
                    20.912702949421607`}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.00800138928456709, 0.}, {
                    0.01600277856913418, 11.950115971098063`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.01600277856913418, 0.}, {
                    0.02400416785370127, 8.962586978323547}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.02400416785370127, 0.}, {
                    0.03200555713826836, 8.215704730129918}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.03200555713826836, 0.}, {
                    0.04000694642283545, 2.9875289927745157`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.04000694642283545, 0.}, {
                    0.04800833570740254, 3.7344112409681447`}, 
                    "RoundingRadius" -> 0]}}, {{
                    RectangleBox[{0.04800833570740254, 0.}, {
                    0.05600972499196963, 1.742725245785134}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.05600972499196963, 0.}, {
                    0.06401111427653672, 1.4937644963872578`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.06401111427653672, 0.}, {
                    0.07201250356110381, 0.24896074939787632`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.07201250356110381, 0.}, {
                    0.0800138928456709, 1.2448037469893816`}, 
                    "RoundingRadius" -> 0]}}, {}, {}, {{
                    
                    RectangleBox[{0.09601667141480505, 0.}, {
                    0.10401806069937214`, 0.9958429975915053}, 
                    "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    LineBox[CompressedData["
1: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
                    "]]}}}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], PlotRange -> 
                    All, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, False}, 
                    AxesOrigin -> {-0.10401806069937214`, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 125, PlotLabel -> 
                    FormBox[
                    StyleBox[
                    "\"1 day\"", 12, FontFamily -> "Bitstream Vera Sans", 
                    StripOnInput -> False], TraditionalForm], 
                    PlotRange -> {{All, All}, {All, All}}, 
                    PlotRangePadding -> {{None, None}, {None, None}}, 
                    Ticks -> {{{-0.10401806069937214`, 
                    FormBox[
                    TemplateBox[{"\"\"", 
                    RowBox[{"-", "10"}], "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}, {0., 
                    FormBox[
                    
                    TemplateBox[{"\"\"", "0", "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}, {0.10401806069937214`, 
                    FormBox[
                    
                    TemplateBox[{"\"+\"", "10", "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}}, None}}], 
                    GraphicsBox[{{
                    Directive[
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458], 
                    EdgeForm[
                    GrayLevel[0.6]], 
                    Hue[0.67, 0.6, 0.6, 0.15]], {{}, {
                    Directive[
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458], 
                    EdgeForm[
                    GrayLevel[0.6]], 
                    Hue[0.67, 0.6, 0.6, 0.15]], {{{
                    
                    RectangleBox[{-0.21399001812257576`, 
                    0.}, {-0.19752924749776224`, 0.1219889502309862}, 
                    "RoundingRadius" -> 0]}}, {}, {}, {{
                    
                    RectangleBox[{-0.1646077062481352, 
                    0.}, {-0.14814693562332168`, 0.2439779004619724}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.14814693562332168`, 
                    0.}, {-0.13168616499850816`, 1.0979005520788758`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.13168616499850816`, 
                    0.}, {-0.11522539437369464`, 0.9759116018478896}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.11522539437369464`, 
                    0.}, {-0.09876462374888112, 1.3418784525408483`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.09876462374888112, 
                    0.}, {-0.0823038531240676, 2.1958011041577516`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.0823038531240676, 
                    0.}, {-0.06584308249925408, 2.56176795485071}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.06584308249925408, 
                    0.}, {-0.04938231187444056, 3.5376795566985995`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.04938231187444056, 
                    0.}, {-0.03292154124962704, 4.757569059008461}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.03292154124962704, 
                    0.}, {-0.01646077062481352, 5.733480660856351}, 
                    "RoundingRadius" -> 0]}}, {{
                    RectangleBox[{-0.01646077062481352, 0.}, {0., 
                    5.855469611087337}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0., 0.}, {0.01646077062481352, 
                    7.197348063628186}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.01646077062481352, 0.}, {
                    0.03292154124962704, 7.075359113397199}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.03292154124962704, 0.}, {
                    0.04938231187444056, 4.879558009239448}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.04938231187444056, 0.}, {
                    0.06584308249925411, 3.2937016562366224`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.06584308249925411, 0.}, {
                    0.0823038531240676, 3.415690606467619}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.0823038531240676, 0.}, {
                    0.09876462374888109, 2.561767954850714}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.09876462374888109, 0.}, {
                    0.11522539437369464`, 2.0738121539267618`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.11522539437369464`, 0.}, {
                    0.1316861649985082, 0.731933701385916}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.1316861649985082, 0.}, {
                    0.14814693562332168`, 0.3659668506929592}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.14814693562332168`, 0.}, {
                    0.16460770624813517`, 0.6099447511549321}, 
                    "RoundingRadius" -> 0]}}, {}, {}, {{
                    
                    RectangleBox[{0.19752924749776227`, 0.}, {
                    0.21399001812257576`, 0.1219889502309864}, 
                    "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    LineBox[CompressedData["
1:eJwV13k0Vd8XAHDKWBGZ3kMRQoMpKiX2lSEJCZkqioSMCZmSKWWehSJzRKZe
Zg6e9x7PU8bMvoZQigYyVPR7v7/u+qxzzl337rP3XmsftHEzstvBwMAwx8jA
8P/n1j3lTdY4GnK3UYQNw3CoHjO/6h9JQwV83GLrD8LBXcO3afkRDV3FFcdc
KAmHj/vqgwcDaKhj65XMF5bHQK1U2ZV3h4aadB/uVGh7DGnf1ITUtGno8BWF
01oXIkDJSUvVc6sLeXGWu5ZmRsNyn92LhY0uFFm/onvmQzQUnQlnvLrahSpR
L0F2bwwI7aKQ1L90IaNc2y79kBjYUaxjsHekCyH9DOf7LrHQM3/R+hWhC6nd
ZbNhPRYPzjZGwVNOXejnUPKTNPVEqJ+8vvTjdheK5rnksmyfCKxXHS122nQh
MXRwISY2EXKNgxQkzbtQ0kJzfMl4Igxrlk07aXahuJKjuW4BSaAhtevcunAX
2n/U50I0NRkEv7bu4HxHRZ32uEhq/lNwcOh2FemkIuFaE8xk8Cm8/Tg8Kt9O
RaFZ5EJlljQwnPhWZVxPRSbWU6M8jmkQ/m6/bXohFQ3rUu9IKKbDjwpfosRD
KjrXrSR9YiQDOrwUwlTkqUg2kxbsczcLlgX9nmUfpSI1Qxc1v1dZwNvSVsUs
RT9/cLJifDYLrHeZTL/fT0UaycxrJLMXsJblrXZrNxXlSBZ8ExbLBvGOho3o
+U5Ur28my4vLgUBBbZfJ552IzaqGR+pYHuSj2DCNtE7U0sjMrXUpD6i3hp4V
JXWipbYZzkyPPOArd6B6RHaiEh1Bi791eVCqESXF6tOJxnW4TIMv5sOIc8+0
nHEnUmz9kPPNtwCUkKVpMHsnctrDupPCUgRCCqSYLaZOtCruT1iVL4IdeXIk
X4ZOVJpWPnjrahH0hDMpeax3IKOo4PcclUXgYlDGbTvXgYpNK2OjrYuhcIKx
W7O1A11WHPkY0/kKBP4WabD5diAhk50Spwdew7YLj3+YZwc6MUqxusNaBvP/
PahicO9Af0ecdi6eKQMC0ejg5m36fqkQ8Q+5ZWAY9Xf7s0kH6m62YnbxLocn
gob1XfIdaNr0g4NPagX8Vl6Xj/tEQffzNUZEXarAC+l5FM9SEL/yrpCXsVXw
XSv3DXGSgs5tqOjdqqiCOSP9kxsDFFQ1re4UvFoFPc55KjdbKejI8YTvlx++
gcLsS9qKGRTkUHj4e8wLAhizFV0dukg/X9CE4vbUwLvYrec/tCnotFhxnuuJ
GtDhM57cfY6Cui+nOsZY1YCa2PYNTJmC6j4fXYiqrIEjZ01uF0tQkMutnq4U
y1pgcGe4679FRtKnjHSk6uqgdMg8XKScjNafW3PnvGqEf+FfPGJekdF/l97Y
9Q03gtHJQOs/BWQUbw2TmqxNsJGcpzz0nIx0+jwclm81gabR8mJsJBmRotgO
XRNvhgla6KVtOzIa+KEpOFeKgLOtDDchTEYWXPXd9n6tcPOuOvNFHBmtrbG8
mEhpBYLowI9aHjIKLWX54lPZCpYPN6nJu8jofX7xU9HPrVB4VvOB3gYJ7Wi/
36ls2QZqNSPTDf0kNPhOWahSgwhupUwlGZEkdKjSNOaLEglM3UNyCh+RENVD
XlnYnARnlRjSqoJI6MY9DaWH/iTY1fgnjOpNQtY+Yjsn2kiQ3/XT6rcNCRG+
Hj69bUyG0cWpfZYqJARjaw7sQRTQPtzkh//ajpRaD8AEAxVkls7cPbTQjgiO
YoSOI1Tgray1V5hpRxP5ox+WTKgwrUwwuTDcjnrVN/DzxVQI0CmR9W1vR9j7
3/oppl1QZZ8+M/y8HTm36cZJNNDgQKGXbpp+O1LJKV9sqnoP5JN8Nxt02lEY
W2SN2+x7cKUQ7k9qtCPtfjEL+V090PxpJV/iTDu6PRaaFKTSA9ZHPf5VSLYj
GvGqXc6LHsiucCV0/iOilxa70/+59IJYg/2BP5VElKam4MUu0Q/Ui6wnDrwm
oqm5zpQErB88xgsvqhcREeNK7WnV6/3QtjXn8ziLiNZW+qL+pfaDLXarnyeK
iDTCnMYV9wxAPunGk2O3iOgPgfX2/a0BkOqx+Hmdn4icslLN9P9+gKKIk4QB
biJyLvEeOi80BNIaPN4XOYgo9dDL9ltn6K6mbSozERHlUt1lFt8hOPIcGHl/
tqF9rdFiX9aHQNbhEBe1uw05L7GxGv8dBiWGHzInH7UhNjEs2Ex0DAh13d9K
g9qQrfSJqH6NMThx71WleEAbSnGVveZlPwYn521PcN9rQ77PopuPlI/BKdqH
s19vtKEPZDNPa2wczqQ1Xsw9S183uSvIdmcCMPknjpyrrejV89Un3GP/gcn2
pRPi31oRq0iJm8fOKXCgCTAqL7aiXckWOp74KYh3eJl2c6oVXavOIbVoTcF0
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
y9E=
                    "]]}}}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], PlotRange -> 
                    All, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, False}, 
                    AxesOrigin -> {-0.21399001812257576`, 0}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 125, PlotLabel -> 
                    FormBox[
                    StyleBox[
                    RowBox[{"5", " ", "\"days \""}], 12, FontFamily -> 
                    "Bitstream Vera Sans", StripOnInput -> False], 
                    TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
                    PlotRangePadding -> {{None, None}, {None, None}}, 
                    Ticks -> {{{-0.21399001812257576`, 
                    FormBox[
                    TemplateBox[{"\"\"", 
                    RowBox[{"-", "21"}], "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}, {0., 
                    FormBox[
                    
                    TemplateBox[{"\"\"", "0", "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}, {0.21399001812257576`, 
                    FormBox[
                    
                    TemplateBox[{"\"+\"", "21", "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}}, None}}], 
                    GraphicsBox[{{
                    Directive[
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458], 
                    EdgeForm[
                    GrayLevel[0.6]], 
                    Hue[0.67, 0.6, 0.6, 0.15]], {{}, {
                    Directive[
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458], 
                    EdgeForm[
                    GrayLevel[0.6]], 
                    Hue[0.67, 0.6, 0.6, 0.15]], {{{
                    
                    RectangleBox[{-0.3599523955965163, 
                    0.}, {-0.32995636263013994`, 0.06902223960955034}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.32995636263013994`, 
                    0.}, {-0.2999603296637636, 0.27608895843820186`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.2999603296637636, 
                    0.}, {-0.26996429669738725`, 0.13804447921910068`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.26996429669738725`, 
                    0.}, {-0.23996826373101088`, 0.27608895843820136`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.23996826373101088`, 
                    0.}, {-0.2099722307646345, 0.3451111980477517}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.2099722307646345, 
                    0.}, {-0.17997619779825816`, 0.48315567726685277`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.17997619779825816`, 
                    0.}, {-0.1499801648318818, 0.48315567726685277`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.1499801648318818, 
                    0.}, {-0.11998413186550544`, 2.00164494867696}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.11998413186550544`, 
                    0.}, {-0.08998809889912907, 2.9679563032106646`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.08998809889912907, 
                    0.}, {-0.05999206593275269, 3.3820897408679667`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.05999206593275269, 
                    0.}, {-0.029996032966376374`, 3.520134220087073}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.029996032966376374`, 0.}, {0., 
                    1.6565337506292082`}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0., 0.}, {0.029996032966376374`, 
                    2.622845105162913}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.029996032966376374`, 0.}, {
                    0.05999206593275269, 3.451111980477523}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.05999206593275269, 0.}, {
                    0.08998809889912907, 3.3130675012584163`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.08998809889912907, 0.}, {
                    0.11998413186550544`, 2.6918673447724633`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.11998413186550544`, 0.}, {
                    0.14998016483188176`, 2.0016449486769634`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.14998016483188176`, 0.}, {
                    0.1799761977982582, 1.2424003129719037`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.1799761977982582, 0.}, {
                    0.2099722307646345, 0.897289114924156}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.2099722307646345, 0.}, {
                    0.23996826373101093`, 0.27608895843820086`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.23996826373101093`, 0.}, {
                    0.26996429669738725`, 0.3451111980477523}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.26996429669738725`, 0.}, {
                    0.29996032966376357`, 0.20706671882865135`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.29996032966376357`, 0.}, {
                    0.32995636263014, 0.34511119804775103`}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.32995636263014, 0.}, {0.3599523955965163, 
                    0.13804447921910093`}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.3599523955965163, 0.}, {
                    0.38994842856289263`, 0.06902223960955046}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.38994842856289263`, 0.}, {
                    0.419944461529269, 0.13804447921910068`}, 
                    "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    LineBox[CompressedData["
1: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
AfgfSODKwA==
                    "]]}}}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], PlotRange -> 
                    All, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, False}, 
                    AxesOrigin -> {-0.3599523955965163, 0.}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 125, PlotLabel -> 
                    FormBox[
                    StyleBox[
                    RowBox[{"20", " ", "\"days \""}], 12, FontFamily -> 
                    "Bitstream Vera Sans", StripOnInput -> False], 
                    TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
                    PlotRangePadding -> {{None, None}, {None, None}}, 
                    Ticks -> {{{-0.3599523955965163, 
                    FormBox[
                    TemplateBox[{"\"\"", 
                    RowBox[{"-", "36"}], "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}, {0.029996032966376374`, 
                    FormBox[
                    
                    TemplateBox[{"\"+\"", "3", "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}, {0.419944461529269, 
                    FormBox[
                    
                    TemplateBox[{"\"+\"", "42", "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}}, None}}]}, {
                    GraphicsBox[{{
                    Directive[
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458], 
                    EdgeForm[
                    GrayLevel[0.6]], 
                    Hue[0.67, 0.6, 0.6, 0.15]], {{}, {
                    Directive[
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458], 
                    EdgeForm[
                    GrayLevel[0.6]], 
                    Hue[0.67, 0.6, 0.6, 0.15]], {{{
                    
                    RectangleBox[{-0.37870048640986187`, 
                    0.}, {-0.3366226545865439, 0.1573873051277665}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.3366226545865439, 
                    0.}, {-0.2945448227632259, 0.20984974017035535`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.2945448227632259, 
                    0.}, {-0.2524669909399079, 0.15738730512776627`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.2524669909399079, 
                    0.}, {-0.21038915911658992`, 1.4164857461498996`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.21038915911658992`, 
                    0.}, {-0.16831132729327195`, 1.4689481811924874`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.16831132729327195`, 
                    0.}, {-0.12623349546995394`, 1.7837227914480194`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.12623349546995394`, 
                    0.}, {-0.08415566364663596, 1.7312603564054316`}, 
                    "RoundingRadius" -> 0]}}, {{
                    RectangleBox[{-0.08415566364663596, 
                    0.}, {-0.04207783182331798, 2.5706593170868532`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.04207783182331798, 0.}, {0., 
                    2.203422271788731}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0., 0.}, {0.04207783182331798, 
                    1.5214106162350762`}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.04207783182331798, 0.}, {
                    0.08415566364663596, 1.7837227914480203`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.08415566364663596, 0.}, {
                    0.126233495469954, 1.7312603564054292`}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.126233495469954, 0.}, {
                    0.16831132729327192`, 2.255884706831323}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.16831132729327192`, 0.}, {
                    0.21038915911658995`, 1.6263354863202517`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.21038915911658995`, 0.}, {
                    0.2524669909399079, 1.0492487008517781`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.2524669909399079, 0.}, {
                    0.2945448227632259, 0.4721619153832989}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.2945448227632259, 0.}, {
                    0.33662265458654395`, 0.31477461025553255`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.33662265458654395`, 0.}, {
                    0.37870048640986187`, 0.31477461025553344`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.37870048640986187`, 0.}, {
                    0.4207783182331799, 0.15738730512776627`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.4207783182331799, 0.}, {
                    0.46285615005649783`, 0.052462435042588906`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.46285615005649783`, 0.}, {
                    0.5049339818798159, 0.15738730512776627`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.5049339818798159, 0.}, {
                    0.5470118137031338, 0.15738730512776672`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.5470118137031338, 0.}, {
                    0.5890896455264518, 0.26231217521294387`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.5890896455264518, 0.}, {
                    0.6311674773497699, 0.10492487008517754`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.6311674773497699, 0.}, {
                    0.6732453091730878, 0.052462435042588906`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.6732453091730878, 0.}, {
                    0.7153231409964057, 0.052462435042588906`}, 
                    "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    LineBox[CompressedData["
1:eJwV1nc4Vv8bB/DnUSENErI3yWooldT70BKRFMkofI1QSlJRJFFWGdlkZyuE
rBwqUSEh47EfD0qloSjE7/z+Otfr+nyuM+/7fh8pm/NGdmw0Gi2GTqP9/xj/
eaNnUTaDFE/o513WQeLPgYqpoTQG2a7ObaP1l4RJmvY5ngcMsvtic6Mhdy3W
nDS2Oh/OILNEx/+Mba1FwCvPAyqeDLJJ5VneF59auKfW8+boMUi9HwZMB9E6
GJ4wz0uZ7CFL08I/ulo/B8eL232hW3vI0Ygtjlfk67HFWF5KW7WH9LKc+TCB
eliM19v9Wt9D/qexhHn5ZD2KVyz7ZirSQzp1VPD1hFDrx2/Rpdl6SMVXoXcb
ftWjcPSGfMm7btKxNJXL7PUrmHF6XOh26iY3jl91rvFvRIG+81Kp1C4yO6ax
mTRoAk/ujZ17ErpIn9NRFx+fbcJF9kgX86guktS4VPs0qAk7yOruqMAuMtbr
vh9vQxNeblpdwHWxi5QSkf30g2gGY22R8S/tLtLY9zTLemcL2BnTmQ2sTtJi
/dIHOeKtOG3ve8hFoZPM424XGDnUhk5zrVU50p3kq9sbYmrM22BwlPZ+RLST
bGBe25h1rg2amt6mJ9d0krFKxyqSw9sgyOvpsG/2AznVZ5ejymhD2zNXf+Gm
D2Tj7MvMhnPt2M9vXffq/Aeyjb3JmC25A0ovsVPiaQf5ys5E2VGxC5s/BE36
yreTXL/yHI+79mPvJc66tML3JE/Q3U35kkzce7X2pLtIKxn0eZtl2vExTFQF
bT8h0kzGPedZbfNtAi3sx2Z2bXtDNt7M3+4b8w3y5erat3kayI/vTp9nu/IT
kf43GnSkXpKbZLZ2reX4jR39fGltRB1pGqUS0Rgwg2T1YG6/vdUke3/kcnaF
WcxNlB05dqGMDL6dn5HuPA+aO0/FmhNl5A2FB0bfLs2DfdFRunV3Galh1k9T
954Hz1qx34dXlJFbL3dql4TNQ3bXrfgDmaVkySAr0a10HoeDj4zu7CshebmP
Fc/8m8cDpY+ekjpPSN9//nJjQf+As0KZXyUKSfLsDrPPEQuINhPTleYoJJVM
6ucfxC+gJ1y7r6DvMTngQ9ulm7aArXpGZ308HpO1No5uoUULmHjmGiL35BFp
l75ZrendAozTC5vOyxeQ67+2/lq+YhHKLqr6S1flkjvOSwWcv74Ihq561Lne
HFL7/e5q3VuLuLN+T39nTg4ZMb28VzxoEcwh/XM5B3JIwXVlL4piFhF77Nxd
A59sMp/P7/HN4kUs3ZnfHDuVSZo5t7nWjy2id4migQojnVyccvvQJ0sjdLd0
C03mpZPzm7PkUtfTiHKr26OPvNJJi+obojaKNCL6GfP6Jql0snQyfbpnI40w
upKQp3Ymjfxp9kIhVYNGNE6sXK4xnUI2qEV9Dj5CI86mD965K5tIpmvOR726
TJ2fpinB3ZhAyty7rS3qQSMULGPLwpwTyJiGMUuXazRiRODo6P3ieNJX9yWD
w4dGmAU9144n4si65pJa7kAaoeP68F+mRTQJPtkR13gaIQNnt9rIMPJgspiK
eyWNeMepVO2yKYysWZ2837uaRsxkfFiuERtKFij/+uVbQyOy33YoT7HfI7nn
vdbceE4jlgu1X7RjBZFNN+/zab+hEU1P3i0cSvYj+SQvMX900wjZg0fCMjtv
kYJaWjlPGDTCi9EitWT1LdLuyarJC300QpXesq/6+k0y496Xz/2DNEL8QSy/
Zcl18reNf/jNMRqR0RauIq94gQw32Wky+ZNG5P6USq3ZfI487vDH1OEXjVhB
SI5v4nYiBWe8X/b+phEtDFE3/jf/kc4T/O/L/tAIQy1TZc/Fw6T3t/TkbQs0
ovPy0X173QnSoupZQ+AijRiyMWbamEqQLEmHIz00OhH78bmb9Yb9YOnweTgt
oRMpfjP7QjuskSBtKWjMSSf2bP+7IDpjC0vnUxJ+y+lE/6fZ8lyhMzgjmOP1
iItOCB9ZUH51ygWq49D8vZJOvAnxDfK+5I4ypkGW7ho6kZa3r8Js0QfnU1wu
8AnRiX3vlYRSKm8iUI/70ifKY9O8HqPuvvg8V21RKUwnFLWHd1z4cgt/cliM
I6J0orjbq9y/5zbe1Id6HpKgE8cXbAXfRt6B29VH0f8oT8scvspjGICjda73
CyTphMZ54R0JrwKRfnxCmS5NJ14se/q08EkIWFvPtF2WpRP2Sknrpl3uYrWH
+dhyOTrBedT/yi7Fe2g4c6grlvLhxGPbX6WE4push0GuPJ2YsXrwdplqGG5a
/GpXXk8nGqfCrmUHh6FXoH9rHmUnoau9Xw+EY/Fz0J0EBTqxK985OCwjHO7u
qVdXbaATK3F6lxpbBAZPN+69RvmR7YGEq88icODQCgddRTpxY2annojIfeQ1
hNXkUTYMUpl7dvU+QjP/TnIq0Ymfj/nMl2yNxJocx54yyi+0OVdkhkdi55mf
ERzKdCLyw1ylzrdIhJHWsscp25355vT5cBSEOX3uJlJWn2MK38uNQleyYMsQ
ZY57nW82cUZj2cTfUUkVOtEt+caz3S4aZkd+d1hQ9jxQxBCUisG0Yuj2Rsp6
PRlBVd4x+Bo6mDtDWfRsrMapvhg0fC34Ja1KJ74uBE/QNGIR95bBp0u5JvxG
fHpMLFY+PbTiHOVQWTfdA79jcWPfcFcwZaun9rMfjeKgyB3smUl5s65ZbnBh
HDZVqE1VU2br1zdTXR2P2s9vtN5Rbj+vxfXeOR6yJ/ba91POYNtW6fY6Hq3F
EVbjlN2jFJwE1ifg0rOiTV8pH1AQFa7wS8CiZmLnJOV1VdxvzJkJyFgwNPpC
+aP+Es8FJILV+T59lHLF0PSG1AeJ8EmVecugHOQ20bN3LhHXtAwa31I2Zx8I
HDN9gFWpFgnllJXj3u8MLHuAuCKLfamU/ynVf1LiS0KM8+kX/pRbasrjWlyT
cLvlqqA95eSj+Ydc3yWheYjcq035Aiv571qVZGQ8NtgvTFnryv2csqBkTBlo
i01S75eX687Jkx+TodxT+fYZZa7YFfnj8inQ3drxzI/yyrxjeWknU1C3uLf5
AOVVNQm5liEpWCaM2SWUV78fyREkU3A0ZGFfNfW9eVhKOe0/UmASRBacp7xm
xi37nmwqWK4vtopT5hNbmrU0KBUa+x8lnaXqi3/T4UyyOhVdVcq+KykL7I18
6PktFS2bxPyzqPoUcpTN+H48DdbjhRMtVD2Ll+5L7ZNIx8MWfoxQ/SDRGJIS
Y5SOdhsPBQvKkr0dyUb+6YDPpa2tVD/J0O2SGifSYd/DW5ZD9ZuCvn9CSWkG
TvOxuUjL0IkNVs3x5z9mQH7JOs9LVP8quvHHK4o8xGPWj/w6KTqhEvcwNsXn
IYI4TwfqU/2+ZbQ+KkQvExZ5L1SVxOiE2p9VUQe9M5G9OdbXhJofW1eYRLIV
ZaLk8hk2LxE6sX3zWMRVgSxU/2AFVFHzR9OLPcx2OAuq7KGvFvjpxO4wg1AJ
vmxs2GkfuoTynvToe4wD2RDyuRS0hI/6Xq/l7xrmZyNaOlX4NzXfDvAfDNK8
koMNq5dXJ62iEwcVQgNncnIQ36y70Yuahzq7ugKK+3IwcYitz2QF1U/WDncU
tHOxhqgZnaPmq2HBHT++VXmwzaruXLmUqrf9jd5f0vJxwtZDXO8vlaehVZxV
Hfkwst9+kjVDIwQYjyIC2QsgVW/J5TFNI9pcojLlnQowtxDQETlF5WWsTYvV
5kfo0cjdEP2VRmh8nhf7QD4Gp4Lb19ohGhGz7XtW+o/HOGMeIcVL5c8s+UOw
Yk0hHmkeHTrVTyNMuUbT7uwtRHD6jiWfe2gEX/LbMtmsQrRs2M3e0kYjQhpj
B065FMGSseJQ7QsaUXUuQubAnSKMzad2vKmjERO8IWdUUopQVRXN9p6k8tfy
xs+590Xwtlx6uLWKRiz9accet60Y9TIBz+Of0IjrImqq7fPFOFb1p9QqjUY4
uzR7HQwuQeOn3dLPrtOIyokp2q20Esxdr4GTJ43gdBD2q6kogTIz6Pnaq1Re
nnYI2vaxBOz9wQvmbjSi35AeI7O/FMahRt51jjTiiNq2wsWFUkQ+y+FnGtOo
+khkPr34FAPeMkP+SjTC99ILu6nApwj7kTL7XIFGtH7/9FE19SnY1jGL5+Wo
/5FP6t8evnsKySTDpfaSNOIho3XuvnI5OsSrrHj4acS6Z0v5L4yVo3Vbs1Pw
3CLmbp49qGBWCQ5e/sabcYsQkNFIMnWrRJf30c1pEYvY9JLjd0BIJR5c/7in
KngR9uzpaZ9qKsGKWWfZ5bWI1qCef7kyVahQ3kCUWy8i8/6BEpWvVQiw8rot
pbAIw4eSUmo+z3DF4/TWyscLMLJ1+id+rBZblufvOJb3D2HOFYlFe19g4qJc
YXnAHGI/Vo1dl3sFh76Y1kD1v1BZTHvI3P8aC6kH9tYFTiPvr6xi66YmWDO+
5v+Zm0Lp3WAZU7N32C+z9zYXfqD+bdt/IRrv8djOPeq8yVc81C6I3VTQhm1n
nMzduz5Cj32WQxodqGKd/+1ux8LYLj6zE2UfYKtWU971ZAj2ygH0DfJdGBGv
SI7k7oV5PbeXnXIXIhjb7JdOM2B4KuZP6pYuLBSJT/r1MaARlvlNGF0ol23V
KM9hgPvXy/6Vpl0QuHg0fHwfA+VV9MrvgV3wuPHZ1MG7B8v1rl0s/9qFGbsx
eca/LuQ7uowcLO1G2caW+kGVD3DccdNFqKobEubfX/QIfYA8R+Tfidpu+NcN
Zg4v+4CUjArue03dkNSoXiky0IHIwaWaHSPdCBsT/KkW2oFrxgmRVrw92N7U
0js71Q5drcb9Hud7oNezIa+uoQ3jgtLZuRsYWMl37/a+mFZ0F4qf+buRgX+t
OSab/VvRqCOioKPOwLo1Euoqbq3IvsqXParNgPz1/uVGR1pxpps9W9KCgUdN
vUZHOFvxMeZzFjVx8DJOI1JutgUfBUqzfKcYgDm7g/hIEz7y6WSZPevFKpHK
zqrlr5HCfHd5z4teLMzGfk2abIRp4YkD0q97US6mrhPX3ohGPYfRTx29GJOr
i21/0Igs39syHl96IS/TbmKp1gj77y+TY0T6IMpcX15p04CRt1qxHR59aNY8
PHqwrR4DvrsCDdT7sVlfuubvj+fwfSr4hk+zH4zEFZyVfc8h9+U3V69WP6TT
U8vvNjzHWePCEAf9fuz/ESt+/sFzzK6XC/Ox7af+D5Y8EdR9Dv7m1THFEf2Y
DL2TNZ9Zh8PrmBkC3/qR5pfCXepSi+965Gjfr378fMem/9a8Fvd9EuXTZ/vR
8lr3ypROLRifTLI3sg/gjKXbfx4ytXCofpunIzaA/Gd2qSXFJHytS4s99Qaw
wv/duaawGlTkBdQOZA3ApW7XhWz7aoTlHFGXfjSAaONvpvra1bDPEsi3KxlA
RsDSf4Li1eBLz4j5UjuArNtr6bKdVXCJr3WZ7aGux69fs0ynCtKBf0QFVg7i
h8qI/sCWSgTZn/HQvzAIzhJP5XWy5bCy3fgt7PIgpubcS82WlmO7zbRtx/VB
WFtVHK9jPQXL0s/QPHAQI188/5t5+BR7jFPWO6YNgrl4K3WJ4lP83Nv9wa9j
EO2TXJW3dpShgEdW6JToEOZ+uUpaupTgumKzua7EEFo6pZB2vASH911OUpce
ArvozSG2XSWYuNIow60wBIsjwkYCnCWQHzyrWqs2hMxGSd9b6U+QUlC6V1pv
CNzBAdX/DRYjQvegy5jHEF6kyyWmORXB2vZ7Ydv1IcQ7zHipHC/CJu+4qZob
QzCxPLfh/e4itBR9vhrjPwTxIv8AmzVFWCEUdksnfAgOd3cJ5lUUwm+8OzY3
ewinzFkydasLccXP6YVL1xBWsFlgKLIAQ74BKXGMIXDhXk0UlVs6NzO9XvYP
wX981vYGUQBhb+Z2YdYQLlf5Wkx+yUf1FbP8+u9DKGwPOL9NJx9szrpRolzD
+D3Tqq/JmYd7RxUd3mgOY8XjHoUOKpdnjujs+41hlLw/fepRQDasDOylJPcO
g0MiKb7MNhub9dJ63Q8Nw5pj2slQLBsd+4QNpUyG8dMgTC8jLAtCO7h2Xj0/
jF0ZRW4ZNzKRIT7BJZ82DDveqO4Grwz4thZLaj8chvMvLVrc6QxY+15TP5U9
DImWmjXhWhkQH1tpE/1oGNLbHA1+L8tAbMHGCvaqYeReDKkMDEtHiKa7w3j7
MAy/xIiS+Wm4ZEZ7mb2MCWJed+ggLRVGK1/3vORkwqijgjtnLAWba8K/Da1g
4opTtZZycwompWREhHiZSPwrKBgbn4Izn/ZfDBRn4hCj3Ju+PQUWV4MlnbYz
EeJ/VWn6cxL2RQt4KTkyEdjekiu6LhHsIxnCvGep/Y/ZkiomE/B6o1r5Hxcm
LK6fWRr0KgEGr49M1V9ioqd995GXlxNwYj7A0cqHiaM/bo/G9sTDyWbOOCqG
iZUxp0cisuMQrjqkuljPBMP62p6TTjE4fs2labSRiXRS4dS/gzEQaJx3bHrL
xN3fM7YtcjGItxZ6GPeeiU2wtp4ejkZGpJHI1n4mnpRIFppaRKN89iWH4y8m
/u6IpGuejMLAq5yhNukR1PRHZ226eB8af/IF/8iNwIzuy5lmdB/RGwoNxTaM
QOdVxx4ttfswCCmrddg4Aos1+3U4f0eg5uiLlPldIyhmqaUVe0bgQV+flbzx
CE4eZ39+8F44LH5yD3vcGcGovurmnzmhKJdZK5QcNIJdSV7D7u6h4DMWOPry
7gi+DdW2HtQKRdNT0brVkSM4wzbZ09FzD5peG1LTU0ZQdjezIGD1PYhy7rVu
rhhBUUqaOf12CHrFLg9LfhmB8LEDSMgNhPDEnlSebyNo4MsoW+EbCLMyDmva
zxHM+X0RKDsZCIZB3NDgzAiy2l5cfLqc8o3qwaQlLKzeO/jG9mwAeobZBkRF
WJDzM/FR1ryDroehDEFdFhKJUreIJf5UTprGc+qzsCZl9XzFsB9M9kiZ/TlC
rY8yp3lr/dDZWdzTZczCenb6QVMvyhyd3dHWLMx2pV/aMHsLHxxFu/g8WBCo
T/jzeN4X7So57TzZLJzclu2cK3MTAQWiTT9yWWiO9Xy4jvMm9qiEvWwrYCGb
0a5d8MUHucpXSiOfsBCwNqzLsMwHPkr7YwRJFpJ4wuvc9HygumHYTLKThbSy
2xJ//nojQFaIuXHpKBpyh4c9Z65hT0YIg4djFIHSIlr5r69hSobW/mP5KALy
TqpIJ17DKZnxF0+4R8GnJ67F0LqGbdKlD7eLjEJo2TkP1zBPMCWOOmLLKI61
lURM7vTAbpHA7wZWozj06OCTN1WXEXLD9ZbLf6PwvXXl+OOIy+gbOSlwz34U
/kw/oW7Hy/DMV9RsPjuKcbnr138JXkbZ7qY7eh7U/S3Tq9H3dMcmK24JnYhR
JGxNvqt86BJkH0bpa70chfX6QTUO/otwW+49ZNUwijZxjmNlU654fs7ezecN
tV/M/eODNldYq2+PI1tHofmcR4I/3BVJDd2s3f2jkJhQvRjP44p1EyLXNaZH
URbW2/pU6AK4NqblqimMYbdR4jKhjLPYrWpYL6Y0htBSdHx1PYsLKguDHKpj
eH04qHwtcRadSmb8fWpjuNTW8smw3xnpCrw+fhhD4dZCOT8RZ2hK+xp/MBnD
x8QbcY6ZjnDht6Fd8R+DY1dDoOKUPVL5eESsA8ZAXLuwcPCNPTrW1mzTCx6D
5PyS7uxUe2jwCjtLhI9Bza95vdpRe3Bwt31oSBwDo7D4xOkndkjh1M4TLBlD
b4vrvdpbtmibkzKpZI5hcG/HOz4jG9iXuqrPjVLrtA6JVSo2mHWpE9D8NIbj
DLlhXU4bSDOtup59G8POfreBSNIaro3JpnXzY2APs/lrvNkaPFFi5o0C47jG
sSxeQcoKGQbndi0XHse91Uk/tWhW2MH5TERXbBzt1VqH1cjTsLpm0fdWZhxF
PqyBpXtO47F1guW7TePgjZ5uN9c6BQNVIatO3XHUFV/nkjllAeb4GWKdwThO
/Lero0bGApdTyyVNj45jrcKQ65tP5kjiMx3uOTGOptH1IqpXzPF1Ntqm35a6
vt8wB2+MGUIa+OxY3uP4yb5PKWvCFJI3bffL+Y6jLdqSbbzMFCUaJXL2/uM4
92lwPuiWKXoLjo2NB48jIdYlZl7MFIqREQ6fY8chFtGwx+3ECdToMw8qJ47D
tPrGsjr5EzDi2KJwLnkcfm/MfM9Nm8DT8/3HyYf/f/5184PRJli9Ver1xpxx
OAXa5mY4mCDt64WcC/njWJKe61q/wwTqWbWBRY/H4VyqXqDFZYLXVjxOP4vH
8XXYokKwzxj/AyqkMYM=
                    "]]}}}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], PlotRange -> 
                    All, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, False}, 
                    AxesOrigin -> {-0.37870048640986187`, 0.}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 125, PlotLabel -> 
                    FormBox[
                    StyleBox[
                    RowBox[{"50", " ", "\"days \""}], 12, FontFamily -> 
                    "Bitstream Vera Sans", StripOnInput -> False], 
                    TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
                    PlotRangePadding -> {{None, None}, {None, None}}, 
                    Ticks -> {{{-0.37870048640986187`, 
                    FormBox[
                    TemplateBox[{"\"\"", 
                    RowBox[{"-", "38"}], "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}, {0.16831132729327192`, 
                    FormBox[
                    
                    TemplateBox[{"\"+\"", "17", "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}, {0.7153231409964057, 
                    FormBox[
                    
                    TemplateBox[{"\"+\"", "72", "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}}, None}}], 
                    GraphicsBox[{{
                    Directive[
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458], 
                    EdgeForm[
                    GrayLevel[0.6]], 
                    Hue[0.67, 0.6, 0.6, 0.15]], {{}, {
                    Directive[
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458], 
                    EdgeForm[
                    GrayLevel[0.6]], 
                    Hue[0.67, 0.6, 0.6, 0.15]], {{{
                    
                    RectangleBox[{-0.3110072544963855, 
                    0.}, {-0.276450892885676, 0.7898772928496697}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.276450892885676, 
                    0.}, {-0.24189453127496652`, 0.8616843194723683}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.24189453127496652`, 
                    0.}, {-0.207338169664257, 1.0771053993404587`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.207338169664257, 
                    0.}, {-0.1727818080535475, 0.5744562129815785}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.1727818080535475, 
                    0.}, {-0.13822544644283802`, 1.0771053993404596`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.13822544644283802`, 
                    0.}, {-0.1036690848321285, 2.7286670116624956`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.1036690848321285, 
                    0.}, {-0.06911272322141901, 2.010596745435525}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.06911272322141901, 
                    0.}, {-0.03455636161070952, 1.7951756655674327`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.03455636161070952, 0.}, {0., 
                    1.8669826921901285`}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0., 0.}, {0.03455636161070946, 
                    2.2978248519263156`}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.03455636161070946, 0.}, {
                    0.06911272322141898, 1.2925264792085505`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.06911272322141898, 0.}, {
                    0.1036690848321285, 1.2207194525858533`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.1036690848321285, 0.}, {
                    0.13822544644283796`, 1.7233686389447367`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.13822544644283796`, 0.}, {
                    0.17278180805354748`, 1.2925264792085505`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.17278180805354748`, 0.}, {
                    0.20733816966425694`, 1.1489124259631578`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.20733816966425694`, 0.}, {
                    0.24189453127496646`, 1.148912425963156}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.24189453127496646`, 0.}, {
                    0.276450892885676, 0.5026491863588808}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.276450892885676, 0.}, {0.3110072544963855,
                     0.7898772928496697}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.3110072544963855, 0.}, {
                    0.3455636161070949, 0.5744562129815799}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.3455636161070949, 0.}, {
                    0.3801199777178044, 0.9334913460950642}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.3801199777178044, 0.}, {
                    0.41467633932851394`, 1.2207194525858533`}, 
                    "RoundingRadius" -> 0]}}, {{
                    RectangleBox[{0.41467633932851394`, 0.}, {
                    0.44923270093922346`, 0.6462632396042752}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.44923270093922346`, 0.}, {
                    0.483789062549933, 0.7180702662269726}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.483789062549933, 0.}, {0.5183454241606424,
                     0.35903513311348684`}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.5183454241606424, 0.}, {
                    0.5529017857713519, 0.21542107986809247`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.5529017857713519, 0.}, {
                    0.5874581473820615, 0.07180702662269701}, 
                    "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    LineBox[CompressedData["
1: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
3evqHGzleRwiRmNhsGcJbzG11/0PDYGe7A==
                    "]]}}}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], PlotRange -> 
                    All, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, False}, 
                    AxesOrigin -> {-0.3110072544963855, 0.}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 125, PlotLabel -> 
                    FormBox[
                    StyleBox[
                    RowBox[{"100", " ", "\"days \""}], 12, FontFamily -> 
                    "Bitstream Vera Sans", StripOnInput -> False], 
                    TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
                    PlotRangePadding -> {{None, None}, {None, None}}, 
                    Ticks -> {{{-0.3110072544963855, 
                    FormBox[
                    TemplateBox[{"\"\"", 
                    RowBox[{"-", "31"}], "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}, {0.13822544644283802`, 
                    FormBox[
                    
                    TemplateBox[{"\"+\"", "14", "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}, {0.5874581473820615, 
                    FormBox[
                    
                    TemplateBox[{"\"+\"", "59", "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}}, None}}], 
                    GraphicsBox[{{
                    Directive[
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458], 
                    EdgeForm[
                    GrayLevel[0.6]], 
                    Hue[0.67, 0.6, 0.6, 0.15]], {{}, {
                    Directive[
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458], 
                    EdgeForm[
                    GrayLevel[0.6]], 
                    Hue[0.67, 0.6, 0.6, 0.15]], {{{
                    
                    RectangleBox[{-0.30566079915260724`, 
                    0.}, {-0.2716984881356509, 0.23276208547687324`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.2716984881356509, 
                    0.}, {-0.23773617711869452`, 0.46552417095374615`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.23773617711869452`, 
                    0.}, {-0.20377386610173814`, 0.9310483419074923}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.20377386610173814`, 
                    0.}, {-0.1698115550847818, 1.1638104273843664`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.1698115550847818, 
                    0.}, {-0.13584924406782545`, 1.280191470122803}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.13584924406782545`, 
                    0.}, {-0.10188693305086907`, 0.6982862564306193}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.10188693305086907`, 
                    0.}, {-0.0679246220339127, 1.2801914701228019`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.0679246220339127, 
                    0.}, {-0.03396231101695635, 1.0474293846459297`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{-0.03396231101695635, 0.}, {0., 
                    1.512953555599676}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0., 0.}, {0.03396231101695635, 
                    1.3965725128612394`}, "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.03396231101695635, 0.}, {
                    0.06792462203391275, 1.7457156410765466`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.06792462203391275, 0.}, {
                    0.1018869330508691, 0.6982862564306197}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.1018869330508691, 0.}, {
                    0.13584924406782545`, 0.4655241709537465}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.13584924406782545`, 0.}, {
                    0.16981155508478185`, 1.0474293846459282`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.16981155508478185`, 0.}, {
                    0.2037738661017382, 2.0948587692918594`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.2037738661017382, 0.}, {
                    0.23773617711869455`, 1.9784777265534226`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.23773617711869455`, 0.}, {
                    0.2716984881356509, 3.4914312821530986`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.2716984881356509, 0.}, {
                    0.30566079915260724`, 2.444001897507169}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.30566079915260724`, 0.}, {
                    0.3396231101695636, 1.7457156410765493`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.3396231101695636, 0.}, {
                    0.37358542118651994`, 0.931048341907493}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.37358542118651994`, 0.}, {
                    0.4075477322034764, 0.5819052136921813}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.4075477322034764, 0.}, {
                    0.44151004322043275`, 0.34914312821530985`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.44151004322043275`, 0.}, {
                    0.4754723542373891, 0.34914312821530985`}, 
                    "RoundingRadius" -> 0]}}, {{
                    
                    RectangleBox[{0.4754723542373891, 0.}, {
                    0.5094346652543454, 0.6982862564306197}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.5094346652543454, 0.}, {
                    0.5433969762713018, 0.4655241709537465}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.5433969762713018, 0.}, {
                    0.5773592872882581, 0.34914312821530985`}, 
                    "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    LineBox[CompressedData["
1:eJwV1nk8VVsbB3BNMpUyVJKEROFmikJ+uilEMiVDShlLSSWkS6mUQiOVClG6
ylRC5n0GjqFIGUJlOq6KzIScs/e73z/2Z32+/6211/P8nqVw+ISd11wBAQGS
/v6/7i1QcI4jGon9A6uf+q+vRmrkj589xY2E2Qnx/SpG1RhyyAnVKmgk9sZv
CxmwrkbUuNHj+sxGwkHMqz8+sBrFmk6dQg8bibABPeVARjVWZ9zwCgtsJJYZ
Ch13dqnBj+TZk97rGwnByqDinnu1CL3WfH3z3U9EuHBHBUenDvlOF+Yl7P5I
GLdvetZc8RG/RY7Hxco1EFaO9QHf1jfj22zO8GhfHRHyz6q1ZQOtmGk7bbrN
/R0xGbxQ83TYNyiFl9QUzq8hphJ5ncKruhGycvRrehCHOFTjuHnXABcGm5Xi
r0ywifnGh5wLf/ZBZFVbWEwik/jNFt+l9t9PiIzM/JBWLSd8slWSG3cPQlbX
Qt/Dr4jI71UICLUegeC52x+iOXmE5PTu/n+mRnHL02+h5dkcQs4iLDaqehyW
AywteYnnhGdac35V0CS80p6pZDDvE+cD9XW3GE3hG88wUXXiONG+0vNob880
Igb8p8tbYuHSF5YVa/MH3Q729URcClpnTOdJ5c/ix+/o6GvFKQjZNMb9VTSL
kQcV5vZdKXj9Jm0uu3wW5NdN7D61VDRSauPe1bNY6bWicBE7FdE6WwJiv8zC
4cy3FNfRp0j4R8TZfg4PnHifM1O7n8Nmm6Tg2108ZLScW7VxYQbyFdJfRDTx
oJnQbKOgmQHXFfIJE6085LlujJR0zsC/az82eHzjobSrZ3DqZQZwUXepfh8P
9f0WBMM6E+/eHnnyaoqHMXL5Ybt7WXi8tM5mSIaPRMn2xmKJV5i+4iN01ZWP
rgnBIR2VVzh3JMD9/EE+FFt0hLIMX8FNf7jytAcfzx/EGiV7vsKTGtdcGz8+
suW2pV0qeIWXdWld7aF8MFTSg6xcXqPwGld6YwIfvYZBMh0puTA5+XLPu098
yG45x5nKz4WvWdCsVgsfdnoXTi+tzUV3YuLzuDY+CM3rdaZjuah005nc3cXH
Q+WkiIy/32CuyQ7LW4N82IpzfoZw3+C8b1qS3UIS5T3SxZLK+VAYbtpboU9i
snOlj8aWfFwmvbamG5BQ/yYvZbY7H77/ysxc3Uoi4fN6/9Az+Vh/fey7wXYS
ge+3KnZX5qOAJR7hb01CrcDrerZ3AdZ2ttwV9STx4Fq+i0X6Wxy69ecv6RgS
Sb56HOGSt+AL8QbNb5BIM3urVVv3FqeSxX6F3CKRu6BIyHL8LQY/iqbWxZF4
F1FaYGVciKDHzzosEkmQZ9kSNk2FGCngfo/JIjHf2TR8yfdCrNl+TP9yDgnR
zZU/G2YK8QC+RcGvSaz4zWHYyhchlqiwtc8noXWq1t/+aBF2vXxOfC0l4Xn0
Y62jQDFGbU+M6r8jcdTCTm+5ZDE2WNpJjL0ncVK1MeWzcjE+/hvkkl5PIryv
KcTJshjhaj/dhD+RuH+4dZ3LvWIU3Y+VT2wlUevSedFNvQTTfY7zRP8j0bDF
fUgOJRBYsXn31T4Sn1d0O3fYlqDfKSGP+k6it6VH82BwCZxLktp6++nz2fV1
uLNK0CrkcvzCCL1fy0EDT6dSnD1wcwfvD4mgYrK78FgpdNTVyx14JErXL7m2
KKIU1Rnjj9L5JHYK6XwueFEKJKVc/luAgktlyGnh2VK4XTH9Y7yAQrLu9ZUH
xMtgWzYefUqQQu/TR8xcpTJk95qEpyyk4H+xXHy/VRkON8VfHBWmcBHzM7MT
y+BRyZ51XkyhKlvafl5uGS4kDF7yFacgtlrlzz5OGZybM31PLaFwj2dhPme4
DJ8yFu8MkaDwsuhmr71JOeKO1W63WkZhWDUlOt2hHF9iZ59uWk5B90GuNt+3
HPejjN1WrqBQHtR84fntclhxD7Y1y1D4pCMrN9NTjg8a1oNSchSWP1Wv2D1V
jifhW0XbaO+XMPZLFSXQWGZy/sFqCn0j7kWWugRiO9R8hddQUHM/5f7EnEDK
0eNfi2kHfLi0cHI/gWyDoDQfBQqzWc/3JkUS4Eun675RpGAiV8gbSyCg99Dw
j60ShSsxNU/NsglUOvhJ/qK9xO/X6EgLgfaL0ZBQpiAhJVOlIMWAsUVR8DoV
CnnvUlZarWag10qkMZn2vksb/INUGYgOEbwgpUrh8Zih9DsjBvwbNtYP0zZ+
WeE7uZOB1oV//B3XU+g+tLtU3paB/rAX7oW013084BHoxYBvsLCe/wYK1VHf
C5JOMMAZ8JFh0fYzCRCpOcvA6IWFu5eqUVg8Pe02fokBtZCKBlfar3IiXsvd
YEBUM+xZCm07H5EF5g8YuLFWorqH9uTqu06nUhnQHvYylFen8KBFNvNxJgOL
zdxIR9oGN55RnAL6PAKdS67TrtDzyzVlMPBhv+PlfNrWnVperBoGfgts7P5K
u/Xq9HKTRgYMA5xVBDQoeGgStWVfGbCrqXKUpz3UGhlm2Efvn3P8hAHtkAgr
zaJhBhYQJidtac/dIMnVm2HA65n+fk/aMZ/a4vPmMrF+gaXmadrLzj0x1xZj
Ikr0zGAY7RQln9kcaSaywl7fvUxb/b1GtoY8E6wyvuJV2gWBE+4Zqkx8r3F6
FKnx//stkVyvzYSBEZt3nnZtZQTnuSETTbtgFkTbwd/87NodTNRWNYT60u5c
Jq6eas2EskLYfUfaR4nmDnknJvrcLRNNaE/4PL6deIiJGXXTmHW0w5d4mMr6
MbG56qSnEG2hovVTDwKZcFvUpdxH/587h0ZeLAtnQuDs4waCtpzI2/1xV5m4
Kl/gGU87PTdMXOI2E0q5W3u8aWu7mrJuPmSiMmyHhS7t0nmiZxY9Y0LMrzuB
T9/fzsyPKtFZTBiS65pYtF35B2KvMJgw11okuI12X5qyyfxaJg5zu/gzdL0E
WP8ai2hkouhgRWc27cvJZ53C+phIj9I+LEZ7sbmJ6OwwE0sU+XPz6fp7MCJY
HjLDhPrBfTecaWdti1MKFGPhjZmV1z26fjf3u7SMSrPAfavz+i/arDsK107I
s7Bmr+kPFl3/LdzsoaPaLLzcEbOicx0F95gzKT8MWbihLSfhQ7tf18jBewcL
J89fn+qn+4mKrCk65MRCgxhxpW8tBVXV3stO4SwoHrEszaT7M7fhpX7LVRak
bp9YKUXb6OzJfvvbLFi6KXkH0/1sW0vu2fOMdp9WlRbd76HHZGR31rLQZiT2
9gydF/Olu+rYjSy8aGVHla6icLPs+YVt31jISVy7i5Kl8Gyxbp/RCAuZ2WKJ
ISsp1L2yfq2zjA2GHT/aYPn/+yciK0KejdGDWTpedJ61yOW9+KDKRv+7rslo
aQpd12VS/QzZKNaXfVcnSWHMs/fOU3c2PR+0WYp0Pi6TCQ2UzGDD185JW0KI
wsMPmQGH8thoae/KIOk8lr/SeSynjI2/5pbu+E7nteq4qZdlAxsdg0u+Zs6j
YFgn7nhpko0Tj6WThSkS7hFp+uOogHOsZY/wJD1P9Ft1tllUYHLe1fjCcRJH
hkQ0b9pVIDx7X4DHGIlTrgGqal4VaEgqScoaJhG5yVDG43oF0ueP/5Kk58/L
nw1/PjVVwOXLb45qB4lxW15Z7pFKxKqFhQazSdyzmfpce7oST6+1i0cySRjs
GRvtCauEGPVZ9wZB4qLVD2XJO5U4qaeudbeEhIRZU+zp4kqE206I+r4hoW2U
6aYrysG+uzLLjFNJBKzbz8/P5GDya55J6j8kpJT3La8v4GBP193HSqEkCpXs
tPoYHOgYBv37JJiEgIK517JmDi5KZ9fHniJxS1a3LojPwYYDmhd1fUnkLBFL
1LeugtL1p2F5diSG/pQYFQ1XoW8qXvnqWhKh/RP5a2eq4OvnFpmnQEKwXWPj
rbnVmP8kzLRjNQm5omQFH+lqVP2U/m+dDAmr4EuC0obV2CS7uD5mEYkX47sa
Aq5UQ6zooV7mJB+ev9o8VOVqsKBh1n0bm48v36au399VC8dkPUVhBz6uSM8o
1DnUokpce5OQDR/au/8Uzj1Yi2WtzEPzrPiIKuX1HT9diwDvZ4uHtvOh+2jO
dtPHtbDLnPgRp8NHjJPo7MhgLShujuYGCT6MGlf77br9DhNHkrrPv+chsXqH
Jf/zezrvGqW269HvU6373mecP8Bz6aYvx3/8QeLR3PSezw14OCd6qCdqBuom
ivusV31CcJShbcqPKeRp2wwqWzbCp3KNTorlb0T2Uq8EA5ug4Wrs8unfCWx7
WKihVtCMk4dzLHRbx/D72MY7JT0tEIyz4b9SGUX89pycm6qt+Kkzne6dPwQN
/cG8D05tmGOhoztyegDi/ZnfV1xqB3lwkcht7x/48uRMYxrnC3SuXMrgm/2H
J4G850kTX/FV/fKu6Ts9sLGK0fli2AHlOuPVkexOWHATB9eEdUKkmhcXwWtH
4rsCsyMOXdis6D6tzm9BtIrSJPd3F8IjxGQLlBvx+7b/vbgb3ejQn/B8NKcB
gl9D6y2UeiB/zfxT8rNaiKaLcp9U9EA0ydBj59NKBPloLJ/l9ICrmNkuR9dt
17o9lntresAQv60iEFGJvLQ7b4Tre2DSNKH534FK7H8qc/nU5x5YtCbGaMpW
IjNJRdm0vwd3M5ILq+MrYBW/3ee7OBfB3SM7uu+wEXPx3ICGKxenfE9aVWQw
EbdzQLXejQubf8INwh8x8VjE1dvfnQuXbWn2ptH0HLtj0J3txcVY26bhiaNM
1KfOtGwM4KJq6SKl7xuYEGcHs7Qiufhr8SoDkSwG7swLTNiUw8XIqn8W/B1I
4GEVt6X5NRdrWNb7XjgSSI22lwrK46JDeH24yhYCbyR1bhYUcRFY+3GlL1mO
JqWxy/oVXLTHLcfMtXIsMw0I2NLGBSvpr2ybtDKsFurKavvCxfsijyz5a2VY
937PwNkOLj5/tGHOP14GfYeN3sVcLrpVHKeWbCqDk+eQq+EQF+kq9laanFK4
qx5I+DLCxfaoqJTsl6Xw/VXXcm6ci5UydzP+vlmKkMAs29JpLiYDzLMz6Hfu
hc1yN/fPcvFineDNC1tLEcWLec/jc7FvqnziqGIpbjF4wokCvTCWOt94dGEp
Ei4fM9s6rxevPtrLX/hVgv8BAXsW9w==
                    "]]}}}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], PlotRange -> 
                    All, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, False}, 
                    AxesOrigin -> {-0.30566079915260724`, 0.}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 125, PlotLabel -> 
                    FormBox[
                    StyleBox[
                    RowBox[{"250", " ", "\"days \""}], 12, FontFamily -> 
                    "Bitstream Vera Sans", StripOnInput -> False], 
                    TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
                    PlotRangePadding -> {{None, None}, {None, None}}, 
                    Ticks -> {{{-0.30566079915260724`, 
                    FormBox[
                    TemplateBox[{"\"\"", 
                    RowBox[{"-", "31"}], "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}, {0.13584924406782545`, 
                    FormBox[
                    
                    TemplateBox[{"\"+\"", "14", "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}, {0.5773592872882581, 
                    FormBox[
                    
                    TemplateBox[{"\"+\"", "58", "\"%\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    TraditionalForm]}}, None}}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{None}}}, 
                    GridBoxFrame -> {"Columns" -> None, "Rows" -> None}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                    GrayLevel[0.84], BaselinePosition -> Automatic, 
                    AllowScriptLevelChange -> False], "Grid"], 
                    LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {
                    "Columns" -> {{None}}, "Rows" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "DailyReturnAnalysis__More"}, {}], 
       XMLElement["statelist", {"count" -> "3", "value" -> "Last 2 years"}, {
         XMLElement[
         "state", {
          "name" -> "Last 2 years", "input" -> 
           "DailyReturnAnalysis__Last 2 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last year", "input" -> 
           "DailyReturnAnalysis__Last year"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 5 years", "input" -> 
           "DailyReturnAnalysis__Last 5 years"}, {}]}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"title" -> "Daily returns versus S&P 500", "scanner" -> 
     "FinancialData", "id" -> "DailyReturnsVersusS&P 500", "position" -> 
     "900", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                GraphicsBox[{{{{}, {
                    Hue[0.67, 0.6, 0.6], 
                    PointSize[0.0085], 
                    PointBox[CompressedData["
1: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
RP3XS1JSZ/E/4qdnYA==
                    "]]}, {}}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    AbsoluteThickness[1], 
                    LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAfBYa2tzNHMD5ISRk/4/yvyCgU1z8
yRzA9dp55auN8r/FKY3eG8YcwPGTz2ZYi/K/Dj0A41q+HMDqBXtpsYbyv6Fj
5uvYrhzA3OnRbmN98r/GsLL91I8cwL+xf3nHavK/EUtLIc1RHMCFQduOj0Xy
v6Z/fGi91RvAEmGSuR/78b8uBmQNv8gawP3ktk+6WfG/XyGQFpTNGcC0W9Hu
BsPwvyBUFmpW1xjAjuAhVEgv8L8/pCHUOcwXwHRUUfQHHu+/CIlxovDSFsBl
zUpS4/Ltvy+LRofIxBXA+s+wMbOu7L/mpHW2jbsUwNbugp1scOu/RlPpSSbE
E8BJ80AbikfqvwQf4vPftxLAYIFrGpwF6b9sfx8Cbb0RwBD1gSsS2ee/ZPe2
WufHEMAHhQTJcbLmv3QZp5MFew/AoZ7z58Vy5b9zbWk644kNwNSdzhh+SOS/
Lvw1DgNvC8CqJhbLKgXjvwq6tnb9XQnAyMvJCcHH4b84ocCnnnAHwH5WaVq7
n+C/IsPUBYJZBcCu1epYVL3ev18OciwMZgPAkcnaIPpl3L9YlBmA2EgBwLzQ
o+uI3Nm/5JLq0P5q/r90EEXP6l7Xv71PtDKai/q/XRu+1hQM1b8PgpLuuVj2
v445EOEnh9K/BweDOydt8r/wIjoPAy3Qv3/Ut2OTKu2/vIl4rGK9y7/ghZIE
4dPkvyr0LkCRvMa/Grkjj5MX2r/49JQbUBHCv6d46PrscsK/rTha+cEDur+6
HWe6R1e9P59p6x4wFLC/mYBeFuTH1j9KHW9P+z6bv/Ox6Gryw+M/4G58XnPo
iT9Nfn2oV5XrP45sNzh2Pak/EsegSamf8T99/AZpG9G1P4dZ7mQiyPU/lfWN
qtfLvz9VmSnvTan5P/TgWq65jcQ/q2NQH/Xd/T+OoLyBtZnJP65tMl+n5QBA
ysluDSFQzj9megiaedICQPVAuDNzd9E/YkzUpwnpBEC9CeDd7PjTPwv1Fu3y
2wZAVAcwZJ5P1j/4Yk8FmvgIQKTxpudm2Ng/xaHTiGYLC0Bno0VSXFXbPz+3
zkOM+gxA+YkMmYmn3T/9kb/RbxMPQKIufe7mFeA/s6GTS1aEEECuMoj+pELh
P9hi7WMHehFAdBongnlp4j+fBsJll4QSQJZ4WYRZqeM/vRVSA1R9E0Ag8Z90
1dPkP5K/K6yqgRNA7bw+PwrZ5D9oaQVVAYYTQLqI3Qk/3uQ/FL24pq6OE0BW
IBufqOjkP2pkH0oJoBNAik+WyXv95D8Ys+yQvsITQPStjB4iJ+U/clCHHikI
FEDGannIbnrlP0j6YMd/DBRAlDYYk6N/5T8dpDpw1hAUQGACt13YhOU/yPft
wYMZFED6mfTyQY/lPx+fVGXeKhRAMMlvHRWk5T/M7SGsk00UQJknZnK7zeU/
opf7VOpRFEBm8wQ98NLlP3dB1f1AVhRAM7+jByXY5T8ilYhP7l4UQM1W4ZyO
4uU/eTzv8khwFEAChlzHYfflP07myJufdBRAzlH7kZb85T8kkKJE9ngUQJwd
mlzLAeY/0ONVlqOBFEA3tdfxNAzmP6aNLz/6hRRABYF2vGkR5j97NwnoUIoU
QNFMFYeeFuY/UOHikKeOFECeGLRR0xvmPyaLvDn+khRAa+RSHAgh5j+7OXsp

                    "]]}}}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                  Method -> {"GridLinesInFront" -> True}, ImageSize -> 300., 
                  AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
                   Axes -> True, AxesLabel -> {
                    FormBox["\"SP500\"", TraditionalForm], 
                    FormBox["\"000400\"", TraditionalForm]}, 
                  AxesOrigin -> {0, 0}, 
                  BaseStyle -> {CellBaseline -> Baseline}, FrameTicksStyle -> 
                  Directive[FontFamily -> "Times", FontSize -> 10], 
                  LabelStyle -> {FontFamily -> "Verdana", FontSize -> 10}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {Automatic, Automatic}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                  Ticks -> {{{-8., 
                    FormBox["\"-8%\"", TraditionalForm]}, {-6., 
                    FormBox["\"-6%\"", TraditionalForm]}, {-4., 
                    FormBox["\"-4%\"", TraditionalForm]}, {-2., 
                    FormBox["\"-2%\"", TraditionalForm]}, {0., 
                    FormBox["\"0%\"", TraditionalForm]}, {2., 
                    FormBox["\"+2%\"", TraditionalForm]}, {4., 
                    FormBox["\"+4%\"", TraditionalForm]}, {6., 
                    FormBox["\"+6%\"", TraditionalForm]}}, {{-15., 
                    FormBox["\"-15%\"", TraditionalForm]}, {-10., 
                    FormBox["\"-10%\"", TraditionalForm]}, {-5., 
                    FormBox["\"-5%\"", TraditionalForm]}, {0., 
                    FormBox["\"0%\"", TraditionalForm]}, {5., 
                    FormBox["\"+5%\"", TraditionalForm]}, {10., 
                    FormBox["\"+10%\"", TraditionalForm]}, {15., 
                    FormBox["\"+15%\"", TraditionalForm]}}}, TicksStyle -> 
                  Directive[FontFamily -> "Times", FontSize -> 10]}]}, {
               "\"\""}, {
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"alpha\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["18.2", 
                    Global`TagBoxWrapper["StringBoxes" -> "18.2"]]}], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"beta\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    InterpretationBox["\"0.150\"", 0.15, AutoDelete -> True], 
                    NumberForm[#, {10, 3}]& ]}, {
                    TagBox[
                    PaneBox[
                    SuperscriptBox[
                    StyleBox["\"R\"", Italic, StripOnInput -> False], "2"], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    InterpretationBox[
                    "\"0.005\"", 0.005280067765893991, AutoDelete -> True], 
                    NumberForm[#, {10, 3}]& ]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata,numberdata,\
quantitydata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement["statelist", {"count" -> "4", "value" -> "Last year"}, {
         XMLElement[
         "state", {
          "name" -> "Last year", "input" -> 
           "DailyReturnsVersusS&P 500__Last year"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 2 years", "input" -> 
           "DailyReturnsVersusS&P 500__Last 2 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 5 years", "input" -> 
           "DailyReturnsVersusS&P 500__Last 5 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 10 years", "input" -> 
           "DailyReturnsVersusS&P 500__Last 10 years"}, {}]}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
FinancialDataSourceInformationNotes.html", "text" -> 
        "Financial data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "8", "datatypes" -> 
    "", "timedout" -> "", "timing" -> "5.106", "parsetiming" -> "0.402", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP263719hci1c93b66bi2a00001d277d5ch4bh6ige&s=10", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP263819hci1c93b66bi2a000022g5cfc32c717h3d&s=10", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 11, 16, 54.9136484`9.492255140570009}, "Line" -> 
    54, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Quote", "Last close", 1, 1, "Input", 
    "FinancialData[\"SZ:000400\", \"LatestTrade\"]"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "financial of SZ:000400"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{322., {50., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2011", ",", "10", ",", "10", ",", "23", ",", "1", ",", "0.`"}], 
     "}"}], ",", "23.42`"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.5272053781509533`*^9, 3.5272054163716564`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Harry Potter", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Members", 1, 1, "Output", 
        "{\"Harry Potter and the Sorcerer's Stone\", \"Harry Potter and the \
Chamber of Secrets\", \"Harry Potter and the Prisoner of Azkaban\", \"Harry \
Potter and the Goblet of Fire\", \"Harry Potter and the Order of the \
Phoenix\", \"Harry Potter and the Half-Blood Prince\", \"Harry Potter and the \
Deathly Hallows\"}"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}, 
      "ExtrusionOpen" -> True}}, Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods"}, Typeset`pod1$$ = 
   XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox["\"Harry Potter books\"", 
                Global`TagBoxWrapper[
                "EntityClass" -> {Global`BookData, "HarryPotterBooks"}]], 
               Identity], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Members", "scanner" -> "Data", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "moutput", {}, {
        "{\"Harry Potter and the Sorcerer's Stone\", \"Harry Potter and the \
Chamber of Secrets\", \"Harry Potter and the Prisoner of Azkaban\", \"Harry \
Potter and the Goblet of Fire\", \"Harry Potter and the Order of the \
Phoenix\", \"Harry Potter and the Half-Blood Prince\", \"Harry Potter and the \
Deathly Hallows\"}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 TagBox[
                  TagBox["\"Harry Potter and the Sorcerer's Stone\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {
                    Global`BookData, "HarryPotterAndTheSorcerersStone"}]], 
                  Identity], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 TagBox[
                  TagBox["\"Harry Potter and the Chamber of Secrets\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {
                    Global`BookData, "HarryPotterAndTheChamberOfSecrets"}]], 
                  Identity], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 TagBox[
                  TagBox["\"Harry Potter and the Prisoner of Azkaban\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {
                    Global`BookData, "HarryPotterAndThePrisonerOfAzkaban"}]], 
                  Identity], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 TagBox[
                  TagBox["\"Harry Potter and the Goblet of Fire\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {
                    Global`BookData, "HarryPotterAndTheGobletOfFire"}]], 
                  Identity], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 TagBox[
                  TagBox["\"Harry Potter and the Order of the Phoenix\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {
                    Global`BookData, "HarryPotterAndTheOrderOfThePhoenix"}]], 
                  Identity], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 TagBox[
                  TagBox["\"Harry Potter and the Half-Blood Prince\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {
                    Global`BookData, "HarryPotterAndTheHalfBloodPrince"}]], 
                  Identity], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 TagBox[
                  TagBox["\"Harry Potter and the Deathly Hallows\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {
                    Global`BookData, "HarryPotterAndTheDeathlyHallows"}]], 
                  Identity]}], " ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  
                  TemplateBox[{"\"total: \"", "7"}, "Row", 
                   DisplayFunction -> (RowBox[{#, " ", #2}]& ), 
                   InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", " "}], "]"}]& )], 
                  "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0, {FontFamily -> "Verdana", FontSize -> 10}, 
                GrayLevel[0.5], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Basic properties", "scanner" -> "Data", "id" -> 
     "BasicProperties:BookData", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"\[Null]\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    TagBox["\"original title\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    TagBox["\"author\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    TagBox["\"first published\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Harry Potter and the Sorcerer's Stone\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`BookData, "HarryPotterAndTheSorcerersStone"}]], 
                    Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    "\"Harry Potter and the Philosopher's Stone\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], "\"J. K. Rowling\"", 
                    StyleBox[
                    TemplateBox[{
                    FormBox[
                    TagBox["\"1997\"", Identity], TraditionalForm], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["14", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\" \"", 
                    "\"ago\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )], 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Harry Potter and the Chamber of Secrets\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`BookData, "HarryPotterAndTheChamberOfSecrets"}]], 
                    Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    FormBox[
                    TagBox["\"\"", 
                    Global`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                    TraditionalForm], "\"J. K. Rowling\"", 
                    StyleBox[
                    TemplateBox[{
                    FormBox[
                    TagBox["\"1998\"", Identity], TraditionalForm], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["13", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\" \"", 
                    "\"ago\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )], 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Harry Potter and the Prisoner of Azkaban\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`BookData, "HarryPotterAndThePrisonerOfAzkaban"}]], 
                    Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    FormBox[
                    TagBox["\"\"", 
                    Global`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                    TraditionalForm], "\"J. K. Rowling\"", 
                    StyleBox[
                    TemplateBox[{
                    FormBox[
                    TagBox["\"1999\"", Identity], TraditionalForm], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["12", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\" \"", 
                    "\"ago\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )], 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Harry Potter and the Goblet of Fire\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`BookData, "HarryPotterAndTheGobletOfFire"}]], 
                    Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    FormBox[
                    TagBox["\"\"", 
                    Global`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                    TraditionalForm], "\"J. K. Rowling\"", 
                    StyleBox[
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2000\"", Identity], TraditionalForm], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["11", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\" \"", 
                    "\"ago\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )], 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Harry Potter and the Order of the Phoenix\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`BookData, "HarryPotterAndTheOrderOfThePhoenix"}]], 
                    Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    FormBox[
                    TagBox["\"\"", 
                    Global`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                    TraditionalForm], "\"J. K. Rowling\"", 
                    StyleBox[
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2003\"", Identity], TraditionalForm], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["8", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\" \"", 
                    "\"ago\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )], 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Harry Potter and the Half-Blood Prince\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`BookData, "HarryPotterAndTheHalfBloodPrince"}]], 
                    Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    FormBox[
                    TagBox["\"\"", 
                    Global`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                    TraditionalForm], "\"J. K. Rowling\"", 
                    StyleBox[
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2005\"", Identity], TraditionalForm], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["6", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\" \"", 
                    "\"ago\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )], 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Harry Potter and the Deathly Hallows\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`BookData, "HarryPotterAndTheDeathlyHallows"}]], 
                    Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    FormBox[
                    TagBox["\"\"", 
                    Global`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                    TraditionalForm], "\"J. K. Rowling\"", 
                    StyleBox[
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2007\"", Identity], TraditionalForm], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\" \"", 
                    "\"ago\""}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )], 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    LineIndent -> 0]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left, Left, Left}, 
                    "Rows" -> {{Baseline}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}, {1, 3} -> {Center, Baseline}, {
                    1, 4} -> {Center, Baseline}}}, AutoDelete -> False, 
                   GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"\[Null]\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    TagBox["\"publisher\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    TagBox["\"original language\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    TagBox["\"awards\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Harry Potter and the Sorcerer's Stone\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`BookData, "HarryPotterAndTheSorcerersStone"}]], 
                    Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    "\"Levine\"", LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0, StripOnInput -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Scholastic\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], 
                    StyleBox[
                    "\"English\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], 
                    FormBox[
                    TagBox["\"\"", 
                    Global`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                    TraditionalForm]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Harry Potter and the Chamber of Secrets\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`BookData, "HarryPotterAndTheChamberOfSecrets"}]], 
                    Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    "\"Levine\"", LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0, StripOnInput -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Scholastic\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], 
                    StyleBox[
                    "\"English\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], 
                    FormBox[
                    TagBox["\"\"", 
                    Global`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                    TraditionalForm]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Harry Potter and the Prisoner of Azkaban\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`BookData, "HarryPotterAndThePrisonerOfAzkaban"}]], 
                    Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    "\"Levine\"", LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0, StripOnInput -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Scholastic\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], 
                    StyleBox[
                    "\"English\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], 
                    FormBox[
                    TagBox["\"\"", 
                    Global`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                    TraditionalForm]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Harry Potter and the Goblet of Fire\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`BookData, "HarryPotterAndTheGobletOfFire"}]], 
                    Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    "\"Bloomsbury\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Scholastic\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], 
                    StyleBox[
                    "\"English\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], 
                    StyleBox[
                    "\"Hugo Award\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Harry Potter and the Order of the Phoenix\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`BookData, "HarryPotterAndTheOrderOfThePhoenix"}]], 
                    Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    "\"Bloomsbury\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Scholastic\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], 
                    StyleBox[
                    "\"English\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], 
                    FormBox[
                    TagBox["\"\"", 
                    Global`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                    TraditionalForm]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Harry Potter and the Half-Blood Prince\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`BookData, "HarryPotterAndTheHalfBloodPrince"}]], 
                    Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    "\"Bloomsbury\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Scholastic\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], 
                    StyleBox[
                    "\"English\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], 
                    FormBox[
                    TagBox["\"\"", 
                    Global`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                    TraditionalForm]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Harry Potter and the Deathly Hallows\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    Global`BookData, "HarryPotterAndTheDeathlyHallows"}]], 
                    Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    "\"Bloomsbury\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Scholastic\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], 
                    StyleBox[
                    "\"English\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, StripOnInput -> False], 
                    FormBox[
                    TagBox["\"\"", 
                    Global`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                    TraditionalForm]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left, Left, Left}, 
                    "Rows" -> {{Baseline}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}, {1, 3} -> {Center, Baseline}, {
                    1, 4} -> {Center, Baseline}}}, AutoDelete -> False, 
                   GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{
                   Rational[4, 3]}}}], "Column"], TraditionalForm]], 
          "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "Harry Potter", "count" -> "4"}, {
        XMLElement[
        "value", {
         "name" -> "BookClass", "desc" -> "a class of books", "input" -> 
          "*C.Harry+Potter-_*BookClass-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Movie", "desc" -> "a movie", "input" -> 
          "*C.Harry+Potter-_*Movie-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MovieClass", "desc" -> "a class of movies", "input" -> 
          "*C.Harry+Potter-_*MovieClass-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "FictionalCharacter", "desc" -> 
          "referring to a fictional character", "input" -> 
          "*C.Harry+Potter-_*FictionalCharacter-"}, {}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/BookDataSourceInformationNotes.\
html", "text" -> "Book data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
    "Book", "timedout" -> "", "timing" -> "0.498", "parsetiming" -> "0.162", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP67819hci431e7agbgb9000031fh25id01b5hib0&s=58", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP67919hci431e7agbgb90000664bh53a2d159chf&s=58", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 11, 17, 59.0747812`9.523976950011832}, "Line" -> 
    55, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Members", 1, 1, "Output", 
    "{\"Harry Potter and the Sorcerer's Stone\", \"Harry Potter and the \
Chamber of Secrets\", \"Harry Potter and the Prisoner of Azkaban\", \"Harry \
Potter and the Goblet of Fire\", \"Harry Potter and the Order of the \
Phoenix\", \"Harry Potter and the Half-Blood Prince\", \"Harry Potter and the \
Deathly Hallows\"}"}, Typeset`open$$ = True, Typeset`newq$$ = "Harry Potter"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{942., {1398., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"Harry Potter and the Sorcerer's Stone\"\>", 
    ",", "\<\"Harry Potter and the Chamber of Secrets\"\>", 
    ",", "\<\"Harry Potter and the Prisoner of Azkaban\"\>", 
    ",", "\<\"Harry Potter and the Goblet of Fire\"\>", 
    ",", "\<\"Harry Potter and the Order of the Phoenix\"\>", 
    ",", "\<\"Harry Potter and the Half-Blood Prince\"\>", 
    ",", "\<\"Harry Potter and the Deathly Hallows\"\>"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.5272054790874767`*^9}]
}, Open  ]],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Speak \"Mathematica is extrmly stupid\"", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Input", "Input interpretation", 1, 1, "Input", 
        "Speak[\"Mathematica is extrmly stupid\"]"}, "ExtrusionOpen" -> False,
       "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "MInput", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Speak[\"Mathematica is extrmly stupid\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"Speak", "[", 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Mathematica is extrmly stupid\"", SpanMaxSize -> 
                    Automatic, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"expression\"", ShowStringCharacters -> False, 
                    StripOnInput -> False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], {FontSize -> 11}, 
                    ShowStringCharacters -> False, StripOnInput -> False]}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> 1], "Grid"], "]"}], 
              ShowStringCharacters -> True, SpanMaxSize -> 1], 
             ReplaceAll[
              Speak["Mathematica is extrmly stupid"], Labeled -> First], 
             Editable -> False, Selectable -> False], TraditionalForm]], 
          "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/mathematica/ref/Speak.html", 
           "text" -> "Mathematica definition of Speak"}, {}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Example", "scanner" -> "MInput", "id" -> "Example", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Speak[\"Mathematica is extrmly stupid\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"In[1]:=\"", {FontSize -> 8, FontColor -> GrayLevel[0.35]}], 
                StyleBox[
                 StyleBox[
                  
                  RowBox[{
                   "Speak", "[", "\"Mathematica is extrmly stupid\"", "]"}], 
                  ShowStringCharacters -> True], {FontSize -> 11}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Right}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "", "timing" -> "0.446", "parsetiming" -> "0.21", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP154219hci3ehh9ii9gf50000423i0he8fgc72908&s=58", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP154319hci3ehh9ii9gf500003ef3265g654bec06&s=58", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 11, 27, 45.3589609`9.4092379634399}, "Line" -> 
    90, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Input", "Input interpretation", 1, 1, "Input", 
    "Speak[\"Mathematica is extrmly stupid\"]"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Speak \"Mathematica is extrmly stupid\""}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{303., {50., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DateString", "[", "]"}], ",", 
    RowBox[{"Clock", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", "1"}], "]"}]}], "}"}], 
  "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  DynamicBox[ToBoxes[{
     DateString[], 
     Clock[{1, 1}, 1]}, TraditionalForm],
   ImageSizeCache->{156., {2., 9.}}], TraditionalForm]], "Output",
 CellChangeTimes->{3.5272064871841564`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Running Clock", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "MetabolicProperties", "Metabolic properties", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Formula", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"running\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                   GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   ColumnsEqual -> False, RowsEqual -> False, 
                   GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {1, 1}, "Rows" -> {{0.3}}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AllowScriptLevelChange -> False], 
                  Global`TagBoxWrapper["Separator" -> " | "]], 
                 LineSpacing -> {1, 0, 1.5}, LineIndent -> 0]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              ColumnsEqual -> False, RowsEqual -> False, 
              GridBoxSpacings -> {"Columns" -> {{
                   AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
              AllowScriptLevelChange -> False], 
             Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm]], 
          "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Input values", "scanner" -> "Formula", "id" -> 
     "InputValue", "position" -> "150", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"time\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["60", 
                    Global`TagBoxWrapper["StringBoxes" -> "60"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"minutes\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}, "Row", 
                  DisplayFunction -> (#& ), InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )]}, {
                 TagBox[
                  PaneBox[
                  "\"pace\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   StyleBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["8", 
                    Global`TagBoxWrapper["StringBoxes" -> "8"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"min\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mi\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"minutes per mile\"", 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                  DisplayFunction -> (#& ), InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )]}, {
                 TagBox[
                  PaneBox[
                  "\"gender\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 
                 TemplateBox[{"\"male\""}, "Row", DisplayFunction -> (#& ), 
                  InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )]}, {
                 TagBox[
                  PaneBox[
                  "\"body weight\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   StyleBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["72", 
                    Global`TagBoxWrapper["StringBoxes" -> "72"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"kg\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilograms\"", "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                  DisplayFunction -> (#& ), InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, {Left}}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Metabolic properties", "scanner" -> "Formula", "id" -> 
     "MetabolicProperties", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"energy expenditure\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3950", 
                    Global`TagBoxWrapper["StringBoxes" -> "3950"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"kJ\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilojoules\"", "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"fat burned\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.12", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.12"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"kg\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilograms\"", "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"oxygen consumption\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["189", 
                    Global`TagBoxWrapper["StringBoxes" -> "189"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"L\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"liters\"", "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"metabolic equivalent\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["12", 
                    Global`TagBoxWrapper["StringBoxes" -> "12"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"metabolic equivalents\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"estimates based on CDC standards\"", "\[NoBreak]", 
                   "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0, {FontFamily -> "Verdana", FontSize -> 10}, 
                 GrayLevel[0.5], StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "MetabolicProperties__Show non-metric"}, {}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Heart rate", "scanner" -> "Formula", "id" -> 
     "HeartRate", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"estimated heart rate\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["140", 
                    Global`TagBoxWrapper["StringBoxes" -> "140"]], 
                    StyleBox["\"\[MediumSpace]to\[MediumSpace]\"", 
                    GrayLevel[0.6]], 
                    TagBox["192.5", 
                    Global`TagBoxWrapper["StringBoxes" -> "192.5"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}], "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"bpm\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], " ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"beats per minute\"", 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"heart rate reserve\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["124", 
                    Global`TagBoxWrapper["StringBoxes" -> "124"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"bpm\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], " ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"beats per minute\"", 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 GraphicsBox[
                  GraphicsComplexBox[CompressedData["
1:eJw90WtMUwcUwPGuiCSKTN4MGKw8KrAOGWBamJYTNizD8GqBhALr5d7e0jk2
LSwrD3Eb25Q52lQMIA7kkSlQEykwHMONl0LL7FAQDIqQrIibrEBQJAiLjC3p
OcnJyf/r+bHIY0KayWAwJNv733VdnXVjMkKgb2/e7Fa9HL5yoJkqSgC6rE6J
ulMGG9GGwq0tEUQvq1iMBimoyyfs1FQUcH9y8Na35sBB48bGUHsiFFxuAH0r
DcL++46Gdi5sUoMn5/zkQCy3nWw9cwScmEF3tMEyKJ9oekdhToaZONf2OT8a
wsWZLvNTYZAVeeGqgpTD0y/OgIfyfTC1LVV7KmSQ+rrGU2tKgivr0wWpOTTc
+K5LzFsTwqt1wicKkxTYzXXV+ea3Qe1/apj3pRx6RpSslI9jYWTnWHFqhQx6
BnaqhrOSoCKxN1NdRkNACOdWikIIa8/Cf9da0fDBn/wFj2IRBBw+bh0xIIWL
8fypyLUQYHucENZq5OD1ydLZ438J4GDo4OJKkwzMjtFDKR5JYF3cNhpUQ4O4
NMdqLlgIR73ZUQInGjQRRT5anghqFdnKyTEpcCqtOlS/iqDL/fNztTopPGhQ
F3gVh8BTZ6Vbwnk5JPUH/vbykgDW9D1suCKDXUV9g9zVxG2PFpvCRhry3/zG
W7tHCL5dXgWVnjRoTdV8hasI0mzEOt8HUojhs0ZTakVwTKc0LnRLwdE8Xzk8
K4LNr0+JE1qkYPE15quPyGQ0+va7Bj5WPKTQd9R/d0JYGIm+w0PTbrmNUvQd
9nK/MG5Doe+I54HQJ9v/s/i+9z0LfPIo9I1rclgtrSPRN87wR+++AzT6lqb7
O8Y1U+j7LeGi146T6Gv7yI6VISfR19aLZ62Pp9G3kdf8z8wAhb4tUed1/EUS
fTk3NLuWS0n0Xdyh4urjSfQ1x1ItLmIafUMC5Cv7blPoy9uffqlsg0TfXzqS
t3gaEn1LVuM59hkk+mY5G6NLgETfzNn1Qj5Bo+96veFv4ySFvozmn+vfeoVC
39KgjhczVST6xuReZV/LJtGXreIc8hGQ6FtV91HsVASJvvfvabuNHBJ974xd
zE21zkbfa917nxvLJeibMvGDg31NNvo6VZ97NkMT6Fs12Ty/ZMpG37zw13Q1
XQT6dr/Yw/VxIdCXmxZ4e8aGRF+WVaZaOUOgr8yQ5MzgE+jrkFbVXvZQgr5l
LgvvprqT6FtwtKREtkKgb+/+vB3LyQT6EhVmQRiTQF/qtOiu9kcJ+uo+i3up
8SXR18/L7nnWJoG+H84xTzzOINDX9nBJX5Atgb7Xlz4drDFI0Hf3G6GPrjdI
0Pfm5aLp4AASfTeU93TpjGz0jTp0i2siCPQ11ccUs+0J9M1pso48Oy5B3+67
gxmdWgn6ErmNuTerJOjL+H+S0dfSFl9LW3wtbfG19L/QBJVf
                   
                   "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.979781, 0.53441672, 0.448966201], 
                    Opacity[0.7]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{31, 54, 48, 43, 39, 36, 34, 32, 55, 49, 44, 
                    40, 37, 35, 56, 50, 45, 41, 38, 57, 51, 46, 42, 58, 52, 
                    47, 59, 53, 60, 33, 3, 30, 23, 29, 17, 22, 28, 12, 16, 21,
                     27, 8, 11, 15, 20, 26, 5, 7, 10, 14, 19, 25, 2, 4, 6, 9, 
                    13, 18, 24, 1}}]}]}, {}, {}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.97978179598, 0.719233, 0.4866102], 
                    Opacity[0.7]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{61, 84, 78, 73, 69, 66, 64, 62, 85, 79, 74, 
                    70, 67, 65, 86, 80, 75, 71, 68, 87, 81, 76, 72, 88, 82, 
                    77, 89, 83, 90, 63, 33, 60, 53, 59, 47, 52, 58, 42, 46, 
                    51, 57, 38, 41, 45, 50, 56, 35, 37, 40, 44, 49, 55, 32, 
                    34, 36, 39, 43, 48, 54, 31}}]}]}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.97978179, 0.912642, 0.5606622], 
                    Opacity[0.7]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{91, 94, 92, 95, 93, 63, 90, 83, 89, 77, 82, 
                    88, 72, 76, 81, 87, 68, 71, 75, 80, 86, 65, 67, 70, 74, 
                    79, 85, 62, 64, 66, 69, 73, 78, 84, 
                    61}}]}]}, {}, {}}, {{}, {}, {}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    GrayLevel[0.85], 
                    
                    LineBox[{1, 24, 18, 13, 9, 6, 4, 2, 25, 19, 14, 10, 7, 5, 
                    26, 20, 15, 11, 8, 27, 21, 16, 12, 28, 22, 17, 29, 23, 30,
                     3}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    GrayLevel[0.85], 
                    
                    LineBox[{31, 54, 48, 43, 39, 36, 34, 32, 55, 49, 44, 40, 
                    37, 35, 56, 50, 45, 41, 38, 57, 51, 46, 42, 58, 52, 47, 
                    59, 53, 60, 33}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    GrayLevel[0.85], 
                    
                    LineBox[{61, 84, 78, 73, 69, 66, 64, 62, 85, 79, 74, 70, 
                    67, 65, 86, 80, 75, 71, 68, 87, 81, 76, 72, 88, 82, 77, 
                    89, 83, 90, 63}]}, {
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    GrayLevel[0.85], 
                    LineBox[{91, 94, 92, 95, 93}]}}}], {
                  AspectRatio -> 1, AxesOrigin -> {16., 60.}, 
                   BaseStyle -> {CellBaseline -> Baseline}, Epilog -> {
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[1.06], 
                    LineBox[
                    NCache[{{25, 
                    Rational[385, 2]}, {25, 68}}, {{25, 192.5}, {25, 68}}]], 
                    PointSize[Large]}, Frame -> True, FrameLabel -> {{
                    FormBox[
                    TemplateBox[{"\"heart rate \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"bpm\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    "\"\[InvisibleSpace]\""}], "]"}]& )], TraditionalForm], 
                    FormBox["\"exercise intensity\"", TraditionalForm]}, {
                    FormBox[
                    TemplateBox[{"\"age \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"year\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    "\"\[InvisibleSpace]\""}], "]"}]& )], TraditionalForm], 
                    None}}, FrameTicks -> {{{{70, 
                    FormBox["70", TraditionalForm]}, {90, 
                    FormBox["90", TraditionalForm]}, {110, 
                    FormBox["110", TraditionalForm]}, {130, 
                    FormBox["130", TraditionalForm]}, {150, 
                    FormBox["150", TraditionalForm]}, {170, 
                    FormBox["170", TraditionalForm]}, {190, 
                    FormBox["190", TraditionalForm]}, {210, 
                    FormBox["210", TraditionalForm]}}, {{126.19999999999999`, 
                    FormBox[
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["60", 
                    Global`TagBoxWrapper["StringBoxes" -> "60"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], Background -> 
                    GrayLevel[1], FontColor -> GrayLevel[0], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, "Serif", StripOnInput -> False], TraditionalForm]}, {
                    145.60000000000002`, 
                    FormBox[
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["80", 
                    Global`TagBoxWrapper["StringBoxes" -> "80"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], Background -> 
                    GrayLevel[1], FontColor -> GrayLevel[0], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, "Serif", StripOnInput -> False], TraditionalForm]}, {
                    165., 
                    FormBox[
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["100", 
                    Global`TagBoxWrapper["StringBoxes" -> "100"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], Background -> 
                    GrayLevel[1], FontColor -> GrayLevel[0], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, "Serif", StripOnInput -> False], 
                    TraditionalForm]}}}, {{{20, 
                    FormBox["20", TraditionalForm]}, {30, 
                    FormBox["30", TraditionalForm]}, {40, 
                    FormBox["40", TraditionalForm]}, {50, 
                    FormBox["50", TraditionalForm]}, {60, 
                    FormBox["60", TraditionalForm]}, {70, 
                    FormBox["70", TraditionalForm]}, {80, 
                    FormBox["80", TraditionalForm]}}, None}}, 
                   FrameTicksStyle -> {{
                    FontFamily -> "Sans", FontSize -> 9}, {
                    FontFamily -> "Sans", FontSize -> 9}}, 
                   GridLines -> {
                    Automatic, {60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 
                    160, 170, 180, 190, 200, 210, 220}}, GridLinesStyle -> {
                    GrayLevel[0.85], 
                    GrayLevel[0.9]}, 
                   ImagePadding -> {{Automatic, Automatic}, {Automatic, 20}}, 
                   ImageSize -> 227.99999999999997`, 
                   LabelStyle -> {FontFamily -> "Verdana", FontSize -> 11}, 
                   Method -> {"AxesInFront" -> True}, PlotLabel -> 
                   FormBox["\"male\"", TraditionalForm], 
                   PlotRange -> {{16, 80}, {60, 220}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {
                    Scaled[0.02], Automatic}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                   TicksStyle -> 
                   Directive[FontFamily -> "Times", FontSize -> 10]}], 
                 GraphicsBox[
                  GraphicsComplexBox[CompressedData["
1:eJw90X1Q0wUcx/HxkKfIk9BFsYEN0lCURpiAwfqyiAmMGHswbozt9/vtQWZB
PJQgGqBgDYFB8SQJQd44jnGdYYAGqEQ5NYEj0hOplrE4lHZMkAMbCj3c7fu9
+9z33n+/mNT7ApUjjUaT/7v/vs+S6XlHGgs+Yv45uF6sgVIvlWOVggvyAfUV
RocKbJzrR9bXhVBqor9JKyFBV3nLXad4A7KytrF1tQchasRmu9qdDAu8mOO6
WgUIhu56X+8Oh+VrZU+N5RlAWM8VdZ5KhCBnUZu4RQmVt86+nmNJgf76EOpa
OQV7JNLnZibDoP+DPelmZw0slpwCen48/CD/7ZXIABWI/WoYhmk+HFi4sGBw
V8D3Fb2SiGUB+O9rnzA7U7C9o6UxzxIK9ETXqhyOBvpv5DNFmfvhM7ezKwal
Cvq/21BlTOdDYOuxbxkpCghi7bopyhGAZVbzuZhLgWyWPUc/KoSUynsuucMk
fJHEnty3zALe3sf6CFID/lnzn2bf50KBsuwX80kVWLw5V0V0Prgsy1rEuQqQ
nDjoZA4RwM9sXpEug4KayMIAQ4QQIszD8wYzCbvqnc5XXRLCodfWtkd+ScJU
m67A/ygLZoLnWc3ZGuAP7fhxrZ0LluoPk0oaVOBSeGU4fCkZiph8j8UTCsgL
PrnV4CaAuEPRD3ceocAw3cjO8RFCl3sPwV0i4S02c0zULAQTYT19u5sEb8tM
vdEkhOVNbr3NNSTYfZU9DxRNL6jRl/fEv+nrZxToO8Ey/qRWy9E3NbVsTV+t
RF+Ji4NDrpREX9mG8NBWkQp9RU6eSVtCKfQltyz2THxCoC+VXpPAuKBC3/Fi
n0fEGQp9TVV/SwIWCfSdqZtzL/Uj0Hd6Y/QdyX0V+rqz6UbtOIW+DN7T3Qkv
k+j7knD+D4OAQN+3vxrN7xuXo69eVutno6nRd7dfyznGXxT6RgUX+5hiSPTl
vJp9k51JoK+xN2Ob1ZFAX0/rDb3ujBx9y8ovD8W7qdH3kqtMr35Moe+IL7gG
JZPoO8EMHdIWEuh7oH2Hb6Qngb6ssURdQJ8cfR967B+wlcjRN5FrdQn7hkLf
yOg7ubFKAn1b9CK/0ZE09OVwzJcHKkj01VYfd+hKkKGvMfaBMn8rhb5PnE8/
aiqXo6+X77seg5vT0XdTnCVcrKHQ99fWlD7tswT6jokOa8O60tH3nd/lDbHv
SdG305jJjNVR6FuRVVenjiLQd+fiaqzVlo6+PcdmBLRBKfraYqbuahlS9LV9
HNIw0Eah7/Tt3lIxn0DfySF24GiADH2ViUGhJrMUfQ2efhfVsVL05eU1rhqW
0tA3cFbHX+mk0FdXHrfKkxDoywoivAb3ytC3/3z8i6MrUvSlFbA7xKlS9NVP
XZxr2ihF36XNh10H76WhL+3/S0Ffe9t97W33tbfd197/AOs+lZg=
                   
                   "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.979781, 0.53441672, 0.448966201], 
                    Opacity[0.7]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{31, 54, 48, 43, 39, 36, 34, 32, 55, 49, 44, 
                    40, 37, 35, 56, 50, 45, 41, 38, 57, 51, 46, 42, 58, 52, 
                    47, 59, 53, 60, 33, 3, 30, 23, 29, 17, 22, 28, 12, 16, 21,
                     27, 8, 11, 15, 20, 26, 5, 7, 10, 14, 19, 25, 2, 4, 6, 9, 
                    13, 18, 24, 1}}]}]}, {}, {}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.97978179598, 0.719233, 0.4866102], 
                    Opacity[0.7]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{61, 84, 78, 73, 69, 66, 64, 62, 85, 79, 74, 
                    70, 67, 65, 86, 80, 75, 71, 68, 87, 81, 76, 72, 88, 82, 
                    77, 89, 83, 90, 63, 33, 60, 53, 59, 47, 52, 58, 42, 46, 
                    51, 57, 38, 41, 45, 50, 56, 35, 37, 40, 44, 49, 55, 32, 
                    34, 36, 39, 43, 48, 54, 31}}]}]}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.97978179, 0.912642, 0.5606622], 
                    Opacity[0.7]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{91, 94, 92, 95, 93, 63, 90, 83, 89, 77, 82, 
                    88, 72, 76, 81, 87, 68, 71, 75, 80, 86, 65, 67, 70, 74, 
                    79, 85, 62, 64, 66, 69, 73, 78, 84, 
                    61}}]}]}, {}, {}}, {{}, {}, {}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    GrayLevel[0.85], 
                    
                    LineBox[{1, 24, 18, 13, 9, 6, 4, 2, 25, 19, 14, 10, 7, 5, 
                    26, 20, 15, 11, 8, 27, 21, 16, 12, 28, 22, 17, 29, 23, 30,
                     3}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    GrayLevel[0.85], 
                    
                    LineBox[{31, 54, 48, 43, 39, 36, 34, 32, 55, 49, 44, 40, 
                    37, 35, 56, 50, 45, 41, 38, 57, 51, 46, 42, 58, 52, 47, 
                    59, 53, 60, 33}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    GrayLevel[0.85], 
                    
                    LineBox[{61, 84, 78, 73, 69, 66, 64, 62, 85, 79, 74, 70, 
                    67, 65, 86, 80, 75, 71, 68, 87, 81, 76, 72, 88, 82, 77, 
                    89, 83, 90, 63}]}, {
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    GrayLevel[0.85], 
                    LineBox[{91, 94, 92, 95, 93}]}}}], {
                  AspectRatio -> 1, AxesOrigin -> {16., 60.}, 
                   BaseStyle -> {CellBaseline -> Baseline}, Epilog -> {
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[1.06], 
                    LineBox[{{25, 195}, {25, 68}}], 
                    PointSize[Large]}, Frame -> True, FrameLabel -> {{
                    FormBox[
                    TemplateBox[{"\"heart rate \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"bpm\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    "\"\[InvisibleSpace]\""}], "]"}]& )], TraditionalForm], 
                    FormBox["\"exercise intensity\"", TraditionalForm]}, {
                    FormBox[
                    TemplateBox[{"\"age \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"year\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    "\"\[InvisibleSpace]\""}], "]"}]& )], TraditionalForm], 
                    None}}, FrameTicks -> {{{{70, 
                    FormBox["70", TraditionalForm]}, {90, 
                    FormBox["90", TraditionalForm]}, {110, 
                    FormBox["110", TraditionalForm]}, {130, 
                    FormBox["130", TraditionalForm]}, {150, 
                    FormBox["150", TraditionalForm]}, {170, 
                    FormBox["170", TraditionalForm]}, {190, 
                    FormBox["190", TraditionalForm]}, {210, 
                    FormBox["210", TraditionalForm]}}, {{111.19999999999999`, 
                    FormBox[
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["60", 
                    Global`TagBoxWrapper["StringBoxes" -> "60"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], Background -> 
                    GrayLevel[1], FontColor -> GrayLevel[0], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, "Serif", StripOnInput -> False], TraditionalForm]}, {
                    125.6, 
                    FormBox[
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["80", 
                    Global`TagBoxWrapper["StringBoxes" -> "80"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], Background -> 
                    GrayLevel[1], FontColor -> GrayLevel[0], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, "Serif", StripOnInput -> False], TraditionalForm]}, {
                    140., 
                    FormBox[
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["100", 
                    Global`TagBoxWrapper["StringBoxes" -> "100"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "Row", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", #, "}"}], "]"}]& )], Background -> 
                    GrayLevel[1], FontColor -> GrayLevel[0], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, "Serif", StripOnInput -> False], 
                    TraditionalForm]}}}, {{{20, 
                    FormBox["20", TraditionalForm]}, {30, 
                    FormBox["30", TraditionalForm]}, {40, 
                    FormBox["40", TraditionalForm]}, {50, 
                    FormBox["50", TraditionalForm]}, {60, 
                    FormBox["60", TraditionalForm]}, {70, 
                    FormBox["70", TraditionalForm]}, {80, 
                    FormBox["80", TraditionalForm]}}, None}}, 
                   FrameTicksStyle -> {{
                    FontFamily -> "Sans", FontSize -> 9}, {
                    FontFamily -> "Sans", FontSize -> 9}}, 
                   GridLines -> {
                    Automatic, {60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 
                    160, 170, 180, 190, 200, 210, 220}}, GridLinesStyle -> {
                    GrayLevel[0.85], 
                    GrayLevel[0.9]}, 
                   ImagePadding -> {{Automatic, Automatic}, {Automatic, 20}}, 
                   ImageSize -> 227.99999999999997`, 
                   LabelStyle -> {FontFamily -> "Verdana", FontSize -> 11}, 
                   Method -> {"AxesInFront" -> True}, PlotLabel -> 
                   FormBox["\"female\"", TraditionalForm], 
                   PlotRange -> {{16, 80}, {60, 220}}, PlotRangeClipping -> 
                   True, PlotRangePadding -> {
                    Scaled[0.02], Automatic}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                   TicksStyle -> 
                   Directive[FontFamily -> "Times", FontSize -> 10]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show larger plots", "input" -> 
         "HeartRate__Show larger plots"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement[
           "unit", {"short" -> "bpm", "long" -> "beats per minute"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"bpm\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"beats per minute\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}}, "Rows" -> {{0.5}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False], TraditionalForm]], "Output"]}]}]}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Equivalent activities", "scanner" -> "Formula", "id" -> 
     "EquivalentActivities", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"\"\[TildeTilde] \"", 
              StyleBox[
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["52", 
                    Global`TagBoxWrapper["StringBoxes" -> "52"]], 
                   "\[InvisibleSpace]", " ", 
                   StyleBox[
                   "\"minutes\"", LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
               0, ZeroWidthTimes -> False], 
              StyleBox[
              "\" \"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0, StripOnInput -> False], 
              StyleBox[
              "\"competitive speed skating\"", 
               LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, {
               FontFamily -> "Helvetica", FontSize -> Smaller}, StripOnInput -> 
               False]}, "Row", 
             DisplayFunction -> (
              RowBox[{#, "\[InvisibleSpace]", #2, "\[InvisibleSpace]", #3, 
                "\[InvisibleSpace]", #4}]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Row", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                  "\"\[InvisibleSpace]\""}], "]"}]& )], TraditionalForm]], 
          "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"\"\[TildeTilde] \"", 
              StyleBox[
               RowBox[{
                 RowBox[{"5", "\[InvisibleSpace]", " ", 
                   StyleBox[
                   "\"hours\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], 
                 TemplateBox[{" "}, " "& , DisplayFunction -> (#& )], 
                 RowBox[{"14", "\[InvisibleSpace]", " ", 
                   StyleBox[
                   "\"minutes\"", LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}]}], AutoMultiplicationSymbol -> 
               False], 
              StyleBox[
              "\" \"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0, StripOnInput -> False], 
              StyleBox[
              "\"playing the piano\"", 
               LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, {
               FontFamily -> "Helvetica", FontSize -> Smaller}, StripOnInput -> 
               False]}, "Row", 
             DisplayFunction -> (
              RowBox[{#, "\[InvisibleSpace]", #2, "\[InvisibleSpace]", #3, 
                "\[InvisibleSpace]", #4}]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Row", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                  "\"\[InvisibleSpace]\""}], "]"}]& )], TraditionalForm]], 
          "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"\"\[TildeTilde] \"", 
              StyleBox[
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["13", 
                    Global`TagBoxWrapper["StringBoxes" -> "13"]], 
                   "\[InvisibleSpace]", " ", 
                   StyleBox[
                   "\"hours\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
               0, ZeroWidthTimes -> False], 
              StyleBox[
              "\" \"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0, StripOnInput -> False], 
              StyleBox[
              "\"sitting in a whirlpool\"", 
               LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, {
               FontFamily -> "Helvetica", FontSize -> Smaller}, StripOnInput -> 
               False]}, "Row", 
             DisplayFunction -> (
              RowBox[{#, "\[InvisibleSpace]", #2, "\[InvisibleSpace]", #3, 
                "\[InvisibleSpace]", #4}]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Row", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                  "\"\[InvisibleSpace]\""}], "]"}]& )], TraditionalForm]], 
          "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Speed", "scanner" -> "Formula", "id" -> "Speed", 
     "position" -> "500", "error" -> "false", "numsubpods" -> "4"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["12.07", 
                    Global`TagBoxWrapper["StringBoxes" -> "12.07"]], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"h\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", "\"kilometers per hour\"", 
                  "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["0.2012", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.2012"]], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"min\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                SyntaxForm -> Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", "\"kilometers per minute\"", 
                  "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["3.353", 
                    Global`TagBoxWrapper["StringBoxes" -> "3.353"]], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    
                    RowBox[{
                    "\"m\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", "\"meters per second\"", "\[NoBreak]",
                   "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, {
                FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["0.2861", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.2861"]], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    
                    RowBox[{
                    "\"lengths of a marathon race\"", "\[InvisibleSpace]", 
                    "\"/\"", "\[InvisibleSpace]", "\"hr\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                SyntaxForm -> Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", 
                  "\"lengths of a marathon race per hour\"", "\[NoBreak]", 
                  "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, {
                FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show comparisons", "input" -> 
         "Speed__Show comparisons"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "Speed__Show non-metric"}, {}]}]}], Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Pace", "scanner" -> "Formula", "id" -> "Pace", 
     "position" -> "600", "error" -> "false", "numsubpods" -> "4"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["0.08285", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.08285"]], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    
                    RowBox[{
                    "\"hr\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"km\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                SyntaxForm -> Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", "\"hours per kilometer\"", 
                  "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["4.971", 
                    Global`TagBoxWrapper["StringBoxes" -> "4.971"]], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    
                    RowBox[{
                    "\"min\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"km\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                SyntaxForm -> Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", "\"minutes per kilometer\"", 
                  "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["0.2983", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.2983"]], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    
                    RowBox[{
                    "\"s\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"m\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", "\"seconds per meter\"", "\[NoBreak]",
                   "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, {
                FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["3.496", 
                    Global`TagBoxWrapper["StringBoxes" -> "3.496"]], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    
                    RowBox[{
                    "\"hr\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"length of a marathon race\""}], 
                    FontFamily -> "Helvetica", FontSize -> Smaller]}], 
                 Identity], #& , SyntaxForm -> Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", 
                  "\"hours per length of a marathon race\"", "\[NoBreak]", 
                  "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, {
                FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show comparisons", "input" -> 
         "Pace__Show comparisons"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "Pace__Show non-metric"}, {}]}]}], Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Distance", "scanner" -> "Formula", "id" -> "Distance", 
     "position" -> "700", "error" -> "false", "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox[
                 RowBox[{
                   TagBox["12.07", 
                    Global`TagBoxWrapper["StringBoxes" -> "12.07"]], 
                   "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                   "\[InvisibleSpace]", 
                   StyleBox[
                   "\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], " ", 
               StyleBox[
                
                RowBox[{
                 "\"(\"", "\[NoBreak]", "\"kilometers\"", "\[NoBreak]", 
                  "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, {
                FontFamily -> "Helvetica", FontSize -> Smaller}, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               RowBox[{
                 TagBox["12\[ThinSpace]070", 
                  Global`TagBoxWrapper["StringBoxes" -> "12070"]], 
                 "\[InvisibleSpace]", " ", 
                 StyleBox[
                 "\"meters\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, {
                  FontFamily -> "Helvetica", FontSize -> Smaller}, 
                  StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
              Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
             0, ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               RowBox[{
                 TagBox["0.2861", 
                  Global`TagBoxWrapper["StringBoxes" -> "0.2861"]], 
                 "\[InvisibleSpace]", " ", 
                 StyleBox[
                 "\"lengths of a marathon race\"", 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                  StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
              Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
             0, ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "Distance__Show non-metric"}, {}]}]}], Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Steps taken", "scanner" -> "Formula", "id" -> 
     "StepCount", "position" -> "800", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               RowBox[{
                 TagBox["16620", #& ], "\[InvisibleSpace]", " ", 
                 StyleBox[
                 "\"steps\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, {
                  FontFamily -> "Helvetica", FontSize -> Smaller}, 
                  StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
              Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
             0, ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Time", "scanner" -> "Formula", "id" -> "Time", 
     "position" -> "900", "error" -> "false", "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               RowBox[{
                 TagBox["1", 
                  Global`TagBoxWrapper["StringBoxes" -> "1"]], 
                 "\[InvisibleSpace]", " ", 
                 StyleBox[
                 "\"hour\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, {
                  FontFamily -> "Helvetica", FontSize -> Smaller}, 
                  StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
              Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
             0, ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               RowBox[{
                 TagBox["3600", 
                  Global`TagBoxWrapper["StringBoxes" -> "3600"]], 
                 "\[InvisibleSpace]", " ", 
                 StyleBox[
                 "\"seconds\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, {
                  FontFamily -> "Helvetica", FontSize -> Smaller}, 
                  StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
              Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
             0, ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               RowBox[{
                 TagBox["60", 
                  Global`TagBoxWrapper["StringBoxes" -> "60"]], 
                 "\[InvisibleSpace]", " ", 
                 StyleBox[
                 "\"minutes\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, {
                  FontFamily -> "Helvetica", FontSize -> Smaller}, 
                  StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
              Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
             0, ZeroWidthTimes -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod11$$ = XMLElement[
   "pod", {"title" -> "Performance predictions", "scanner" -> "Formula", "id" -> 
     "PerformancePredictions", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"race\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"finish time\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"average speed\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"average pace\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]]}, {
                    TagBox[
                    PaneBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["100", 
                    Global`TagBoxWrapper["StringBoxes" -> "100"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"m\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["19.6", 
                    Global`TagBoxWrapper["StringBoxes" -> "19.6"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"s\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5.1", 
                    Global`TagBoxWrapper["StringBoxes" -> "5.1"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"m\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.2", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.2"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"s\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"m\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["400", 
                    Global`TagBoxWrapper["StringBoxes" -> "400"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"m\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"1", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"min\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], 
                    TemplateBox[{"  "}, " "& , DisplayFunction -> (#& )], 
                    RowBox[{"32", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"s\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}]}], AutoMultiplicationSymbol -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4.3", 
                    Global`TagBoxWrapper["StringBoxes" -> "4.3"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"m\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.2", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.2"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"s\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"m\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", #& ], "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mi\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\" \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.61", 
                    Global`TagBoxWrapper["StringBoxes" -> "1.61"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"7", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"min\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], 
                    TemplateBox[{"  "}, " "& , DisplayFunction -> (#& )], 
                    RowBox[{"2", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"s\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}]}], AutoMultiplicationSymbol -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3.8", 
                    Global`TagBoxWrapper["StringBoxes" -> "3.8"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"m\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.3", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.3"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"s\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"m\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["10", 
                    Global`TagBoxWrapper["StringBoxes" -> "10"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["49", 
                    Global`TagBoxWrapper["StringBoxes" -> "49"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"min\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.2", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.2"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"min\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4.92", 
                    Global`TagBoxWrapper["StringBoxes" -> "4.92"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"min\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"km\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TemplateBox[{"\"marathon\"", "\" \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["42.2", 
                    Global`TagBoxWrapper["StringBoxes" -> "42.2"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"3", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"hr\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], 
                    TemplateBox[{"  "}, " "& , DisplayFunction -> (#& )], 
                    RowBox[{"47", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    "\"min\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}]}], AutoMultiplicationSymbol -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.19", 
                    Global`TagBoxWrapper["StringBoxes" -> "0.19"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"min\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5.38", 
                    Global`TagBoxWrapper["StringBoxes" -> "5.38"]], 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"min\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"km\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left, Left, Left}, 
                    "Rows" -> {{Baseline}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}, {1, 3} -> {Center, Baseline}, {
                    1, 4} -> {Center, Baseline}}}, AutoDelete -> False, 
                   GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"based on Riegel and Cameron models\"", "\[NoBreak]", 
                   "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0, {FontFamily -> "Verdana", FontSize -> 10}, 
                 GrayLevel[0.5], StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "PerformancePredictions__Show non-metric"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "PerformancePredictions__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "10"}, {
           XMLElement["unit", {"short" -> "hr", "long" -> "hours"}, {}], 
           XMLElement["unit", {"short" -> "km", "long" -> "kilometers"}, {}], 
           XMLElement[
           "unit", {
            "short" -> "km/min", "long" -> "kilometers per minute"}, {}], 
           XMLElement["unit", {"short" -> "mi", "long" -> "miles"}, {}], 
           XMLElement[
           "unit", {
            "short" -> "min/km", "long" -> "minutes per kilometer"}, {}], 
           XMLElement["unit", {"short" -> "min", "long" -> "minutes"}, {}], 
           XMLElement["unit", {"short" -> "m", "long" -> "meters"}, {}], 
           XMLElement[
           "unit", {"short" -> "m/s", "long" -> "meters per second"}, {}], 
           XMLElement[
           "unit", {"short" -> "s/m", "long" -> "seconds per meter"}, {}], 
           XMLElement["unit", {"short" -> "s", "long" -> "seconds"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"hr\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"hours\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"km\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"kilometers\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    
                    RowBox[{
                    "\"km\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"min\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"kilometers per minute\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"mi\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"miles\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    
                    RowBox[{
                    "\"min\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"km\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"minutes per kilometer\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"min\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"minutes\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"m\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"meters\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    
                    RowBox[{
                    "\"m\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"meters per second\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    
                    RowBox[{
                    "\"s\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"m\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"seconds per meter\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"s\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 10, StripOnInput -> False], 
                    StyleBox[
                    "\"seconds\"", FontSize -> 10, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    GrayLevel[0.6], StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}}, "Rows" -> {{0.5}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False], TraditionalForm]], "Output"]}]}]}]}]}], 
   Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, 
   Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, 
   Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, 
   Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, 
   Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
   Typeset`pod32$$, Typeset`aux1$$ = {True, False, {False}, True}, 
   Typeset`aux2$$ = {True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`aux8$$ = {True, False, {False}, True}, Typeset`aux9$$ = {
   True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "8"}, {
      XMLElement[
      "assumption", {"type" -> "Clash", "word" -> "running", "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "Formula", "desc" -> "a formula", "input" -> 
          "*C.running-_*Formula-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "*C.running-_*Word-"}, {}]}], 
      XMLElement["assumption", {"type" -> "FormulaSolve", "count" -> "3"}, {
        XMLElement[
        "value", {
         "name" -> "Running.d", "desc" -> "distance", "input" -> 
          "*FS-_**Running.d--"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Running.t", "desc" -> "time", "input" -> 
          "*FS-_**Running.t--"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Running.p", "desc" -> "pace", "input" -> 
          "*FS-_**Running.p--"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "desc" -> "time", "current" -> "1", 
        "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "Running.t", "desc" -> "60 min", "valid" -> "true", 
          "input" -> "*F.Running.t-_60+min"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "desc" -> "pace", "current" -> "1", 
        "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "Running.p", "desc" -> "8 min/mi", "valid" -> "true", 
          "input" -> "*F.Running.p-_8+min%2Fmi"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "desc" -> "gender", "current" -> "1", 
        "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "Gender:Male", "desc" -> "male", "valid" -> "true", 
          "input" -> "*FP.Running.S-_Gender%3AMale"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Gender:Female", "desc" -> "female", "valid" -> "true", 
          "input" -> "*FP.Running.S-_Gender%3AFemale"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "desc" -> "body weight", "current" -> "1",
         "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "Running.W", "desc" -> "72 kg", "valid" -> "true", "input" -> 
          "*F.Running.W-_72+kg"}, {}]}], 
      XMLElement[
      "assumption", {"type" -> "FormulaVariableOption", "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "Running.p", "desc" -> "pace", "input" -> 
          "*FVarOpt-_**Running.p--"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Running.v", "desc" -> "speed", "input" -> 
          "*FVarOpt-_**Running.v--"}, {}]}], 
      XMLElement[
      "assumption", {"type" -> "FormulaVariableInclude", "count" -> "3"}, {
        XMLElement[
        "value", {
         "name" -> "Running.age,Running.H", "desc" -> "age and height", 
          "input" -> 
          "*FVarOpt-_**Running.age-.*Running.H-.*Running.p--"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Running.incline", "desc" -> "incline", "input" -> 
          "*FVarOpt-_**Running.incline-.*Running.p--"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Running.HRResting", "desc" -> "resting heart rate", 
          "input" -> "*FVarOpt-_**Running.HRResting-.*Running.p--"}, {}]}]}], 
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "running"}, {
        XMLElement["alternative", {}, {"Clock"}]}]}]}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
     "Formula", "timedout" -> "Formula", "timing" -> "4.164", "parsetiming" -> 
     "0.133", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4b.wolframalpha.com/api/v2/recalc.jsp?id=\
MSP114619hci4f160aghd5b00004846ch5cfeg0866g&s=18", "id" -> 
     "MSP114719hci4f160aghd5b0000543107g8ae7594i7&s=18", "related" -> 
     "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP114819hci4f160aghd5b0000504f6db2g081dg7f&s=18", "version" -> "2.1"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "9", "datatypes" -> 
     "Formula", "timedout" -> "", "timing" -> "5.63", "parsetiming" -> "0.", 
     "parsetimedout" -> "false", "recalculate" -> "", "id" -> "", "related" -> 
     "", "version" -> "2.1"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 11, 35, 36.9048594`9.319658446061727}, "Line" -> 
    116, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9, 10, 11}, Typeset`failedpods$$ = {12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}, 
   Typeset`chosen$$ = {
   "MetabolicProperties", "Metabolic properties", 1, 1, "Content"}, 
   Typeset`open$$ = False, Typeset`newq$$ = "Running Clock"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
         Typeset`pod32$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{155., {48., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
          Typeset`pod32$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$},
          Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www4b.wolframalpha.com/api/v2/recalc.jsp?id=\
MSP114619hci4f160aghd5b00004846ch5cfeg0866g&s=18", Typeset`asyncpods$$}]]; 
     Typeset`asyncpods$$ = {}; Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   FrameBox[
    StyleBox[
     FormBox[
      StyleBox[GridBox[{
         {
          StyleBox[
           StyleBox[GridBox[{
              {
               PaneBox["\<\"energy expenditure\"\>",
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                BaselinePosition->Baseline], 
               StyleBox[
                RowBox[{
                "3950", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                 "\[ThickSpace]", "\[InvisibleSpace]", 
                 StyleBox["\<\"kJ\"\>",
                  FontFamily->"Helvetica",
                  FontSize->Smaller], "  ", 
                 StyleBox[
                  
                  RowBox[{"\<\"(\"\>", "\[NoBreak]", "\<\"kilojoules\"\>", 
                   "\[NoBreak]", "\<\")\"\>"}],
                  StripOnInput->False,
                  LineIndent->0,
                  LinebreakAdjustments->{1, 100, 1, 0, 100},
                  LineColor->GrayLevel[0.6],
                  FrontFaceColor->GrayLevel[0.6],
                  BackFaceColor->GrayLevel[0.6],
                  GraphicsColor->GrayLevel[0.6],
                  FontFamily->"Helvetica",
                  FontSize->Smaller,
                  FontColor->GrayLevel[0.6]]}],
                ZeroWidthTimes->False,
                LineIndent->0,
                LinebreakAdjustments->{1, 100, 1, 0, 100}]},
              {
               PaneBox["\<\"fat burned\"\>",
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                BaselinePosition->Baseline], 
               StyleBox[
                RowBox[{
                "0.12", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                 "\[ThickSpace]", "\[InvisibleSpace]", 
                 StyleBox["\<\"kg\"\>",
                  FontFamily->"Helvetica",
                  FontSize->Smaller], "  ", 
                 StyleBox[
                  
                  RowBox[{"\<\"(\"\>", "\[NoBreak]", "\<\"kilograms\"\>", 
                   "\[NoBreak]", "\<\")\"\>"}],
                  StripOnInput->False,
                  LineIndent->0,
                  LinebreakAdjustments->{1, 100, 1, 0, 100},
                  LineColor->GrayLevel[0.6],
                  FrontFaceColor->GrayLevel[0.6],
                  BackFaceColor->GrayLevel[0.6],
                  GraphicsColor->GrayLevel[0.6],
                  FontFamily->"Helvetica",
                  FontSize->Smaller,
                  FontColor->GrayLevel[0.6]]}],
                ZeroWidthTimes->False,
                LineIndent->0,
                LinebreakAdjustments->{1, 100, 1, 0, 100}]},
              {
               PaneBox["\<\"oxygen consumption\"\>",
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                BaselinePosition->Baseline], 
               StyleBox[
                RowBox[{
                "189", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                 "\[ThickSpace]", "\[InvisibleSpace]", 
                 StyleBox["\<\"L\"\>",
                  FontFamily->"Helvetica",
                  FontSize->Smaller], "  ", 
                 StyleBox[
                  
                  RowBox[{"\<\"(\"\>", "\[NoBreak]", "\<\"liters\"\>", 
                   "\[NoBreak]", "\<\")\"\>"}],
                  StripOnInput->False,
                  LineIndent->0,
                  LinebreakAdjustments->{1, 100, 1, 0, 100},
                  LineColor->GrayLevel[0.6],
                  FrontFaceColor->GrayLevel[0.6],
                  BackFaceColor->GrayLevel[0.6],
                  GraphicsColor->GrayLevel[0.6],
                  FontFamily->"Helvetica",
                  FontSize->Smaller,
                  FontColor->GrayLevel[0.6]]}],
                ZeroWidthTimes->False,
                LineIndent->0,
                LinebreakAdjustments->{1, 100, 1, 0, 100}]},
              {
               PaneBox["\<\"metabolic equivalent\"\>",
                
                BaseStyle->{{
                  BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
                  LineSpacing -> {0.9, 0, 1.5}, 
                  LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                  TextAlignment -> Left},
                BaselinePosition->Baseline], 
               StyleBox[
                RowBox[{"12", "\[InvisibleSpace]", " ", 
                 StyleBox["\<\"metabolic equivalents\"\>",
                  StripOnInput->False,
                  LineIndent->0,
                  LinebreakAdjustments->{1, 100, 1, 0, 100},
                  FontFamily->"Helvetica",
                  FontSize->Smaller]}],
                ZeroWidthTimes->False,
                LineIndent->0,
                LinebreakAdjustments->{1, 100, 1, 0, 100}]}
             },
             AllowScriptLevelChange->False,
             AutoDelete->False,
             BaselinePosition->Automatic,
             FrameStyle->GrayLevel[0.84],
             
             GridBoxAlignment->{
              "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}},
             GridBoxBackground->{"Columns" -> {None, None}},
             GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}], 
            "Grid"],
           StripOnInput->False,
           LineSpacing->{0.9, 0, 1.5},
           LineIndent->0]},
         {
          StyleBox[
           
           RowBox[{"\<\"(\"\>", 
            "\[NoBreak]", "\<\"estimates based on CDC standards\"\>", 
            "\[NoBreak]", "\<\")\"\>"}],
           StripOnInput->False,
           LineIndent->0,
           LinebreakAdjustments->{1, 100, 1, 0, 100},
           LineColor->GrayLevel[0.5],
           FrontFaceColor->GrayLevel[0.5],
           BackFaceColor->GrayLevel[0.5],
           GraphicsColor->GrayLevel[0.5],
           FontFamily->"Verdana",
           FontSize->10,
           FontColor->GrayLevel[0.5]]}
        },
        AllowScriptLevelChange->False,
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TraditionalForm], "Output",
     ScriptLevel->0,
     FontFamily->"Times",
     FontSize->14,
     Background->None],
    BaseStyle->{Plain},
    FrameMargins->10,
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   WolframAlphaResult[
   "Running Clock", {{"MetabolicProperties", 1}, "Content"}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.5272065073404064`*^9, 3.5272065393823986`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "give me some instance", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Definition:WordData", "Definitions", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"WordData[\"instance\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               TemplateBox[{
                 TagBox[
                  TagBox["\"instance\"", 
                   Global`TagBoxWrapper["Entity" -> {WordData, "instance"}]], 
                  Identity], 
                 StyleBox[
                  
                  RowBox[{
                   "\"(\"", "\[NoBreak]", "\"English word\"", "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, 
                  GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                DisplayFunction -> (RowBox[{#, " ", #2}]& ), 
                InterpretationFunction -> (RowBox[{
                   TagBox[
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], HoldForm], "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", "\" \""}], "]"}]& )], 
               LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
               StripOnInput -> False], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Definitions", "scanner" -> "Data", "id" -> 
     "Definition:WordData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox[
                    "1", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   Global`TagBoxWrapper["Label"]], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox[
                    "\"noun\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   Global`TagBoxWrapper["Label"]], 
                  Global`TagBoxWrapper["Label"]], 
                 "\"an occurrence of something\""}, {
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox[
                    "2", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   Global`TagBoxWrapper["Label"]], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox[
                    "\"noun\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   Global`TagBoxWrapper["Label"]], 
                  Global`TagBoxWrapper["Label"]], 
                 "\"an item of information that is typical of a class or \
group\""}, {
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox[
                    "3", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   Global`TagBoxWrapper["Label"]], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                  TagBox[
                   PaneBox[
                    StyleBox[
                    "\"verb\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                   Global`TagBoxWrapper["Label"]], 
                  Global`TagBoxWrapper["Label"]], 
                 "\"clarify by giving an example of\""}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{{Top}, {Bottom}}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {
                "Columns" -> None, "Rows" -> {{True}}, 
                 "ItemsIndexed" -> {{{1, -1}, {1, -1}} -> None}}, 
               GridBoxItemSize -> {"Columns" -> {
                   Scaled[0.045], Automatic, Automatic}}, 
               GridBoxSpacings -> {
                "Columns" -> {0, 0, 0.8, 0}, "Rows" -> {{1}}}, FrameStyle -> 
               GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show examples", "input" -> 
         "Definition:WordData__Show examples"}, {}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {"title" -> "American pronunciation", "scanner" -> "Data", "id" -> 
     "Pronunciation:WordData", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"'instuhns\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, StripOnInput -> False], "\" \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{
                    StyleBox[
                    "\"IPA\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, 
                    GrayLevel[0.6], "SmallText", StripOnInput -> False], 
                    "\": \"", "\"\:02c8\:026anst\:0259ns\""}, "Row", 
                   DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                   InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                    "\"\[InvisibleSpace]\""}], "]"}]& )], "\[NoBreak]", 
                  "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, {FontFamily -> "Verdana", FontSize -> 10}, 
                GrayLevel[0.5], StripOnInput -> False]}, "Row", 
              DisplayFunction -> (
               RowBox[{#, "\[InvisibleSpace]", #2, 
                 "\[InvisibleSpace]", #3}]& ), 
              InterpretationFunction -> (RowBox[{
                 StyleBox[
                 "Row", FontFamily -> "Bitstream Vera Sans", 
                  FontSize -> -1 + Inherited], "[", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
             LineIndent -> 0], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Hyphenation", "scanner" -> "Data", "id" -> 
     "Hyphenation:WordData", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TemplateBox[{
                StyleBox[
                 RowBox[{"\"in\"", 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox[
                    "\"\[Hyphen]\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                    True], "\"stance\""}], 
                 LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0, 
                 ZeroWidthTimes -> True]}, "Row", DisplayFunction -> (#& ), 
               InterpretationFunction -> (RowBox[{
                  StyleBox[
                  "Row", FontFamily -> "Bitstream Vera Sans", 
                   FontSize -> -1 + Inherited], "[", 
                  RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\"\[InvisibleSpace]\""}], 
                  "]"}]& )], 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{
                   StyleBox[
                    RowBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["8", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"letters\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox[
                    StyleBox[
                    "\" | \"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False], 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                    True], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"syllables\"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0]}, "Row", DisplayFunction -> (#& ), 
                  InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\"\[InvisibleSpace]\""}], 
                    "]"}]& )], "\[NoBreak]", "\")\""}], 
               LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
               GrayLevel[0.6], StripOnInput -> False]}, "Row", 
             DisplayFunction -> (RowBox[{#, " ", #2}]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Row", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", "\" \""}], "]"}]& )], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "First known use in English", "scanner" -> "Data", "id" -> 
     "FirstRecordYear:WordData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              FormBox[
               TagBox["\"1340\"", Identity], TraditionalForm], 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TagBox[
                  TagBox["\"High Middle ages\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {
                    Global`HistoricalPeriodData, "HighMiddleAges"}]], 
                  Identity], "\[NoBreak]", "\")\""}], 
               LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
               GrayLevel[0.6], StripOnInput -> False], 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["671", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], Identity], #& , SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\" ago\""}, 
                  "Row", DisplayFunction -> (
                   RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                  InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    "\"\[InvisibleSpace]\""}], "]"}]& )], "\[NoBreak]", 
                 "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0, {FontFamily -> "Verdana", FontSize -> 10}, 
               GrayLevel[0.5], StripOnInput -> False]}, "Row", 
             DisplayFunction -> (RowBox[{#, " ", #2, " ", #3}]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Row", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", "\" \""}], 
                "]"}]& )], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Word origins", "scanner" -> "Data", "id" -> 
     "LanguageOrigin:WordData", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
               "\"Old French\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, StripOnInput -> False], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
               "\"Latin\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, StripOnInput -> False], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
               "\"Medieval Latin\"", 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
                StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Word frequency history", "scanner" -> "Data", "id" -> 
     "BookMatchFrequency:WordData", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[
               GraphicsComplexBox[CompressedData["
1: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
eZ71iA==
                "], {{{}, {
                   EdgeForm[], 
                   Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                   GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 847, 662, 757, 419, 523, 9, 202, 8, 7, 6, 
                    5, 4, 3, 2, 201}}], 
                    PolygonBox[CompressedData["
1:eJwl1nnc1lMexvGnJ0lmQYtK+160ad83CiNUClHaLZUykhnZRpIhpUWkPVsk
UUNmxLSQGkz7QokMWQplGduQeV8vf3xen/N8z3XO/bt/Z7mfaoNH9xpVWFBQ
UAS/LVpQcCx6YKO/2ypu4Db8Gp+vvl+4Ao/lZTgeXfCwzFtojdFYL7+IW2G4
/iPcwbi1GcMteQpGqb+EV+Vb8itcQn2hdje5ndqluD8/gt3q9bgFX4N18gu4
OQ5jJN7Ufz5OM242f4dV6uV4rXwz7TU8n5viC4zAefpf5JbGPa9dlMvybVgt
30TfP3ken4531K9GE7klfBSfq7fg4fwPvCzfON+R53IjXKX/M25v3BrtEtyc
J2c+9b9jlXxDfpGvVz8OG9EZ9eRn8jeYI7MLDTJvPlO+fubg4vpna3eV36Fd
kvtlrbBTvW7eEV+JF+RP5ZV8rPpD2tv5MjQ2bhH/hB3qdfIMfAWel5+VuXAI
w9Bd/wv8HJ+Mysbfyh/hOfk6+v7GD3JtHMRQnKt/Zfq4DCoZdwsfwAr5WvqW
8wNcM8+t/im3k1udd8TN+F4MybPhWfka/AzP5Op5bv2fZC25KWoaN4kPY3Ce
G8vkq/HTXEz9fu1tfCkayS/k/2F7vgNX5UFYKl+Fn+Jj1Gdob+W+aGjcAv4R
29Rr5d3wQCyRr8RPclH16dqX8NacKeNWaRfjmnwXKqoPwBPyFXgxF6pP076Y
t2TvcA1UN25i9hxOUb8cj8uX58dy9tWnal/Em7OHMgbVjLuTD6Gcen88Kl+W
HynIBxYU3Kfdhzdlz2VM3oVxE/hg1l+9Hx4WL8OLeAqXznrL7c3cPIyfxMfq
TbLvsg+wUL4UL+DJXBJ/kN8jU5aH8hPZWzmTWR9egfnyJ/E8HqP+i3Yn+Q2F
v95znbKm2Svq/8aJ6Iu58ifwHD7Kk3Cm/BbZk7g3z8eb6lX591knzJa/h3+H
A1mDPKf+5bkPjFuhXcil+eacr9y3+mbxz3w3LlR/I2eRqwT5O7LH8ZusDx6U
P54f4L9yCZwj93beNQ/hxfhQvTH3yRnATPnj+H6+LmdZ+zXuiLrGzeCvs7fU
X0dx9MaM3Ac8nf+YPa+9njugjnHT+StMVP8XiuV7YFr2P0/lO7koBst9wG2N
e1m7ODfie9ArZxT3ZVvxlOxLnsznyb2XvcvX8tM5Q/ra8wTeWOTXH7CeuFfz
F0zCHf4+yv/hHnlP8su4uXmWaxfhUnxTniHrgLvxU94tfpAdj815PjSQn8c/
YIN65bwPuQu07+IfMTHj8p0xWv/3+l7ldqht/DT+Erfn/eP7/K7yBP4uz4zx
+Ba3p6bvLzjD2E3Gncg9eS7Wq1fi/+YdJcff4DbcilvwNW5OTf9X/Jb8IJxu
nsf5Z7yvryF3z32Hm+S+xDjciD/jT7gBY3Ekv0n5DNnDvD9nGV3M+YZ5TuCz
s8exNGeWx8h9kb2XfYRr834wCtfgc4zMM8t/xu/l/OAsY5/iZuZ8tjCXo3PI
4zDCn4cwHFfjKlyJKzAMQ3EQQ/CufP7RaWr80twH+DZ7Mecxa4RP5c7JPuVB
GIgBuBz90Q+f4LI8c9677CvcBrXMO5WPZD+ljo/lzuZLuS8uwcW4CH3QGx/h
wqyb3LjsU+PXcSvzrdQ+hivyeByQO0tfL+6JHtl72T9Zf3THhzg36yb3QT7f
+N3GluGB/Bje1deAu/GSvOeckXz35PMZ6IauOBPv44zsA9n9vI+7orM5X88d
yN14Vu7w3KXcJWuIzuiEjuiA9miX9UDb7Cv5ffxO7tnMm/s8d0H2UX7nzH1j
7rO85+TQGq3QEi3QHM3QFHvRJO/CuH3GlOeR2UO538zbmm/gtdiT75XfDX4b
jdEIDdEA9XFazgxOxYjcdfIdzbkudzK3ym8gxqqvwW65LlyPd6Eu6qA2aqEm
amAnquecyV6f3yBzXID65pyTewOr1SvwjrxH7Wq8HVVRBZVRCRVRAdtwCsbI
bs06mmuX8aV5AD+KvfrqcydejPJyW1AOZXEyyqA0SmEzSuI62U05C8bu0W5j
zpe0/w/jTXW9
                    "]]}]}, {}, {}}, {{}, {}, {
                   Hue[0.67, 0.6, 0.6], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   LineBox[CompressedData["
1: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

                    "]]}}}], {GridLines -> Dynamic[
                  Join[{{{-12622780800, 
                    GrayLevel[0.9]}, {-9467107200, 
                    GrayLevel[0.9]}, {-6311347200, 
                    GrayLevel[0.9]}, {-3155673600, 
                    GrayLevel[0.9]}, {0, 
                    GrayLevel[0.9]}, {3155673600, 
                    GrayLevel[0.9]}, {6311433600, 
                    GrayLevel[0.9]}}, {0, 5, 10, 15, 20}}, 
                   Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], Epilog -> {
                  DynamicBox[
                   Typeset`ToBoxes[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[1, {846, 1}, 3, CompressedData["
1:eJwN0Hc01f8fB3D3uleDlDQIJZERygj5IS+VRAqp0DeVUaQIZZQihSIjWSFU
VhokI2S8PoSs7GuPey+XSEZmxs8f7/M45/V6vp/nvN+7LRyMrMlsbGyk1XOK
nY0tdTjMlu8cB5F3Uf+Z6VEOoqqBmh4tz0GYJNrlCHNxEFkb7t9TGKISmz2N
0hbKqERnh2DM9zgq4VQbekLoHpW4nbaU52ZMJWYEt6Z4AZVwD5YOeyJLJZSU
0y4aSVOJvz3i4oJSVIKh4/cySJJKNGYOcpJWJQS1HzhLUInPvknjA+JUImGc
YmmyaoiZVUvVXiphL7snP12MSlyM8pYWWfUkmR4XJkol9rUmPHLfQyWG7u/U
P7KbSljU8ve1ClIJQ2V3oxOrar5uKysQoBK77kS+S9hBJboEtzpf56MS525s
4ljmpRJ6nGukxTipBFPH/mPAeirh4dsiO7mOSnwiJcoVr11955ymsikHlehg
3tUKJFGJ60VjJtOzFOKpY6vPdyaFCLM3fDVZQiHeOIfsbH5FIQQsy67kuVII
i+G3FvuMKcQWMzex1zIUYrZAqm7dqh1C3S5O0hQivh8qj+yjEFK2nHaDEhQC
3OIy9olSCPuIsv/l7KAQhnMuzJ2rKppJBvrxU4h5oaAeEz4K8Tjp/MN/WylE
TNavck0eClHZuMmoeg2F4GDkyWisenTKYt1nDgpRwptdEkGlEF+NTfdbsFOI
GSsyZwt5te/O+8Hjq2aEL72SIVGI1NbXXPPL7MTgoO6Q3aqis1OlPUvshMWa
V/GGqyZs175XtshO9Ij/Oae8qqBKlHzaP3bCTAe4hVaNMvk1HLzAToS8DDK5
MMdOPO2Qr9g7w05c7yl9aPybndClG6t5M9kJuOQYeqmBnVDpChxSK2Inpm44
GT2OZid2DOk9+OnMThyxG+b9qc9OHPKRv3ZBip2IeXrLY4SdnVA4PzAwP0Em
qkXNTq/tIxPy7X9c3nSSiahAnzg12ur8mkHmuhYysQwC5a2NZIIvnc2gsIFM
yAkOtr+tJxNFjW07t6+q+7Ta0v8nmaAdLkpdqiMTVjMZv2+teuBSl1rSdzKx
VLHmWfs3MlHDbcpZ9o5MRJ9N8/8UQSaod+e0NzmTic4n//t+5ySZyIrX+hi8
l0yY6U8bKbGTiRsDsfl9XSSiy0Nbf7GKROhtGe/dnkciKPTsUqMMEvEt/V5K
YAqJkNpz8/J/SSQiKsKcf99bEnF7Kroi7g2JOG1Au7N5VamPvKK+r0kEx3qD
xvkEElFYWinbH7+auw8BlXEkwsBKdMk6mkTI6K1xYI8gEc0XArf/8yYRd2/w
lkw6kIhw0eo6+5MkQqDCNX5MjEQ4sNXL/CORiO8wKvath43wu7nU6/WVjair
64x5l8xGbDuQf74xjI04G7M3WTyAjQjjePHX4yEboaD2IybFg41odFzRanRl
I1RXakZjXdiIN8+iI67dYSPOnXk4UnObjVi/w0ZTftWivlPhkc5shFPKwV+L
TmyEFlGvHnqLjeDptnsubs9GhOTutZS+wEZwh/YryumwEW3d5IgKUTZCUELe
qXRxBfcQ2Qo82Su4/wZWVtiv4OaRnH4fkRU0hO73E8vLGBLJ7nKxcxkHlHnU
tlYuo2rbTnJt1jJap4oNSLxf3btJVz5+vYxJfel5mbHLmK+j8L4vchm/L/59
6xq+jPUZObHcL5axxX87f8fzZeywcgtPClnGPo12Hsfg1V4+1SC1oGUMvcL/
+LLNMmqkzbk/1lpGeVvu/oF/S7i8uKHmVPoSWhdZyTdcW8K3xkmCF3Ys4cDC
zQ79ukUk6gJ5zfwWUfDt5knG5UV0dY2sv6m6iPULbj6nDi2i1AMz1f0qi/iI
pPZno/Iidj0WShw/uIhBAX0bMhUWEULfujrLLWJyvKTejPQicn5M3+kusYgt
FQXfH+xaxHh6xY3H2xZRga8vP5iyiBX6c2tjJv/hRMko99Wf/1BAsX+L3Id/
qP3nS2LdpX/I1dad7sP3D9+FT2gcrV5APcvA13aeC/jE3Mvzg8oChpbbZxhs
XsBY2Yv9f0fm0dX+wMpd1jwafWIXIjHmUfPU731lffMoM9aq6tczj6JFeoRN
9zzuCCo5ods1jzzmBxv2dc7jWtk0kw0d81j00SCMv2Eeb8vM/hSrnMc+6aPH
NXLmUU/6edG5xHkUU/izTe3hPK4c0nfYbT6P/oJTb6d45jFDevxMb9UcfuSh
+TXen8NjoluVew/OYb92Z57xn1mM0VJQ5/0xi2c1Akoa3szijEhNCPPlLEat
2XBlNmQWh91lfng9m0XVUX259U9m0ULMfKDOZxYDzO1fvng0i8L3XKbueM9i
VuQDfZOHs6iT5Zui6jWLXfVBJCHP1X30pjdaN2fRyjJUy+bCLJ7v8z+WqziL
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
TUZqY4rAMHAlndnmZTUM/wdSx/G7
                    "], CompressedData["
1:eJwN0Hc81f8XB3D3uleDlDQIJZERygj5IUclkUIq9E1lFClCGaVIochIVgiV
lQbJCBnnQ8jKvva493KJZGRm/Pz1fDzO6/U+j8f77LZwMLImsbGxnWJnY0sd
DrPlO8dB5F3Uf2Z6lIOoaqCmR8tzECaJdjnCXBxE1ob79xSGqMRmT6O0hTIq
0dkhGPM9jko41YaeELpHJW6nLeW5GVOJGcGtKV5AJdyDpcOeyFIJJeW0i0bS
VOJvj7i4oBSVYOj4vQySpBKNmYOcpFUJQe0HzhJU4rNv0viAOJVIGKdYmqwa
YmbVUrWXStjL7slPF6MSF6O8pUVWPUmmx4WJUol9rQmP3PdQiaH7O/WP7KYS
FrX8fa2CVMJQ2d3oxKqar9vKCgSoxK47ke8SdlCJLsGtztf5qMS5G5s4lnmp
hB7nGmkxTirB1LH/GLCeSnj4tshOrqMSn0iJcsVrV/85p6lsykElOph3tQJJ
VOJ60ZjJ9CyFeOrY6vOdSSHC7A1fTZZQiDfOITubX1EIAcuyK3muFMJi+K3F
PmMKscXMTey1DIWYLZCqW7dqh1C3i5M0hYjvh8oj+yiElC2n3aAEhQC3uIx9
ohTCPqLsfzk7KIThnAtz56qKZpKBfvwUYl4oqMeEj0I8Tjr/8N9WChGT9atc
k4dCVDZuMqpeQyE4GHkyGqsenbJY95mDQpTwZpdEUCnEV2PT/RbsFGLGiszZ
Ql7dd+f94PFVM8KXXsmQKERq62uu+WV2YnBQd8huVdHZqdKeJXbCYs2reMNV
E7Zr3ytbZCd6xP+cU15VUCVKPu0fO2GmA9xCq0aZ/BoOXmAnQl4GmVyYYyee
dshX7J1hJ673lD40/s1O6NKN1byZ7ARccgy91MBOqHQFDqkVsRNTN5yMHkez
EzuG9B78dGYnjtgN8/7UZycO+chfuyDFTsQ8veUxws5OKJwfGJifIBPVoman
1/aRCfn2Py5vOslEVKBPnBptdX7NIHNdC5lYBoHy1kYywZfOZlDYQCbkBAfb
39aTiaLGtp3bV9V9Wm3p/5NM0A4XpS7VkQmrmYzft1Y9cKlLLek7mViqWPOs
/RuZqOE25Sx7Ryaiz6b5f4ogE9S7c9qbnMlE55P/fb9zkkxkxWt9DN5LJsz0
p42U2MnEjYHY/L4uEtHloa2/WEUi9LaM927PIxEUenapUQaJ+JZ+LyUwhURI
7bl5+b8kEhEVYc6/7y2JuD0VXRH3hkScNqDd2byq1EdeUd/XJIJjvUHjfAKJ
KCytlO2PX+3dh4DKOBJhYCW6ZB1NImT01jiwR5CI5guB2/95k4i7N3hLJh1I
RLhodZ39SRIhUOEaPyZGIhzY6mX+kUjEdxgV+9bDRvjdXOr1+spG1NV1xrxL
ZiO2Hcg/3xjGRpyN2ZssHsBGhHG8+OvxkI1QUPsRk+LBRjQ6rmg1urIRqis1
o7EubMSbZ9ER1+6wEefOPBypuc1GrN9hoym/alHfqfBIZzbCKeXgr0UnNkKL
qFcPvcVG8HTbPRe3ZyNCcvdaSl9gI7hD+xXldNiItm5yRIUoGyEoIe9UuriC
e4hsBZ7sFdx/Aysr7Fdw80hOv4/IChpC9/uJ5WUMiWR3udi5jAPKPGpbK5dR
tW0nuTZrGa1TxQYk3q/mbtKVj18vY1Jfel5m7DLm6yi874tcxu+Lf9+6hi9j
fUZOLPeLZWzx387f8XwZO6zcwpNClrFPo53HMXh1L59qkFrQMoZe4X982WYZ
NdLm3B9rLaO8LXf/wL8lXF7cUHMqfQmti6zkG64t4VvjJMELO5ZwYOFmh37d
IhJ1gbxmfoso+HbzJOPyIrq6RtbfVF3E+gU3n1OHFlHqgZnqfpVFfERS+7NR
eRG7Hgsljh9cxKCAvg2ZCosIoW9dneUWMTleUm9GehE5P6bvdJdYxJaKgu8P
di1iPL3ixuNti6jA15cfTFnECv25tTGT/3CiZJT76s9/KKDYv0Xuwz/U/vMl
se7SP+Rq60734fuH78InNI5WL6CeZeBrO88FfGLu5flBZQFDy+0zDDYvYKzs
xf6/I/Poan9g5S5rHo0+sQuRGPOoeer3vrK+eZQZa1X165lH0SI9wqZ7HncE
lZzQ7ZpHHvODDfs653GtbJrJho55LPpoEMbfMI+3ZWZ/ilXOY5/00eMaOfOo
J/286FziPIop/Nmm9nAeVw7pO+w2n0d/wam3UzzzmCE9fqa3ag4/8tD8Gu/P
4THRrcq9B+ewX7szz/jPLMZoKajz/pjFsxoBJQ1vZnFGpCaE+XIWo9ZsuDIb
MovD7jI/vJ7Nouqovtz6J7NoIWY+UOcziwHm9i9fPJpF4XsuU3e8ZzEr8oG+
ycNZ1MnyTVH1msWu+iCSkOdqHr3pjdbNWbSyDNWyuTCL5/v8j+UqzqLuxUc6
HNyzqHhtcfcGYgbz4mpcZO7N4Lb3vqfPys4g90Dk24jBaVy/X65aM2Eau/Wz
XCbPTONc33VNMa1p3HJ793qTA9Popm1iuVN2Gjv5gr8x900jl7fUcIXUNGqM
fN/6XnIabxlf0QqSmMY3hYv2juLTaGtxffeyyDQeWNPW5L9zGosMvqgkbp1G
veigV4Vc0ziWNj65d/AvPi8w0gkp/oudo3Hl1c5/sURPq0RY5i96eP5Uv983
hU19X5SmoqZwv5Ewe6PRFFpEuZz5yjGF56avaM/9ncQTRvqHVBiTSLCVypt0
TKJauoq0W8Mkclpf2/df/SR27IiQ0vw5iWn1ZZKidZPo7jslsbZ2EvkmDcTr
qyYx5+InsajKSZxStBWRKJvEA1yiu74WT6J3xp/y/72cxBbjAvtip0ncWv3u
UJ/UJJoZCrfZMifQ5YPXwkLkBMocVIlKMpjAgtD2vPPsE6jPxp7ulDuOfOJ7
qouTxpGpf4TFFTaOulfO3FEIGMf025bsZt7jaPHATvf3/XHc8sT5uZf7OD70
P2hp7TaOY89mFXVdx9EsOI9jv8s4Vjy/18Z7ZxwTIlbudTuN492YR7tSbo2j
R9NX/mO64+jJOcbL2DOO6kaX1jh+/YM+HycDf+/7gx6ZpoLuL8bw3WaH18rU
MXwsaCJLtfuNNtqGFolNozi9Nsl1Q+AoelfPPXPRHsW5xGcRH2EU7R8IJzDV
RlHS7peol+ooMs9nvRNQGcWEow9kcw+O4gU5nS9GCqOow3QoL5EcRcXIyHZZ
4VHcsDS4sn7DKA5aKO1lzY9glGyLU3zTCOouOBef/ziCJ4rXNvdbj6DO41dD
djtHcDo3mj/40S98z5k68WhkGCPzLUveXxxGOd6pCHrpEJIqDlidVBzCsYzz
O3/9ZmFH9IM2vxQWZmZqei2+YmFAFVnCMYyFbq2Me++DWWhFL/s54M9CM5vs
ee8nLDQYS9oj7MtC7dsR+oWPWKi24Otq9pCFvyU5K47YszDONHibzAUWsuVF
Zq8ostCCL8G4kZuFSFnL/bxiEIUnHCpOew3iM2dera6BASRtq7BUPTWAH3gl
PapLmEgtMI+1E2diWKHWF40oBvbVqW3mMWKgdJ+SI4OTgdntf4bb5+io0ZRq
UT9AR7IBNV6vi44VNVc6yxvpODfilmZdT0cpzhB3Sh0dL0il6LytpuOzE0Xb
tX7QccxvNNuzjI4G5TuMC4vpaJH37FjaSzo6f1hWinSmo3zJoXB/aTqON92e
uj/QjwJJRbnOev3o0ZDjFFvQh59n89/y3+nDQaHi5gjZPrwhoLTfdG0fMuXM
eJXLejElI1yT73MvXt/fcHP+VS/WjNlTrof1oswnrpgO/17sCbwwuNm3F4Nu
psnpPezFw/rzHo88enFcWqeywLUXXaSKRR4Y9uKSuNJ9zX29eNK9pNsjtgej
q3Q18jb0YFgJx0aDti6M7ry986ZmFybM0GX8UzuxSG7iQOaVTuy6saLQsaMT
7fx9D9rPduBCygZlcnMHfgjQyA372YHmDg7K4tUduOlMQm5eeQcSSg3KJ4kO
3Lssr+KY14FPv4epRGR0oIGxyaG+uA7kYwioSgV2IJmdS+fpVDv+Flk8O2Ta
jtxx0WZ3q9pQlv/QJa7/tSFxddPBor80PJ/FWn/rEw2/+V306oqlociFpmmd
ABr++3mAl+lLw+ajQQc8vWn4KW9Ef8cDGvrJnrDLdqehKh8leeQWDUdJxX27
bWiYk5pWvXCUhl6nI3KadtPQJIzvuvbTVtzfHi2UN96Cau7VFeYWLajLv+hI
aW7GwYuChZeqmtH7jdragpJmrC+r+ThU0Iw7Wf+d2ZbbjDfW/Z47ktmMefvu
xzl+bMbxrEJFiehmlNBYrurxbcZIA89ZvcvNyGHJJpp3qBmZfuT7L0abkPhA
ab0Z34R+2/j3/13ThCe9ZJ7cvdWIVXTuAzTJRjx+bJymwGhA35m+ffTiBixL
afAMiW1AK7aqdyz/BmQ3JZo03BvQyKfI5vqtBnzzOX8p/FoDVlWoVO6zbMDJ
7pxQNG/AHX8VL543a0Ct9V/Ef59twFG3E57Z3+oxnNXben9PPQ5ZnNCdlPiJ
KTONg0Pr69D+QC+PfWEtKl4fUZtyqMVkt09+Yf/VIp+fY+PBE7VoyN3k6nu4
Fv3DFYVoB2uREIwgxKVr8d/b2WtuIrXYU3J/Kf9fDRLd7C+WmmvQwFBweI1q
DXaXKR7eHF+N60d9DlXZV6EyL03BW+MHUsifxJ9nVGL9+GOBBJFKVLK5FZ7S
WYGxvRc2podV4NNTL5d/BlSgS2Hr73HvCrSQ3tLNc7cCT8cY1sg7VqCEe03a
7UsVSD5//GmOfgXmbFbXVpWqQNs6efYijgq8tOK3MN/4Hc8e6J44GF+GHKJK
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
ERgGrqQz27yshuH/FyfxuQ==
                    "], CompressedData["
1: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
                    "], Automatic, 
                    Hold[
                    Nearest[CompressedData["
1:eJwN0Hc81f8XB3D3uleDlDQIJZERygj5IUclkUIq9E1lFClCGaVIochIVgiV
lQbJCBnnQ8jKvva493KJZGRm/Pz1fDzO6/U+j8f77LZwMLImsbGxnWJnY0sd
DrPlO8dB5F3Uf2Z6lIOoaqCmR8tzECaJdjnCXBxE1ob79xSGqMRmT6O0hTIq
0dkhGPM9jko41YaeELpHJW6nLeW5GVOJGcGtKV5AJdyDpcOeyFIJJeW0i0bS
VOJvj7i4oBSVYOj4vQySpBKNmYOcpFUJQe0HzhJU4rNv0viAOJVIGKdYmqwa
YmbVUrWXStjL7slPF6MSF6O8pUVWPUmmx4WJUol9rQmP3PdQiaH7O/WP7KYS
FrX8fa2CVMJQ2d3oxKqar9vKCgSoxK47ke8SdlCJLsGtztf5qMS5G5s4lnmp
hB7nGmkxTirB1LH/GLCeSnj4tshOrqMSn0iJcsVrV/85p6lsykElOph3tQJJ
VOJ60ZjJ9CyFeOrY6vOdSSHC7A1fTZZQiDfOITubX1EIAcuyK3muFMJi+K3F
PmMKscXMTey1DIWYLZCqW7dqh1C3i5M0hYjvh8oj+yiElC2n3aAEhQC3uIx9
ohTCPqLsfzk7KIThnAtz56qKZpKBfvwUYl4oqMeEj0I8Tjr/8N9WChGT9atc
k4dCVDZuMqpeQyE4GHkyGqsenbJY95mDQpTwZpdEUCnEV2PT/RbsFGLGiszZ
Ql7dd+f94PFVM8KXXsmQKERq62uu+WV2YnBQd8huVdHZqdKeJXbCYs2reMNV
E7Zr3ytbZCd6xP+cU15VUCVKPu0fO2GmA9xCq0aZ/BoOXmAnQl4GmVyYYyee
dshX7J1hJ673lD40/s1O6NKN1byZ7ARccgy91MBOqHQFDqkVsRNTN5yMHkez
EzuG9B78dGYnjtgN8/7UZycO+chfuyDFTsQ8veUxws5OKJwfGJifIBPVoman
1/aRCfn2Py5vOslEVKBPnBptdX7NIHNdC5lYBoHy1kYywZfOZlDYQCbkBAfb
39aTiaLGtp3bV9V9Wm3p/5NM0A4XpS7VkQmrmYzft1Y9cKlLLek7mViqWPOs
/RuZqOE25Sx7Ryaiz6b5f4ogE9S7c9qbnMlE55P/fb9zkkxkxWt9DN5LJsz0
p42U2MnEjYHY/L4uEtHloa2/WEUi9LaM927PIxEUenapUQaJ+JZ+LyUwhURI
7bl5+b8kEhEVYc6/7y2JuD0VXRH3hkScNqDd2byq1EdeUd/XJIJjvUHjfAKJ
KCytlO2PX+3dh4DKOBJhYCW6ZB1NImT01jiwR5CI5guB2/95k4i7N3hLJh1I
RLhodZ39SRIhUOEaPyZGIhzY6mX+kUjEdxgV+9bDRvjdXOr1+spG1NV1xrxL
ZiO2Hcg/3xjGRpyN2ZssHsBGhHG8+OvxkI1QUPsRk+LBRjQ6rmg1urIRqis1
o7EubMSbZ9ER1+6wEefOPBypuc1GrN9hoym/alHfqfBIZzbCKeXgr0UnNkKL
qFcPvcVG8HTbPRe3ZyNCcvdaSl9gI7hD+xXldNiItm5yRIUoGyEoIe9UuriC
e4hsBZ7sFdx/Aysr7Fdw80hOv4/IChpC9/uJ5WUMiWR3udi5jAPKPGpbK5dR
tW0nuTZrGa1TxQYk3q/mbtKVj18vY1Jfel5m7DLm6yi874tcxu+Lf9+6hi9j
fUZOLPeLZWzx387f8XwZO6zcwpNClrFPo53HMXh1L59qkFrQMoZe4X982WYZ
NdLm3B9rLaO8LXf/wL8lXF7cUHMqfQmti6zkG64t4VvjJMELO5ZwYOFmh37d
IhJ1gbxmfoso+HbzJOPyIrq6RtbfVF3E+gU3n1OHFlHqgZnqfpVFfERS+7NR
eRG7Hgsljh9cxKCAvg2ZCosIoW9dneUWMTleUm9GehE5P6bvdJdYxJaKgu8P
di1iPL3ixuNti6jA15cfTFnECv25tTGT/3CiZJT76s9/KKDYv0Xuwz/U/vMl
se7SP+Rq60734fuH78InNI5WL6CeZeBrO88FfGLu5flBZQFDy+0zDDYvYKzs
xf6/I/Poan9g5S5rHo0+sQuRGPOoeer3vrK+eZQZa1X165lH0SI9wqZ7HncE
lZzQ7ZpHHvODDfs653GtbJrJho55LPpoEMbfMI+3ZWZ/ilXOY5/00eMaOfOo
J/286FziPIop/Nmm9nAeVw7pO+w2n0d/wam3UzzzmCE9fqa3ag4/8tD8Gu/P
4THRrcq9B+ewX7szz/jPLMZoKajz/pjFsxoBJQ1vZnFGpCaE+XIWo9ZsuDIb
MovD7jI/vJ7Nouqovtz6J7NoIWY+UOcziwHm9i9fPJpF4XsuU3e8ZzEr8oG+
ycNZ1MnyTVH1msWu+iCSkOdqHr3pjdbNWbSyDNWyuTCL5/v8j+UqzqLuxUc6
HNyzqHhtcfcGYgbz4mpcZO7N4Lb3vqfPys4g90Dk24jBaVy/X65aM2Eau/Wz
XCbPTONc33VNMa1p3HJ793qTA9Popm1iuVN2Gjv5gr8x900jl7fUcIXUNGqM
fN/6XnIabxlf0QqSmMY3hYv2juLTaGtxffeyyDQeWNPW5L9zGosMvqgkbp1G
veigV4Vc0ziWNj65d/AvPi8w0gkp/oudo3Hl1c5/sURPq0RY5i96eP5Uv983
hU19X5SmoqZwv5Ewe6PRFFpEuZz5yjGF56avaM/9ncQTRvqHVBiTSLCVypt0
TKJauoq0W8Mkclpf2/df/SR27IiQ0vw5iWn1ZZKidZPo7jslsbZ2EvkmDcTr
qyYx5+InsajKSZxStBWRKJvEA1yiu74WT6J3xp/y/72cxBbjAvtip0ncWv3u
UJ/UJJoZCrfZMifQ5YPXwkLkBMocVIlKMpjAgtD2vPPsE6jPxp7ulDuOfOJ7
qouTxpGpf4TFFTaOulfO3FEIGMf025bsZt7jaPHATvf3/XHc8sT5uZf7OD70
P2hp7TaOY89mFXVdx9EsOI9jv8s4Vjy/18Z7ZxwTIlbudTuN492YR7tSbo2j
R9NX/mO64+jJOcbL2DOO6kaX1jh+/YM+HycDf+/7gx6ZpoLuL8bw3WaH18rU
MXwsaCJLtfuNNtqGFolNozi9Nsl1Q+AoelfPPXPRHsW5xGcRH2EU7R8IJzDV
RlHS7peol+ooMs9nvRNQGcWEow9kcw+O4gU5nS9GCqOow3QoL5EcRcXIyHZZ
4VHcsDS4sn7DKA5aKO1lzY9glGyLU3zTCOouOBef/ziCJ4rXNvdbj6DO41dD
djtHcDo3mj/40S98z5k68WhkGCPzLUveXxxGOd6pCHrpEJIqDlidVBzCsYzz
O3/9ZmFH9IM2vxQWZmZqei2+YmFAFVnCMYyFbq2Me++DWWhFL/s54M9CM5vs
ee8nLDQYS9oj7MtC7dsR+oWPWKi24Otq9pCFvyU5K47YszDONHibzAUWsuVF
Zq8ostCCL8G4kZuFSFnL/bxiEIUnHCpOew3iM2dera6BASRtq7BUPTWAH3gl
PapLmEgtMI+1E2diWKHWF40oBvbVqW3mMWKgdJ+SI4OTgdntf4bb5+io0ZRq
UT9AR7IBNV6vi44VNVc6yxvpODfilmZdT0cpzhB3Sh0dL0il6LytpuOzE0Xb
tX7QccxvNNuzjI4G5TuMC4vpaJH37FjaSzo6f1hWinSmo3zJoXB/aTqON92e
uj/QjwJJRbnOev3o0ZDjFFvQh59n89/y3+nDQaHi5gjZPrwhoLTfdG0fMuXM
eJXLejElI1yT73MvXt/fcHP+VS/WjNlTrof1oswnrpgO/17sCbwwuNm3F4Nu
psnpPezFw/rzHo88enFcWqeywLUXXaSKRR4Y9uKSuNJ9zX29eNK9pNsjtgej
q3Q18jb0YFgJx0aDti6M7ry986ZmFybM0GX8UzuxSG7iQOaVTuy6saLQsaMT
7fx9D9rPduBCygZlcnMHfgjQyA372YHmDg7K4tUduOlMQm5eeQcSSg3KJ4kO
3Lssr+KY14FPv4epRGR0oIGxyaG+uA7kYwioSgV2IJmdS+fpVDv+Flk8O2Ta
jtxx0WZ3q9pQlv/QJa7/tSFxddPBor80PJ/FWn/rEw2/+V306oqlociFpmmd
ABr++3mAl+lLw+ajQQc8vWn4KW9Ef8cDGvrJnrDLdqehKh8leeQWDUdJxX27
bWiYk5pWvXCUhl6nI3KadtPQJIzvuvbTVtzfHi2UN96Cau7VFeYWLajLv+hI
aW7GwYuChZeqmtH7jdragpJmrC+r+ThU0Iw7Wf+d2ZbbjDfW/Z47ktmMefvu
xzl+bMbxrEJFiehmlNBYrurxbcZIA89ZvcvNyGHJJpp3qBmZfuT7L0abkPhA
ab0Z34R+2/j3/13ThCe9ZJ7cvdWIVXTuAzTJRjx+bJymwGhA35m+ffTiBixL
afAMiW1AK7aqdyz/BmQ3JZo03BvQyKfI5vqtBnzzOX8p/FoDVlWoVO6zbMDJ
7pxQNG/AHX8VL543a0Ct9V/Ef59twFG3E57Z3+oxnNXben9PPQ5ZnNCdlPiJ
KTONg0Pr69D+QC+PfWEtKl4fUZtyqMVkt09+Yf/VIp+fY+PBE7VoyN3k6nu4
Fv3DFYVoB2uREIwgxKVr8d/b2WtuIrXYU3J/Kf9fDRLd7C+WmmvQwFBweI1q
DXaXKR7eHF+N60d9DlXZV6EyL03BW+MHUsifxJ9nVGL9+GOBBJFKVLK5FZ7S
WYGxvRc2podV4NNTL5d/BlSgS2Hr73HvCrSQ3tLNc7cCT8cY1sg7VqCEe03a
7UsVSD5//GmOfgXmbFbXVpWqQNs6efYijgq8tOK3MN/4Hc8e6J44GF+GHKJK
TN+NZZi7PbiV5lmKIc8LTrOplKIN51ClxDiBb6M3tMmwCOyRVGDJ9xDIn2cy
o9xCoLHOA6p6DYFVV3/sOZ5PoKbPFi3DVAKlibQH1o9XeyuaBe6XCXy2l3es
SBuR7dSAMEWmBG1M1zAOYTE2bDv62E6iGH3v0I0pXUWo2uwl9iq4CMPY6wNt
bYtwTH7XzMEjRRhTpS0leKAIdSzszclCRTg9Hx46tK4I3zwvLK+bKUQnLuV1
8t+/4RG/DL3wFwVYOPzfe3HTPFQ+uY4zf2cu1tf76r4ezsbrZyn+T7KyMEtm
cUnpdRYuUf86DgRmoXbPyMCLu1kYksMw1bqWhaLXmiBeM2v1HqWSi/xZ2OP2
Zj675gtSOh7+cPD8goaxmrYMZibGma+sPa+bib9+3tFpa03HKProAzL/ezR/
+P6VRmMaigpf/3Y3IA39HH5U89mk4a8iic6co2moz/3kl/HuNMy4yJqfXHqH
ajFWyna33mFFW/9tBj0Ve850/WmqSMGZutbrZR+SUex79eUkl0Q0Lig556v5
Bt0z1rZpZ8ej7q9g8sPhaCz6KhcYnPMSFfyatsc9ikJ7e9GLYr8iMfXsnTcf
DCLx2A+hY+PskUhXK2cp5EagZ4a9v+v1CBQU3S5TIBSBFDTTast9gb8vxp2f
NnyO/evE9ssXeKHnQ6mN1m1awE2aPxwy7AwzJhx/1n3zBtljAa1pu/zAWm5T
kd6jAHC6MTGrEPsMvFIa5QSzA2HNsdJTIRAEQfQvdpS6INjqlfjEzSwYYoXC
k0YHg6Hrx/tn5lzP4RclsFxbLBSctf7ji3ofA8vFW7P/Rr2BIxOTEybZb+GJ
SL1sYUMiSBVo6P+5lAS1Zz7a7R5Lgp0JzLuqB5Ph1qiA/xmPZIgKzeXpi08G
VDnz8kZpMvzqGROeH0yGzT7+qT7rUyCWdVTk1JF3IKa7ErPN4z0wLtulRu7N
gC+CNLJocCbEjVxxurP3C/jnj/aXF34BNpHMlw7rsuDOU1dDvrNZcEDd7OPo
3Sz4Na62DhOyoFJXVvn9lyxIStxlHV6eBd7Lm154tmfBZRMy2o5mgdLM9gQu
gRzgCpPxTD+RC30W8RaSD/IgW45H+21mARDfRSQI5jeoN1Vc37+tCHicz86R
pYrA6JnLoKh6EYQmRTZrGxRBU9FXwsayCIwnFuI+PC2C1j3q98bTi6DjCSq4
LRZB9+9joys6xcDMPXVxI70Ypkv2XQtWL4GIuL4LOhcQVDzCDUjuBJiBYGkd
byl4cLw9GPupFOqcqrlOfC0F4d4pxjSWgpOeYMGb6lIoyz0aerqlFGxCwjXf
DZXCBtvBMfJiKZzb8UQvR6QM4qolU21PlMEB2ZtX6iPKAEMydigzy+Bvx6vP
slvKQVwsQGfv0QpY73BG6E9DBYx9FZjMvVQJz9RtPMNsKkGKyOJydKyESm1S
tP7dSrhWrS8u9agSEpsHgRFWCX3dnv/FJleC6fjn59xVldBIZpZ7/a6EMnEd
OWvFH5B98kPMiXs/YFdg+MHCT1XwtPbBzwP0aniy+XtSrmMN+J3n9NAg1cJe
4eZz+3lroXwoVk5YrBa26ZPi+WRr4epnay4e5VrI2Vrlvk6zFjjuyrJIJ2pB
m7MklnGjFnxjDY2+h6zOi28XPmmrBZ/+SImTwnXgtI/il3PoJ6SrfnUKkawH
IzdbX8adepjJ3hGtRNTDJeqaS3ot9VBpPLXn8lA9vLGRPSv2ux48PGx9f03U
w7mQxNz0mXqQS+wduv2vHgarz+qtUBogeqr641PuBrgRmqj8RbEBNOTuY5dZ
AxgYyk2eHm6AK44DIqWujRD64azydFkjlLG+64lvboKQmf56Z7EmuEhdPlui
0gSb1h1zfaHeBGVcz6KuajWB66amvEPHm0Bqy45OrpOrfYFUoS9nm2BGROmy
6aUmCNK0vz7p0wTi5sm3Az40wcMslxmho83Quf64W0ZnMyQ+3Xhh7Uoz3Fzb
pn5ZpAW0+eRUq/e2gLCEv5LSvhaYV2bIv97fAo3H1fZzKbbA42tj4nS1FlDy
SxD+eqwFosspm63Ot8AK1ZZ9k20LPGdfqCxOb4E9pIAgh5kWiDJq5ykJbgXu
RPHwTZI0iHt9eo52kgay8a4X4m/RIDQOFJ+702DmFeeGR940SH11a/6fLw3M
XrUM3A6gAdcr1cbfwTQoio0vuhpGA98YhVu6yTQ4FV2xW/YrDezDtw99W6FB
YMi1T3rH26Ds6uyLyKY2WFDzc2dcagfznXcuJ1m1A7FicfyabTvs7TeQlbRv
hwBCY+uIUzsY++xg2Hu0g6DOTMakTzt8rP14ciGqHTTOWA+RPrTDZfPmXTyN
7eBte+S88Fw7lHvuLtc42gGcESuKF0M64OK1DYLXdnZCuooAu+OHThhdt7VD
83MnSHVyf96U0wnXPqx90pffCYn3yZcyijthp/AMl8GPTogihvP/NHbCszUN
2/YPdsLDk1+d7Oc74Xqrr9TvXV1w5vJZup12F4jdnjS0fdEFs37BeLWvC2Tt
W7J1JbrB2lggTfZWN0zWSqeIe3eD13GNROGwbmAmeTPiorrhOKVCROhVN6RZ
cFrEvO4Gbjz9mj+5G1rut+3alt4NsapX4jZ/7YavMo+jKF3d0CScEjqz0g0q
tSLNo8964JV73FYGfy/M3XXKPHe1F4w9tE9XZfbCe497SqzvvUC+nyFEae8F
mSXd56H0XjC5P0DZPdoL9oWZGkPjvfB4ydMtfboXotX1M10WeiH9/o5R9ZVe
kD2s1V2wuQ98DruWtYn1wTHevwPyN/uAyrq1JjCrD+5eVT2n1NkHYwPsSb2k
fkhNsjmpuLUfLKxrp55I9IPpUt6TKal+MAhPFjKX6QcdmReZlfv74fB3z+MK
8v0gO23iuFa5HwTF5GO6/9cPC4+ZY37H+oHGjNCSP90P35pecwnG9EMC8aGV
yuqHyUzTX3lz/XDsLcfyzfV0MOudIHdy08FeoHuNDi8d3PKM/B9spcOj85Vc
2dvpEDStHjzCT4eoF194RATpgJz+AouidPj16LJYq8xqbpV/UsOQDgrHttxO
vk2HZLkeDQekA9/O1HUq3Ayoq33cvUeYAY/vX/m8UZ4Bl1pOx1D/xwBVGQ2f
f0cYIFeat6KizQAJ04N3XXQYsPNPxt8vugzY6iPtMHGSAeTPe6xuGDJgvGuH
KessA/5Ta2YrdmdARUxgasQrBkTruol2Mxhwc94iYY8UE7jWMIJZskz4sMXS
870CEzwE9rhuUGLCSRGGvYMKEwQl315tUGXC6H5LcwV1JuzTs1Qv0GbC9auW
gkcMmDAca9lhZMkEmybLKAsXJlzVtNriHcsEq49WIa8JJpSZcm+oWDcAYhxf
n44aDMA2Ur1OiNkArF1krVG0GoCyhY+zsVcHwGvemUW1HQC1uUM0e7sBmJ9Z
KafdHACnvwHJ75wG4NfEdt97rgNQwzpOKfUfgE/drt7r4wbA+QftwcuyAVDJ
Vr4nMTIAC1FNG9h5BqHQwyGhW2kQPt3ZdsxYcxDi7AuHq04MwraRTWq+pwYh
+JpVEJwZhBqxIOX4s4Owlpnbt3h+EI6+6X9qZjYIXpc5Fb7+NwhXjEw9khwG
QetoyvdQ70GQ7vFzkP2xusfNhr9qIwsuSA6K/BFhQUKHpfQWJRZMaJfad6uy
QOuLyOfkwyy4bmtkxKnFghe7vKccjrLgW8vnsGZtFjAD+g8eOsECX6uE/Goj
FkiqXzps/h8LMuPNjFK9WaBGPmc9mcqCudqk/PQaFmS9nN54c5wFoZ6v8vXI
Q3DL+pi11JYhuGTyMp9faAhO6f3euG7vEJQfjcz3khoCdQ2wnpMdgjnVCFVF
uSHIUh7ZeEth9Z2i5sD7g0MgLReez1Iegpop3X4znyG4mcO2tq5xCL7JSG1M
ERgGrqQz27yshuH/FyfxuQ==
                    "] -> CompressedData["
1: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
                    "]]]][
                    Part[#, 1]]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    (DateString[#, {"Year"}]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     1]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[
                    Part[CalculateUtilities`GraphicsUtilities`Private`scaled, 
                    1] - 0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                     TraditionalForm, Graphics]]}, FrameTicks -> {{{{0., 
                    FormBox[
                    TagBox["0", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2.5, 
                    FormBox[
                    TagBox["2.5", 
                    Global`TagBoxWrapper["StringBoxes" -> "2.5"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {5., 
                    FormBox[
                    TagBox["5", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {7.5, 
                    FormBox[
                    TagBox["7.5", 
                    Global`TagBoxWrapper["StringBoxes" -> "7.5"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10., 
                    FormBox[
                    TagBox["10", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {12.5, 
                    FormBox[
                    TagBox["12.5", 
                    Global`TagBoxWrapper["StringBoxes" -> "12.5"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15., 
                    FormBox[
                    TagBox["15", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {17.5, 
                    FormBox[
                    TagBox["17.5", 
                    Global`TagBoxWrapper["StringBoxes" -> "17.5"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {5.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {10.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {15.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{0., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2.5, 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {5., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {7.5, 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {12.5, 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {17.5, 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {5.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {10.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {15.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{
                    NCache[-12622780800, -1.26227808*^10], 
                    FormBox["\"1500\"", TraditionalForm]}, {
                    NCache[-9467107200, -9.4671072*^9], 
                    FormBox["\"1600\"", TraditionalForm]}, {
                    NCache[-6311347200, -6.3113472*^9], 
                    FormBox["\"1700\"", TraditionalForm]}, {
                    NCache[-3155673600, -3.1556736*^9], 
                    FormBox["\"1800\"", TraditionalForm]}, {0, 
                    FormBox["\"1900\"", TraditionalForm]}, {
                    NCache[3155673600, 3.1556736*^9], 
                    FormBox["\"2000\"", TraditionalForm]}, {
                    NCache[6311433600, 6.3114336*^9], 
                    FormBox["\"2100\"", TraditionalForm]}}, {{
                    NCache[-12622780800, -1.26227808*^10], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[-9467107200, -9.4671072*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[-6311347200, -6.3113472*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[-3155673600, -3.1556736*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {0, 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[3155673600, 3.1556736*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}, {
                    NCache[6311433600, 6.3114336*^9], 
                    FormBox[
                    StyleBox["\"\"", 0, StripOnInput -> False], 
                    TraditionalForm]}}}}, ImagePadding -> All, GridLines -> 
                NCache[{{{-12622780800, 
                    GrayLevel[0.9]}, {-9467107200, 
                    GrayLevel[0.9]}, {-6311347200, 
                    GrayLevel[0.9]}, {-3155673600, 
                    GrayLevel[0.9]}, {0, 
                    GrayLevel[0.9]}, {3155673600, 
                    GrayLevel[0.9]}, {6311433600, 
                    GrayLevel[0.9]}}, Automatic}, {{{-1.26227808*^10, 
                    GrayLevel[0.9]}, {-9.4671072*^9, 
                    GrayLevel[0.9]}, {-6.3113472*^9, 
                    GrayLevel[0.9]}, {-3.1556736*^9, 
                    GrayLevel[0.9]}, {0, 
                    GrayLevel[0.9]}, {3.1556736*^9, 
                    GrayLevel[0.9]}, {6.3114336*^9, 
                    GrayLevel[0.9]}}, Automatic}], PlotRangePadding -> None, 
                AspectRatio -> 0.2, AxesOrigin -> {0, 0}, BaseStyle -> 
                AbsoluteThickness[1], Frame -> True, FrameTicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10], GridLines -> 
                NCache[{{{-15778454400, 
                    GrayLevel[0.9]}, {-9467107200, 
                    GrayLevel[0.9]}, {-3155673600, 
                    GrayLevel[0.9]}, {3155673600, 
                    GrayLevel[0.9]}, {9467107200, 
                    GrayLevel[0.9]}}, Automatic}, {{{-1.57784544*^10, 
                    GrayLevel[0.9]}, {-9.4671072*^9, 
                    GrayLevel[0.9]}, {-3.1556736*^9, 
                    GrayLevel[0.9]}, {3.1556736*^9, 
                    GrayLevel[0.9]}, {9.4671072*^9, 
                    GrayLevel[0.9]}}, Automatic}], GridLinesStyle -> 
                GrayLevel[0.9], ImageSize -> 360., 
                LabelStyle -> {FontFamily -> "Verdana", FontSize -> 10}, 
                Method -> {"AxesInFront" -> True}, 
                PlotRange -> {{-1.199171512261409*^10, 
                  3.4081343226138973`*^9}, {0, 18.98349261511729}}, 
                PlotRangeClipping -> True, PlotRangePadding -> None, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                TicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10]}], 
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"1539\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2007\"", Identity], TraditionalForm]}, "Row", 
                    DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3, "\[InvisibleSpace]", #4}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )], 
                    "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, {FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], 
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"in \"", 
                    "\"occurrences per hundred thousand words per year\""}, 
                    "Row", DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )], "\[NoBreak]", 
                    "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Verdana", FontSize -> 10}, 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}}], "Grid"]}, 
             "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  
                  ItemBox[#2, Alignment -> {Left, Inherited}, 
                   DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", #2, "}"}], ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement["statelist", {"count" -> "2", "value" -> "Linear scale"}, {
         XMLElement[
         "state", {
          "name" -> "Linear scale", "input" -> 
           "BookMatchFrequency:WordData__Linear scale"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Log scale", "input" -> 
           "BookMatchFrequency:WordData__Log scale"}, {}]}], 
       XMLElement["statelist", {"count" -> "2", "value" -> "Binned"}, {
         XMLElement[
         "state", {
          "name" -> "Binned", "input" -> 
           "BookMatchFrequency:WordData__Binned"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Raw", "input" -> 
           "BookMatchFrequency:WordData__Raw"}, {}]}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"title" -> "Inflected forms", "scanner" -> "Data", "id" -> 
     "InflectedForms:WordData", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
               "\"instances\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, StripOnInput -> False], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
               "\"instanced\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, StripOnInput -> False], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
               "\"instancing\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Synonyms", "scanner" -> "Data", "id" -> 
     "Synonyms:WordData", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"case\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "case"}]], 
                    Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"example\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "example"}]], 
                    Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"illustration\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "illustration"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"representative\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "representative"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"exemplify\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "exemplify"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"illustrate\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "illustrate"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm]}], " ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  
                  TemplateBox[{"\"total:\"", "6"}, "Row", 
                   DisplayFunction -> (RowBox[{#, " ", #2}]& ), 
                   InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", " "}], "]"}]& )], 
                  "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show synonym network", "input" -> 
         "Synonyms:WordData__Show synonym network"}, {}], 
       XMLElement[
       "statelist", {"count" -> "2", "value" -> "Meanings combined"}, {
         XMLElement[
         "state", {
          "name" -> "Meanings divided", "input" -> 
           "Synonyms:WordData__Meanings divided"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Meanings combined", "input" -> 
           "Synonyms:WordData__Meanings combined"}, {}]}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Narrower terms", "scanner" -> "Data", "id" -> 
     "Hyponym:WordData", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"bit\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "bit"}]], 
                    Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"clip\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "clip"}]], 
                    Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"humiliation\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "humiliation"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"mortification\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "mortification"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"piece\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "piece"}]], 
                    Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"time\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "time"}]], 
                    Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"apology\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "apology"}]], 
                    Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"case in point\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "case in point"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"exception\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "exception"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"excuse\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "excuse"}]], 
                    Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"precedent\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "precedent"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"quintessence\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "quintessence"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"sample\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "sample"}]], 
                    Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"specimen\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "specimen"}]],
                     Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], 
                  TraditionalForm]}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  
                  TemplateBox[{"\"total:\"", "14"}, "Row", 
                   DisplayFunction -> (RowBox[{#, " ", #2}]& ), 
                   InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", " "}], "]"}]& )], 
                  "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "statelist", {"count" -> "2", "value" -> "Meanings combined"}, {
         XMLElement[
         "state", {
          "name" -> "Meanings divided", "input" -> 
           "Hyponym:WordData__Meanings divided"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Meanings combined", "input" -> 
           "Hyponym:WordData__Meanings combined"}, {}]}]}]}], 
   Typeset`pod11$$ = XMLElement[
   "pod", {"title" -> "Broader terms", "scanner" -> "Data", "id" -> 
     "Hypernym:WordData", "position" -> "1100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"happening\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "happening"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"natural event\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "natural event"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"occurrence\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "occurrence"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"occurrent\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "occurrent"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"information\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "information"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"dilate\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "dilate"}]], 
                    Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"elaborate\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "elaborate"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"enlarge\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "enlarge"}]], 
                    Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"expand\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "expand"}]], 
                    Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"expatiate\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "expatiate"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"exposit\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "exposit"}]], 
                    Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"expound\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "expound"}]], 
                    Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"flesh out\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "flesh out"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"lucubrate\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "lucubrate"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm]}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  
                  TemplateBox[{"\"total:\"", "14"}, "Row", 
                   DisplayFunction -> (RowBox[{#, " ", #2}]& ), 
                   InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", " "}], "]"}]& )], 
                  "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "statelist", {"count" -> "2", "value" -> "Meanings combined"}, {
         XMLElement[
         "state", {
          "name" -> "Meanings divided", "input" -> 
           "Hypernym:WordData__Meanings divided"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Meanings combined", "input" -> 
           "Hypernym:WordData__Meanings combined"}, {}]}]}]}], 
   Typeset`pod12$$ = XMLElement[
   "pod", {"title" -> "Rhymes", "scanner" -> "Data", "id" -> "Rhyme:WordData",
      "position" -> "1200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"none among common words\"", 
                 "\[NoBreak]", "\")\""}], 
               LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
               GrayLevel[0.6], StripOnInput -> False], 
              Global`TagBoxWrapper["Missing" -> "WordDataNotAvailable"]], 
             TraditionalForm], TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod13$$ = 
   XMLElement[
   "pod", {"title" -> "Lexically close words", "scanner" -> "Data", "id" -> 
     "LexicallyCloseWords:WordData", "position" -> "1300", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"Constance\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "Constance"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"instanter\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "instanter"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"instants\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "instants"}]],
                     Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"instinct\"", 
                    Global`TagBoxWrapper["Entity" -> {WordData, "instinct"}]],
                     Identity], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, StripOnInput -> False], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  StyleBox[
                   TagBox[
                    TagBox["\"insurance\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {WordData, "insurance"}]], Identity], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, StripOnInput -> False], TraditionalForm]}], " ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  
                  TemplateBox[{"\"total:\"", "5"}, "Row", 
                   DisplayFunction -> (RowBox[{#, " ", #2}]& ), 
                   InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", " "}], "]"}]& )], 
                  "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "statelist", {"count" -> "2", "value" -> "Up to 2-letter difference"}, {
         XMLElement[
         "state", {
          "name" -> "Up to 2-letter difference", "input" -> 
           "LexicallyCloseWords:WordData__Up to 2-letter difference"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Up to 3-letter difference", "input" -> 
           "LexicallyCloseWords:WordData__Up to 3-letter difference"}, \
{}]}]}]}], Typeset`pod14$$ = XMLElement[
   "pod", {"title" -> "Phrase", "scanner" -> "Data", "id" -> 
     "Phrase:WordData", "position" -> "1400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
            "\"for instance\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
             LineIndent -> 0, StripOnInput -> False], TraditionalForm]], 
          "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod15$$ = XMLElement[
   "pod", {"title" -> "Other notable uses", "scanner" -> "Data", "id" -> 
     "Entities:WordData", "position" -> "1500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> "Internet domains"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TemplateBox[{
                 TagBox[
                  TagBox["\"instance.biz\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {Global`InternetData, "instance.biz"}]], 
                  Identity]}, "Row", DisplayFunction -> (#& ), 
                InterpretationFunction -> (RowBox[{
                   StyleBox[
                   "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                   RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\"\[InvisibleSpace]\""}], 
                   "]"}]& )], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               TemplateBox[{
                 TagBox[
                  TagBox["\"instance.com\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {Global`InternetData, "instance.com"}]], 
                  Identity]}, "Row", DisplayFunction -> (#& ), 
                InterpretationFunction -> (RowBox[{
                   StyleBox[
                   "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                   RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\"\[InvisibleSpace]\""}], 
                   "]"}]& )], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               TemplateBox[{
                 TagBox[
                  TagBox["\"instance.info\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {Global`InternetData, "instance.info"}]], 
                  Identity]}, "Row", DisplayFunction -> (#& ), 
                InterpretationFunction -> (RowBox[{
                   StyleBox[
                   "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                   RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\"\[InvisibleSpace]\""}], 
                   "]"}]& )], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               TemplateBox[{
                 TagBox[
                  TagBox["\"instance.org\"", 
                   Global`TagBoxWrapper[
                   "Entity" -> {Global`InternetData, "instance.org"}]], 
                  Identity]}, "Row", DisplayFunction -> (#& ), 
                InterpretationFunction -> (RowBox[{
                   StyleBox[
                   "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                   RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\"\[InvisibleSpace]\""}], 
                   "]"}]& )]}], LinebreakAdjustments -> {1, 10, 0, 0, 100}, 
             LineIndent -> 0], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod16$$ = XMLElement[
   "pod", {"title" -> "Crossword puzzle clues", "scanner" -> "Data", "id" -> 
     "NYTCrosswordPuzzleClues:WordData", "position" -> "1600", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 RowBox[{
                   StyleBox[
                   "\"Case\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, StripOnInput -> False], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                   "\"Example\"", LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0, StripOnInput -> False]}], 
                 LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                 0]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"based on all New York Times crossword puzzles 1994 to \
2009\"", "\[NoBreak]", "\")\""}], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                  LineIndent -> 0, {FontFamily -> "Verdana", FontSize -> 10}, 
                 GrayLevel[0.5], StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod17$$ = XMLElement[
   "pod", {"title" -> "Scrabble score", "scanner" -> "Data", "id" -> 
     "ScrabbleScore:WordData", "position" -> "1700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
                TemplateBox[{
                  StyleBox[
                   TagBox[
                    RowBox[{
                    TagBox["10", 
                    Global`TagBoxWrapper["StringBoxes" -> "10"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], #& , SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], "\" \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"International English\"", 
                    "\[NoBreak]", "\")\""}], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, 
                   GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                 DisplayFunction -> (
                  RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                 InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                LineIndent -> 0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  StyleBox[
                   TagBox[
                    RowBox[{
                    TagBox["10", 
                    Global`TagBoxWrapper["StringBoxes" -> "10"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, {
                    FontFamily -> "Helvetica", FontSize -> Smaller}, 
                    StripOnInput -> False]}], #& , SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], "\" \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"North American English\"", 
                    "\[NoBreak]", "\")\""}], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, 
                   GrayLevel[0.6], StripOnInput -> False]}, "Row", 
                 DisplayFunction -> (
                  RowBox[{#, "\[InvisibleSpace]", #2, 
                    "\[InvisibleSpace]", #3}]& ), 
                 InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )], 
                LineIndent -> 0]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}]}]\
, Typeset`pod18$$ = XMLElement[
   "pod", {"title" -> "Anagrams", "scanner" -> "Data", "id" -> 
     "Anagram:WordData", "position" -> "1800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
               "\"ancients\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, StripOnInput -> False], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
               "\"canniest\"", LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0, StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "give instance"}, {}]}], 
    XMLElement["sources", {"count" -> "16"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
AdministrativeDivisionDataSourceInformationNotes.html", "text" -> 
        "Administrative division data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/BookDataSourceInformationNotes.\
html", "text" -> "Book data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/BridgeDataSourceInformationNotes.\
html", "text" -> "Bridge data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
BuildingDataSourceInformationNotes.html", "text" -> "Building data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/CityDataSourceInformationNotes.\
html", "text" -> "City data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
CompanyDataSourceInformationNotes.html", "text" -> "Company data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
GivenNameDataSourceInformationNotes.html", "text" -> "Given name data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
InternetDataSourceInformationNotes.html", "text" -> "Internet data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/LakeDataSourceInformationNotes.\
html", "text" -> "Lake data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
MountainDataSourceInformationNotes.html", "text" -> "Mountain data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/MovieDataSourceInformationNotes.\
html", "text" -> "Movie data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/OceanDataSourceInformationNotes.\
html", "text" -> "Ocean data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/RiverDataSourceInformationNotes.\
html", "text" -> "River data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/\
SurnameDataSourceInformationNotes.html", "text" -> "Surname data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/WordDataSourceInformationNotes.\
html", "text" -> "Word data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "18", "datatypes" -> 
    "HistoricalPeriod,Word", "timedout" -> "", "timing" -> "5.972", 
    "parsetiming" -> "0.119", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSP11119hci64dc2a85g0g000066fad6c6a6h802ei&s=58", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP11219hci64dc2a85g0g00006840070afad6c5c0&s=58", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 11, 39, 5.689039`8.507613886513969}, "Line" -> 
    120, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Definition:WordData", "Definitions", 1, 1, "Content"}, Typeset`open$$ = 
   False, Typeset`newq$$ = "give me some instance"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{158., {48., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   FrameBox[
    StyleBox[
     FormBox[
      StyleBox[
       StyleBox[GridBox[{
          {
           PaneBox[
            StyleBox["1",
             StripOnInput->False,
             LineIndent->0,
             LinebreakAdjustments->{1, 100, 1, 0, 100},
             LineColor->GrayLevel[0.5],
             FrontFaceColor->GrayLevel[0.5],
             BackFaceColor->GrayLevel[0.5],
             GraphicsColor->GrayLevel[0.5],
             FontFamily->"Verdana",
             FontSize->10,
             FontColor->GrayLevel[0.5]],
            
            BaseStyle->{{
              BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
              LineSpacing -> {0.9, 0, 1.5}, 
              LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
              Left},
            BaselinePosition->Baseline], 
           PaneBox[
            StyleBox["\<\"noun\"\>",
             StripOnInput->False,
             LineIndent->0,
             LinebreakAdjustments->{1, 100, 1, 0, 100},
             LineColor->GrayLevel[0.5],
             FrontFaceColor->GrayLevel[0.5],
             BackFaceColor->GrayLevel[0.5],
             GraphicsColor->GrayLevel[0.5],
             FontFamily->"Verdana",
             FontSize->10,
             FontColor->GrayLevel[0.5]],
            
            BaseStyle->{{
              BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
              LineSpacing -> {0.9, 0, 1.5}, 
              LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
              Left},
            BaselinePosition->Baseline], "\<\"an occurrence of something\"\>"},
          {
           PaneBox[
            StyleBox["2",
             StripOnInput->False,
             LineIndent->0,
             LinebreakAdjustments->{1, 100, 1, 0, 100},
             LineColor->GrayLevel[0.5],
             FrontFaceColor->GrayLevel[0.5],
             BackFaceColor->GrayLevel[0.5],
             GraphicsColor->GrayLevel[0.5],
             FontFamily->"Verdana",
             FontSize->10,
             FontColor->GrayLevel[0.5]],
            
            BaseStyle->{{
              BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
              LineSpacing -> {0.9, 0, 1.5}, 
              LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
              Left},
            BaselinePosition->Baseline], 
           PaneBox[
            StyleBox["\<\"noun\"\>",
             StripOnInput->False,
             LineIndent->0,
             LinebreakAdjustments->{1, 100, 1, 0, 100},
             LineColor->GrayLevel[0.5],
             FrontFaceColor->GrayLevel[0.5],
             BackFaceColor->GrayLevel[0.5],
             GraphicsColor->GrayLevel[0.5],
             FontFamily->"Verdana",
             FontSize->10,
             FontColor->GrayLevel[0.5]],
            
            BaseStyle->{{
              BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
              LineSpacing -> {0.9, 0, 1.5}, 
              LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
              Left},
            
            BaselinePosition->
             Baseline], "\<\"an item of information that is typical of a \
class or group\"\>"},
          {
           PaneBox[
            StyleBox["3",
             StripOnInput->False,
             LineIndent->0,
             LinebreakAdjustments->{1, 100, 1, 0, 100},
             LineColor->GrayLevel[0.5],
             FrontFaceColor->GrayLevel[0.5],
             BackFaceColor->GrayLevel[0.5],
             GraphicsColor->GrayLevel[0.5],
             FontFamily->"Verdana",
             FontSize->10,
             FontColor->GrayLevel[0.5]],
            
            BaseStyle->{{
              BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
              LineSpacing -> {0.9, 0, 1.5}, 
              LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
              Left},
            BaselinePosition->Baseline], 
           PaneBox[
            StyleBox["\<\"verb\"\>",
             StripOnInput->False,
             LineIndent->0,
             LinebreakAdjustments->{1, 100, 1, 0, 100},
             LineColor->GrayLevel[0.5],
             FrontFaceColor->GrayLevel[0.5],
             BackFaceColor->GrayLevel[0.5],
             GraphicsColor->GrayLevel[0.5],
             FontFamily->"Verdana",
             FontSize->10,
             FontColor->GrayLevel[0.5]],
            
            BaseStyle->{{
              BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
              LineSpacing -> {0.9, 0, 1.5}, 
              LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
              Left},
            
            BaselinePosition->
             Baseline], "\<\"clarify by giving an example of\"\>"}
         },
         AllowScriptLevelChange->False,
         AutoDelete->False,
         BaselinePosition->Automatic,
         FrameStyle->GrayLevel[0.84],
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "Rows" -> {{{Top}, {Bottom}}}},
         GridBoxBackground->{"Columns" -> {{None}}},
         GridBoxFrame->{
          "Columns" -> None, "Rows" -> {{True}}, 
           "ItemsIndexed" -> {{{1, -1}, {1, -1}} -> None}},
         GridBoxItemSize->{"Columns" -> {
             Scaled[0.045], Automatic, Automatic}},
         GridBoxSpacings->{"Columns" -> {0, 0, 0.8, 0}, "Rows" -> {{1}}}], 
        "Grid"],
       StripOnInput->False,
       LineSpacing->{0.9, 0, 1.5},
       LineIndent->0],
      TraditionalForm], "Output",
     ScriptLevel->0,
     FontFamily->"Times",
     FontSize->14,
     Background->None],
    BaseStyle->{Plain},
    FrameMargins->10,
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   WolframAlphaResult[
   "give me some instance", {{"Definition:WordData", 1}, "Content"}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.527206750018141*^9, 3.5272067619517345`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "you are smart", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox["\"You are smart (clever, ...)\"", Identity], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Response", "scanner" -> "Data", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "moutput", {}, {
        "\"Thank you! I still have much to learn, though I'm learning more \
every day.\""}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            InterpretationBox[
             Cell[
             "Thank you! I still have much to learn, though I'm learning more \
every day."], 
             TextCell[
             "Thank you! I still have much to learn, though I'm learning more \
every day."]], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "", "timing" -> "0.41", "parsetiming" -> "0.241", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP119419hci59hhhh07bbh00003fd9hc2i9623g6c7&s=20", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP119519hci59hhhh07bbh000042877e29c1ed0c5d&s=20", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 11, 40, 37.3120859`9.324424416819515}, "Line" -> 
    125, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Content"}, Typeset`open$$ = False, 
   Typeset`newq$$ = "you are smart"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{109., {28., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   FrameBox[
    StyleBox[
     FormBox[
      InterpretationBox[Cell["\<\
Thank you! I still have much to learn, though I'm learning more every day.\
\>"],
       TextCell[
       "Thank you! I still have much to learn, though I'm learning more every \
day."]],
      TraditionalForm], "Output",
     ScriptLevel->0,
     FontFamily->"Times",
     FontSize->14,
     Background->None],
    BaseStyle->{Plain},
    FrameMargins->10,
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   WolframAlphaResult["you are smart", {{"Result", 1}, "Content"}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5272067943872814`*^9, {3.527206831065016*^9, 3.5272068383960705`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "you are stupid", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Response", 1, 1, "Output", 
        "\"It's true that I have much left to learn, but I'm a fast \
learner.\""}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox["\"You don't know much.\"", Identity], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Response", "scanner" -> "Data", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "moutput", {}, {
        "\"It's true that I have much left to learn, but I'm a fast \
learner.\""}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            InterpretationBox[
             Cell[
             "It's true that I have much left to learn, but I'm a fast \
learner."], 
             TextCell[
             "It's true that I have much left to learn, but I'm a fast \
learner."]], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "you are stupid", "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "Miscellaneous", "desc" -> "a phrase", "input" -> 
          "*C.you+are+stupid-_*Miscellaneous-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "FutureTopic", "desc" -> "a question about Alpha", "input" -> 
          "*C.you+are+stupid-_*FutureTopic-"}, {}]}]}]}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "", "timing" -> "0.413", "parsetiming" -> "0.238", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP112619hci537ca64e0900000174e3id428hac6e9&s=30", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP112719hci537ca64e09000001efade962dec2035&s=30", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 11, 40, 53.6206797`9.481907159434032}, "Line" -> 
    126, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Response", 1, 1, "Output", 
    "\"It's true that I have much left to learn, but I'm a fast learner.\""}, 
   Typeset`open$$ = False, Typeset`newq$$ = "you are stupid"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{508., {48., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 FormBox["\<\"It's true that I have much left to learn, but I'm a fast \
learner.\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{3.5272068536323986`*^9}]
}, Open  ]],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Speak \"you are stupid?\"", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Input", "Input interpretation", 1, 1, "Input", 
        "Speak[\"you are stupid?\"]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "MInput", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Speak[\"you are stupid?\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            InterpretationBox[
             StyleBox[
              RowBox[{"Speak", "[", 
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"you are stupid?\"", SpanMaxSize -> Automatic, 
                    StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    "\"expression\"", ShowStringCharacters -> False, 
                    StripOnInput -> False], "\[NoBreak]", "\")\""}], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], {FontSize -> 11}, 
                    ShowStringCharacters -> False, StripOnInput -> False]}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> 1], "Grid"], "]"}], 
              ShowStringCharacters -> True, SpanMaxSize -> 1], 
             ReplaceAll[
              Speak["you are stupid?"], Labeled -> First], Editable -> False, 
             Selectable -> False], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/mathematica/ref/Speak.html", 
           "text" -> "Mathematica definition of Speak"}, {}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Example", "scanner" -> "MInput", "id" -> "Example", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Speak[\"you are stupid?\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"In[1]:=\"", {FontSize -> 8, FontColor -> GrayLevel[0.35]}], 
                StyleBox[
                 StyleBox[
                  RowBox[{"Speak", "[", "\"you are stupid?\"", "]"}], 
                  ShowStringCharacters -> True], {FontSize -> 11}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Right}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "", "timing" -> "0.432", "parsetiming" -> "0.202", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP7619hci693h651gfd600004d3659e751ga6628&s=19", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP7719hci693h651gfd600002c4ah9daab33466i&s=19", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2011, 10, 10, 11, 41, 34.6187265`9.291885984105567}, "Line" -> 
    128, "SessionID" -> 23116072224369095169}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Input", "Input interpretation", 1, 1, "Input", 
    "Speak[\"you are stupid?\"]"}, Typeset`open$$ = False, Typeset`newq$$ = 
   "Speak \"you are stupid?\""}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{205., {50., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"]
},
WindowSize->{1344, 633},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (November 7, 2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 7517, 156, 85, "WolframAlphaShortInput"],
Cell[8099, 180, 66093, 1088, 128, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74229, 1273, 105455, 1769, 85, "WolframAlphaShortInput"],
Cell[179687, 3044, 12873, 215, 128, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192597, 3264, 12919, 217, 45, "Input"],
Cell[205519, 3483, 12753, 214, 128, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218309, 3702, 4484, 90, 63, "WolframAlphaShortInput"],
Cell[222796, 3794, 1385, 43, 74, "Output"]
}, Open  ]],
Cell[224196, 3840, 6466, 135, 104, "WolframAlphaShortInput"],
Cell[CellGroupData[{
Cell[230687, 3979, 6730, 135, 85, "WolframAlphaShortInput"],
Cell[237420, 4116, 119, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237576, 4123, 6260, 131, 63, "WolframAlphaShortInput"],
Cell[243839, 4256, 1301, 37, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245177, 4298, 18222, 360, 83, "WolframAlphaShortInput"],
Cell[263402, 4660, 12836, 313, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276275, 4978, 99785, 1848, 66, "WolframAlphaShortInput"],
Cell[376063, 6828, 607, 16, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376707, 6849, 178850, 3492, 83, "WolframAlphaShortInput"],
Cell[555560, 10343, 6623, 166, 182, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562220, 10514, 15317, 373, 66, "WolframAlphaShortInput"],
Cell[577540, 10889, 1207, 25, 182, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[578784, 10919, 76216, 1473, 1153, "WolframAlphaShortInput"],
Cell[655003, 12394, 1509, 47, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[656549, 12446, 4234, 87, 244, "WolframAlphaShortInput"],
Cell[660786, 12535, 125, 3, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[660948, 12543, 220740, 4190, 85, "WolframAlphaShortInput"],
Cell[881691, 16735, 283, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[882011, 16747, 52314, 1046, 1433, "WolframAlphaShortInput"],
Cell[934328, 17795, 545, 11, 50, "Output"]
}, Open  ]],
Cell[934888, 17809, 6129, 123, 85, "WolframAlphaShortInput"],
Cell[CellGroupData[{
Cell[941042, 17936, 259, 9, 31, "Input"],
Cell[941304, 17947, 219, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[941560, 17958, 129264, 2628, 83, "WolframAlphaShortInput"],
Cell[1070827, 20588, 7347, 181, 182, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1078211, 20774, 158053, 3026, 83, "WolframAlphaShortInput"],
Cell[1236267, 23802, 6017, 161, 106, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1242321, 23968, 4030, 83, 63, "WolframAlphaShortInput"],
Cell[1246354, 24053, 755, 25, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1247146, 24083, 4659, 98, 83, "WolframAlphaShortInput"],
Cell[1251808, 24183, 174, 3, 30, "Output"]
}, Open  ]],
Cell[1251997, 24189, 5927, 120, 85, "WolframAlphaShortInput"]
}
]
*)

(* End of internal cache information *)
