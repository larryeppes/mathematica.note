(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     24124,        513]
NotebookOptionsPosition[     23425,        485]
NotebookOutlinePosition[     23767,        500]
CellTagsIndexPosition[     23724,        497]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Times", "@@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Prime", "[", "23", "]"}], ",", 
    RowBox[{"Prime", "[", "44", "]"}], ",", 
    RowBox[{"Prime", "[", "66", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.725078179467007*^9, 3.72507819765695*^9}, {
  3.7250795545933676`*^9, 3.725079559770051*^9}, {3.7250817550659657`*^9, 
  3.725081757287546*^9}}],

Cell[BoxData["5078023"], "Output",
 CellChangeTimes->{{3.7250781835098844`*^9, 3.725078199003909*^9}, 
   3.725079560671694*^9, 3.7250817581801805`*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
CiuCwpTVbnrV/HFZ+c/OaxVxGWECB4/ddNmXSpqgwEnd3aoqxvMUjH73j2d5
j+GS5z0zL8UGKUt59CDxUUrKH5cVNhsCALI1eYBorHTmm3ZVyko8+69MqRpU
bVFL2rIWZa2ix83yHjGwlizdqUlVjMy6ZkqeYptKs3rK6ktW8vSEuPXcS7FB
j2FwwWydsn7U4XkAgKQ2j2n7Q51XbMtaVtTF47KWjZzP7asqnGxqblopqgor
a8+sY1g1icHilCVP7aVcM+lGPHXrmZdiJGUFG/UbzXaUsmoCMwDgp9kEmE1S
Vqow+S08uv0/Y2htqHBPC8fAV84XUTKVR+l1tSBlyQOTkh3iyeshtvXkcZZP
uhgIg0cyd5SyaMsCgArqL6rEKkdrhs9J+CRaXcqSp6J6vnf8p9z4UPTjPrub
Lyv80V7pkb182fNl5f34y7Mw9jLKIPnnURV+qaf88X8xm+WlrOkinK8N4eFE
fy7ZdH5QLpi8S1EOY+HxmUeLvTplhb+lLjz2u3zWXAD4QMqQ3bL6UR/3u3j0
e1+C+E8nZ/xQddy2c79b4pXmgj0Sped+17brbV1aTJnm3eNFi6w+UHHEVGbK
kop6usszObii51G9YLJOnPuEZqQYZv6rPaQsiX3i6lM0AHwy6d6eGIIrC27F
yXt+WdXgrl9512T5jExbiPUY+sdzi+JFn5I7SO1XQW1rc6boFM6I+6M8EdbJ
LUxZP17y6YsaDKAqnZosfsGkL0W7SPbu20e134vdjH73Z1vVZvWnLQsAgD3g
V1oAAADW0LW00MEEAADQWNclSgcTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgLfxfTkeDoevy+PXFiDX
4/L1LOjx8v1uW7+dnu88nO9LizCsp3PKX9f93L/hZv7d9HQPK2+zdzv12qsO
wLrmm9jzc36tuC/eTweLcmu1t6Lefoeb83SXv4kLxTyux/y96Iqk3Led0m56
98s4mO5Ryql6hsNSVG+29fICZHtpfWfObMWVP16xy4KNOU37SVnD6SBladrd
e2/2ml5x/XfXjLLd8jteK+4nQvlgOoeurg7F5/Ku3oo7vHuBKR/Su7SQfw/3
rueqKzb/ZmWKJHxg3Rt73WGpk3MwxWWS1dnLm5JeXoBcv7kta/xQVGe89ilr
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
AABAI/8Peq6DhA==
    "], {{0, 272}, {802, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{802, 272},
  PlotRange->{{0, 802}, {0, 272}}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MGCD", "[", 
    RowBox[{"a_", ",", "M_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]", "=", 
        RowBox[{"EulerPhi", "[", "n", "]"}]}], ",", 
       RowBox[{"remainder", "=", "0"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"remainder", "=", 
       RowBox[{"Mod", "[", 
        RowBox[{"M", ",", "\[Phi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"GCD", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["a", "remainder"], "-", "1"}], ",", "n"}], "]"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MPrimeQ", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", "=", "False"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[LessEqual]", 
        RowBox[{"10", "^", "4"}]}], ",", 
       RowBox[{"res", "=", 
        RowBox[{"PrimeQ", "[", "n", "]"}]}]}], "]"}], ";", "res"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7250789388278694`*^9, 3.7250790387219477`*^9}, {
   3.7250790707617455`*^9, 3.725079124451948*^9}, {3.7250791822300587`*^9, 
   3.7250792236805525`*^9}, {3.725079271138321*^9, 3.7250792844848175`*^9}, {
   3.725079448940192*^9, 3.7250794534734173`*^9}, {3.7250799166885633`*^9, 
   3.7250799238406525`*^9}, {3.7250821513409305`*^9, 3.7250821592745733`*^9}, 
   3.7250822159569054`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"B", "=", "5"}], ";", 
  RowBox[{"n", "=", "317"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Pollar", "[", "n", "]"}]}], "Input",
 CellChangeTimes->{{3.7250782037532883`*^9, 3.725078523687481*^9}, {
   3.7250785968045063`*^9, 3.725078608216629*^9}, {3.7250786447476196`*^9, 
   3.7250787163785887`*^9}, 3.725078748661558*^9, {3.725078921115266*^9, 
   3.7250789332458973`*^9}, {3.725079136018178*^9, 3.7250791527340717`*^9}, {
   3.725079745168521*^9, 3.7250797550355425`*^9}, {3.7250798995323563`*^9, 
   3.725079904776087*^9}, 3.725080307847584*^9, {3.725080490930855*^9, 
   3.7250804909448647`*^9}, 3.72508151517142*^9, {3.7250815526871133`*^9, 
   3.7250815586143312`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"317", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7250791364154606`*^9, {3.7250797462552943`*^9, 3.7250797570299597`*^9}, 
   3.7250799056356993`*^9, 3.7250803093636637`*^9, {3.7250804919836035`*^9, 
   3.7250805131956973`*^9}, 3.725080825769105*^9, {3.725081511044488*^9, 
   3.7250815163872848`*^9}, {3.725081554600475*^9, 3.7250815596870947`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pollar", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"l", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"M", "=", "0"}], ",", 
      RowBox[{"a", "=", "2"}], ",", 
      RowBox[{"B", "=", "1"}], ",", 
      RowBox[{"g", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MPrimeQ", "[", "n", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"g", "\[Equal]", "1"}], ",", 
         RowBox[{
          RowBox[{"B", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"l", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Prime", "[", "i", "]"}], "\[LessEqual]", "B"}], ",", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"l", ",", 
               RowBox[{"Prime", "[", "i", "]"}]}], "]"}], ";", 
             RowBox[{"i", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"M", "=", 
           RowBox[{"Times", "@@", 
            RowBox[{"Thread", "[", 
             RowBox[{"Power", "[", 
              RowBox[{"l", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Floor", "@", 
                  RowBox[{"Log", "[", 
                   RowBox[{"#", ",", "n"}], "]"}]}], "&"}], "/@", "l"}]}], 
              "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"a", "=", "2"}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"GCD", "[", 
              RowBox[{"a", ",", "n"}], "]"}], "\[NotEqual]", "1"}], ",", 
            RowBox[{"a", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"g", "=", 
           RowBox[{"MGCD", "[", 
            RowBox[{"a", ",", "M", ",", "n"}], "]"}]}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"g", ",", 
       RowBox[{"n", "/", "g"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PollarFactorial", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"primeQ", "=", "False"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", "=", 
      RowBox[{"Pollar", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"primeQ", "=", 
      RowBox[{"And", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MPrimeQ", "[", "#", "]"}], "&"}], "/@", "list"}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"!", "primeQ"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"list", "=", 
         RowBox[{"Union", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Pollar", "[", "#", "]"}], "&"}], "/@", "list"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"primeQ", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"And", "@@", 
            RowBox[{"MPrimeQ", "[", "#", "]"}]}], "&"}], "/@", "list"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "list"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7250797764317656`*^9, 3.7250798358810678`*^9}, {
  3.725079960577793*^9, 3.725080085405307*^9}, {3.725080136210458*^9, 
  3.7250801909844313`*^9}, {3.725080351943959*^9, 3.7250804607794*^9}, {
  3.7250805085553946`*^9, 3.725080510114505*^9}, {3.725080573079306*^9, 
  3.7250805947387185`*^9}, {3.7250808893093157`*^9, 3.7250809844840364`*^9}, {
  3.725081020218463*^9, 3.725081020888939*^9}, {3.725081264050959*^9, 
  3.7250813594288235`*^9}, {3.7250814335205436`*^9, 3.7250814868624983`*^9}, {
  3.7250818656286335`*^9, 3.7250818767625556`*^9}, {3.7250820439545193`*^9, 
  3.72508204626016*^9}, {3.725082088278057*^9, 3.7250820928102818`*^9}, {
  3.7250821338094544`*^9, 3.7250821390301685`*^9}, {3.7250822212306585`*^9, 
  3.7250822240166407`*^9}}],

Cell[BoxData[
 RowBox[{"Pollar", "[", "600851475143", "]"}]], "Input",
 CellChangeTimes->{{3.7250817683253984`*^9, 3.7250817703498387`*^9}, {
   3.725081846176793*^9, 3.7250818949084673`*^9}, {3.725081936363964*^9, 
   3.725081957024665*^9}, 3.7250820659401627`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FactorInteger", "[", "600851475143", "]"}]], "Input",
 CellChangeTimes->{{3.7250822440218744`*^9, 3.7250822605816574`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"71", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"839", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1471", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6857", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.725082261711461*^9}]
}, Open  ]]
},
WindowSize->{520, 306},
WindowMargins->{{Automatic, 76}, {20, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 383, 9, 30, "Input"],
Cell[966, 33, 152, 2, 30, "Output"]
}, Open  ]],
Cell[1133, 38, 14473, 242, 141, "Input"],
Cell[15609, 282, 1491, 40, 149, "Input"],
Cell[CellGroupData[{
Cell[17125, 326, 713, 12, 50, "Input"],
Cell[17841, 340, 400, 7, 30, "Output"]
}, Open  ]],
Cell[18256, 350, 4369, 107, 430, "Input"],
Cell[22628, 459, 266, 4, 30, "Input"],
Cell[CellGroupData[{
Cell[22919, 467, 147, 2, 30, "Input"],
Cell[23069, 471, 340, 11, 30, "Output"]
}, Open  ]]
}
]
*)

