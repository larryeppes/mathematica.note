(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    110708,       2398]
NotebookOptionsPosition[    109296,       2349]
NotebookOutlinePosition[    109635,       2364]
CellTagsIndexPosition[    109592,       2361]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\:591a\:5c42\:795e\:7ecf\:7f51\:7edc", "Section",
 CellChangeTimes->{{3.7045046633615894`*^9, 3.704504666482806*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", "x_", "]"}], ":=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Power", "[", 
      RowBox[{"\[ExponentialE]", ",", " ", 
       RowBox[{"-", "x"}]}], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d\[Sigma]", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Sigma]", "[", "x", "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[Sigma]", "[", "x", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"d\[Sigma]", ",", "Listable"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"\[Sigma]", ",", "Listable"}], "]"}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\:8981\:6c42X\:662fm", "\[Times]", "r\:7684\:77e9\:9635"}], ",", 
    " ", 
    RowBox[{"Y\:662fp", "\[Times]", "r\:7684\:77e9\:9635"}], ",", " ", 
    "n\:662f\:9690\:85cf\:5c42\:795e\:7ecf\:5143\:7684\:4e2a\:6570", ",", " ", 
    RowBox[{"l", "-", 
     RowBox[{"1", "\:662f\:9690\:85cf\:5c42\:7684\:5c42\:6570"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MBPNN", "[", 
    RowBox[{"X__", ",", "Y__", ",", "n_", ",", "l_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", "0"}], ",", 
       RowBox[{"m", "=", "0"}], ",", 
       RowBox[{"p", "=", "0"}], ",", 
       RowBox[{"Error", "=", "100"}], ",", 
       RowBox[{"err", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"W", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"b", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"er", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"a", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"z", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\[Delta]", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\[Eta]", "=", "0.5"}], ",", 
       RowBox[{"iterMax", "=", "10000"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m", ",", "r"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "X", "]"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", "r"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "Y", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"W", ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "m"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"W", ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], "]"}], ")"}], "&"}], 
       "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"2", ",", 
         RowBox[{"l", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"W", ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "n"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"b", ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1"}], "}"}]}], "]"}]}], "]"}], ")"}], "&"}], 
       "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"l", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"b", ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "1"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                  "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
           "**"}], "**"}], "**"}], "**"}], "******)"}], "\[IndentingNewLine]", 
      RowBox[{"er", "=", 
       RowBox[{"{", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "r"}], "}"}]}], "]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Error", ">", "0.001"}], "&&", 
         RowBox[{"iterMax", ">", "0"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"iterMax", "--"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"z", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ".", "X"}], "+", 
            RowBox[{
             RowBox[{"b", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ".", "er"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"a", ",", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"z", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], "]"}]}], "]"}], ";", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"z", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"W", "[", 
                  RowBox[{"[", 
                   RowBox[{"#", "+", "1"}], "]"}], "]"}], ".", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", "#", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", 
                   RowBox[{"#", "+", "1"}], "]"}], "]"}], ".", "er"}]}]}], 
              "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            RowBox[{"l", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"a", ",", 
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"z", "[", 
             RowBox[{"[", "l", "]"}], "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Error", "=", 
          RowBox[{
           FractionBox["1", "2"], 
           SuperscriptBox[
            RowBox[{"Norm", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "l", "]"}], "]"}], "-", "Y"}], ",", 
              "\"\<Frobenius\>\""}], "]"}], "2"]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"err", ",", "Error"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"PrependTo", "[", 
          RowBox[{"\[Delta]", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", "l", "]"}], "]"}], "-", "Y"}], ")"}], "*", 
            RowBox[{"d\[Sigma]", "[", 
             RowBox[{"z", "[", 
              RowBox[{"[", "l", "]"}], "]"}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"PrependTo", "[", 
            RowBox[{"\[Delta]", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Transpose", "[", 
                 RowBox[{"W", "[", 
                  RowBox[{"[", 
                   RowBox[{"#", "+", "1"}], "]"}], "]"}], "]"}], ".", 
                RowBox[{"\[Delta]", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
              RowBox[{"d\[Sigma]", "[", 
               RowBox[{"z", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "]"}]}]}], "]"}], "&"}], "/@", 
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"l", "-", "1"}], ",", "1", ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"W", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "-", 
              RowBox[{"\[Eta]", " ", 
               RowBox[{
                RowBox[{"\[Delta]", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ".", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", 
                   RowBox[{"#", "-", "1"}], "]"}], "]"}], "]"}]}]}]}]}], 
            ")"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"2", ",", "l"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"W", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"\[Eta]", " ", 
            RowBox[{
             RowBox[{"\[Delta]", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ".", 
             RowBox[{"Transpose", "[", "X", "]"}]}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"b", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "-", 
              RowBox[{"\[Eta]", " ", 
               RowBox[{
                RowBox[{"\[Delta]", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ".", 
                RowBox[{"Transpose", "[", "er", "]"}]}]}]}]}], ")"}], "&"}], "/@", 
          RowBox[{"Range", "[", "l", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"a", "=", 
          RowBox[{"{", "}"}]}], ";", 
         RowBox[{"z", "=", 
          RowBox[{"{", "}"}]}], ";", 
         RowBox[{"\[Delta]", "=", 
          RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "b", ",", "err"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.704504681524488*^9, 3.7045047384229*^9}, {
   3.7045048297937984`*^9, 3.704504936558627*^9}, {3.704504990567988*^9, 
   3.704505052070671*^9}, {3.7045051226758184`*^9, 3.7045052360303288`*^9}, {
   3.704505308356699*^9, 3.704505556792152*^9}, {3.7045056057799463`*^9, 
   3.7045056075652156`*^9}, {3.70450564068674*^9, 3.7045057210568233`*^9}, {
   3.7045057710363207`*^9, 3.7045057904110813`*^9}, {3.7045059311380367`*^9, 
   3.7045059312291007`*^9}, {3.704505984942249*^9, 3.7045059951214786`*^9}, {
   3.7045060486294837`*^9, 3.7045060527564135`*^9}, {3.7045060947402353`*^9, 
   3.7045063220546856`*^9}, {3.704506361349594*^9, 3.7045066089494534`*^9}, {
   3.704506645064108*^9, 3.7045066672448764`*^9}, {3.7045067551963263`*^9, 
   3.7045069512575808`*^9}, {3.7045069822535954`*^9, 
   3.7045071640056877`*^9}, {3.7045072483606014`*^9, 3.704507257078792*^9}, {
   3.7045073061646576`*^9, 3.704507383316471*^9}, {3.7045074957282934`*^9, 
   3.704507547824296*^9}, {3.704507588795397*^9, 3.704507683254486*^9}, {
   3.7045077174157505`*^9, 3.704507729732498*^9}, 3.704508423495247*^9, {
   3.7045085567909207`*^9, 3.704508556989063*^9}, {3.704508836966937*^9, 
   3.704508841887412*^9}, {3.704509155180931*^9, 3.704509174089361*^9}, {
   3.7045092762369127`*^9, 3.704509277455778*^9}, {3.7045096624051905`*^9, 
   3.7045097471323724`*^9}, {3.7045099704729977`*^9, 3.704509997907485*^9}, 
   3.704510442230109*^9, {3.7045118255275517`*^9, 3.7045118269525647`*^9}, 
   3.7045163918560762`*^9, {3.7045167734330945`*^9, 3.7045167936494513`*^9}, 
   3.7051148249047956`*^9, 3.705114917636331*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"predict", "[", 
   RowBox[{"W__", ",", "b__", ",", "X__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"z", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"a", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", "W", "]"}]}], ",", 
      RowBox[{"r", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"X", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"er", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"er", "=", 
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "r"}], "}"}]}], "]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"z", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"W", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ".", "X"}], "+", 
        RowBox[{
         RowBox[{"b", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ".", "er"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"a", ",", 
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"z", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "]"}]}], "]"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"z", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", 
               RowBox[{"#", "+", "1"}], "]"}], "]"}], ".", 
             RowBox[{"a", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"b", "[", 
              RowBox[{"[", 
               RowBox[{"#", "+", "1"}], "]"}], "]"}], ".", "er"}]}]}], 
          "]"}]}], ")"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", 
        RowBox[{"l", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"a", ",", 
       RowBox[{"\[Sigma]", "[", 
        RowBox[{"z", "[", 
         RowBox[{"[", "l", "]"}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "[", 
      RowBox[{"[", "l", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.7045104465651875`*^9, {3.704511815312296*^9, 3.704511864470212*^9}}],

Cell[CellGroupData[{

Cell["\:7ecf\:8fc7batch\:7684\:795e\:7ecf\:7f51\:7edc\:8bad\:7ec3", \
"Subsection",
 CellChangeTimes->{{3.705114711641143*^9, 3.7051147568063087`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}], "/", "9"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"MBPNN", "[", 
    RowBox[{"X", ",", "Y", ",", "8", ",", "3"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"predict", "[", 
   RowBox[{
    RowBox[{"res", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"res", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "X"}], "]"}], "*", 
  "9"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"res", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7045084552447987`*^9, 3.704508472471032*^9}, 
   3.7045094613423862`*^9, {3.7045096063303638`*^9, 3.704509606666603*^9}, {
   3.7045099314803033`*^9, 3.704509959656315*^9}, 3.704510064911091*^9, {
   3.704510107160082*^9, 3.7045101136046576`*^9}, {3.7051149130819883`*^9, 
   3.705114945318523*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.0469810365263028`", ",", "1.8894884710957915`", ",", 
     "3.0587772891358616`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6.99932173264494`", ",", "8.153130078506479`", ",", 
     "8.65269808110036`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7045099510792227`*^9, 3.7045099785257187`*^9}, 
   3.7045100145763226`*^9, 3.704510093575432*^9, 3.7045101509782033`*^9, 
   3.7045108023540926`*^9, 3.7045120239644947`*^9, 3.704512077048197*^9, 
   3.704542171227599*^9, 3.7045774363416543`*^9, 3.705114703723002*^9, {
   3.7051147958953657`*^9, 3.705114808214056*^9}, 3.7051148924111977`*^9, {
   3.705114926265243*^9, 3.705114958422423*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1: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
t3ogUelt6v2PZLmt0M7njpn/nqy5FbnKG96L2ln+Vqxz+/j9+yuWvxW67/7O
t/6P5W/FTxeTo8dbWf5WnPyTuGHIM5a/FbHRgqnej1n+VlzzXDP1UgvL90T8
srx1GvdZvicSHnnvCrvD8j1x+2D1wFvNLN8TL3WSRNo3Wb4nBO4PF8deZ/me
OG57qeduA8v3xKCUzXd0LrN8TyxOrz8TfZHle+Hh8RGVzbUs3wtq+dGnJpxj
+V5Y/H7S1cAzLN8LZ7+g9WI1y/fCQH/5P8pVLN8LOWsPjXKpYPleSHD1m3e0
jOV7gWcoseg+wvK9wfnq4br8MMv3xpYuLZ/sYpbvjeCPY71bDrB8bzRwCuw0
97N8b2xY9Xf+1gKW7w3lI+m9j+xi+d44eHpP1ec8lu8N+dHCdXMlLH8bKjvq
m0NzWf429DTwZp3is/xtUOLa+v/KZvnbcNYqNtMgk+Vvw8s474SQNJa/DZ38
OMuKFJa/Dc6jZ3z5lMjyt2HBycfuOvEs3weF/buKXWNZvg8O7f5SnRfF8n2Q
0G0ouBXO8n0gjVw1t38oy/dBlAMvf1EQy/eB5qGky77+LN8HXYb7ywp8Wb4P
nMu32N7axvK3Y4GH8Rk5L5a/HaXba+/P8GD52+GRs6nYfgvL345qM4FuijPL
3462yo9bjjuy/O3g5n8ye7SJ5W/Hoa3qj3rZsvzt8B7zb7j2Bpbvi3AbzZ/m
VizfF4lrBsX4WbB8XwivmBfxzVm+L/TGBPpVrGT5vlCaNuTBbVOW74s5W461
dBqzfF9Mq3obMHgpy5fl5a3br23E8nego3/01mWLWP4OJAT3ObvJgOXvwOn7
0Xv957L8HaiRJiunzGb5OzDxwKnBO2ey/B0YZ1PJOzKd5e9Aaoyq9JwOy9+B
lVuitW5OZvl+cD2dqfdkIlnJDw9K3p5u12Tv44enl+bWfR1L1vODdKja0p7R
7P380OfbfIO+amRLP2SuMiocpMre1w+jrO/FKymT/fww7nTxLZWh7P39sC/T
PUtVkczzQ7Dp6SrVAayPH1Iv2JgN70cu88Py5R8wrA/r54fBobq7FeXIzX44
63bTsV+PiPr6wS02MfrvL3KnHzp29vv97QdZzh9/vijeffuVrOSPZs11/Z52
kjX9sWlSVvbNj2Q9f4x142w/944Mf+QUvtpV+oZs6Y+lytHjpC/Jzv6Ytrj/
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
E+FZv5FjmkDmJWL/24hTXiFkSSJm8DNfpXmRCxLR/FRz8CEHcnEifh67bnDF
glyWiFLeVP8Xy8jVifDOfH7u91xyrez7j+JPVdEhN8jer/NTjbY6uTkRW78U
xRgOJbckgqsQFLa2N7k1Eb97D61w+p5F+0/E6vAF87e3kzsTEXqoenDEY3KX
7PkONkuSbpLlkvDzTOvdrDqyQhJuL5r6QFRJVkpCftAAi11FZLUknOpjt3xf
HlkzCae9f144kEnWTkLSp8vNRRyyXhI0Q46EFgeSDZJQ7SWsLfIgIwkHczwr
D9iRzZLw5tsoh33mZMskfDu5s3bXErJtEpb+/u+deDbZOQmKp9//x5tE9kyC
c/HRSq4a2S8J/4ZN84gdRA5Lgku1S6/gv5m0/yRMOr4h2+szmZsECxPFUY4v
ybwkZF/LKLJ4QJYkYXV6q/HSa+SCJNzMU/456yy5OAnB1TOvjS8jlyWhabrp
ZaX95OokbC1y//Y3l1ybBPWxexw/cMkNSeg6ID/oYSS5OQkz7Ev6XvIltyQh
ZO5emzIXcmsSdr+T67/TmtyehKLrTzWSVpA7k9Czb80h34XkriSs4nsc26hL
lktGSaeRATTJCsnYpf1xjbYKWSkZ00Qpv4b2I6slQ9ldy+RnVwbtPxmVvg/n
PXtP1k7GGbWaR/XPyHqy589uMzh8i2yQjHt3HTbl1JORDBgtMws9STZLxsyK
/YMcD5Etk5Fozz+ybBfZNhku48fN1+aRnZMRnL3h+OAEsmcyxpctn/Q1mOyX
jC3vf+1s8SSHJSP7deS4c/Zkjux5rndO7F9L5sr6j+63LXUpmZcMXuHIFTv0
yZJkHFk7YP2GKeSCZNj9eyheNJpcnIwTw5PHTRhMLkvGL+P+nQpy5OpkVIdZ
q3Z+Saf9J+NfpYv4wStyQzI+dGrEnm8hNyejsDvqXtF1cksy1tls2c87R25N
Rtm405/Dj5Pbk1H30u3qlkJyZzI6ecZz1orJXcmYZTzbYEEaWS4Fo/UHtGlF
kxVSsDM3f94wP7JSCpSDapb+dSWrpaBcrD/owwayZgq2uzfufGRG1k6BY53p
n6uLyHopCO9wmXt6BtkgBeYhDywOjycjBXvkHKx3DSebpSBvyZ7VvP5kyxTU
3lhtlNidRvtPweBh/eeGfyQ7p+DVWH+DHa1kzxSo52mt87hD9kuBUUFVitNl
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
IUGPPTvIzpkosFk94PtLsmcmrqlXKSU/Ivtl4sXx1i9jmslhmXhs2lFWdYnM
yURud89qmzNkbiauv9W81F1G5mXi3WK3sYUHyZJMzDFs3GCVTy7IhNuGDTv6
8snFmZDqf/M+m0Iuy8SVm7krI6LJ1ZlYHaChaBhIrs1E0T3fit5e5IZMZE3Z
hJtO5OZMPBxbVrHbmtySiQ/yBkOCVpFbZd+/6bjlWpDbM7F50v1I3XnkzkwE
Btrwhk0nd2XiQveTrO7xZLksdD9XDGsfSVbIwouF8eaPB5OVslA06bbinT5k
tSysaEw71fSLQ/vPwqfIOetvdZC1s+Babv7owSuynuz3upYW/z0mG2TB91dZ
+ddbZGTBMP6x/IAGslkW3hTMNZ14jmyZhZOHx4UuqyTbZgFJHWKPQ2TnLHAP
dxdnF5A9s+C2IuPQWRHZLwsJi97ld2aQw7IQOceao51A5mThZnmfDe7hZG4W
jLSmjynaQeZlIbC9+/ZHd7IkC+bu4qgFDuSCLNgOn6iWZkUuzsI4/qkDz83I
ZVk4U+o3aeEScnUW9gfYiqVzybVZsF8a+btnGrkhC6vvPl23dQK5OQsW62Pz
7qmRW7Lw0tnuntlQcmsWrHWce9f1JbdnQaVN3jiqK5b2n4UrS9e7c16Ru7KQ
Vh64Les2WS4b2T8mbjh4nqyQjZ2BIyc0lJKVshG45uetr1KyWjYs413ddFLI
mtl43e9Ti2cQWTsbP9u0Zpa7kPWyITDjevS1IBtk4051doyrIRnZ+KhaEnJV
h2yWjSkXDdYuHEm2zMbg81L5E/JkW5nPjZUu+BJD+8/GoeWDBzU8J3tm49Xl
IjvnG2S/bJyrnpjY+ww5LBuO5UdTjxaTOdlYkrTdy01E5mZjzcaoCVqJZF42
Gms+VXz0J0uy8aa5Sb1uM7kgG8csJzjsXkMuzsaiila/pEXksmysNe6xC9Eh
V2fj1nzXEf4jybXZONv4uTC4L7khG7X2yfKJX6Np/9nIC/oyJ7+N3JKNgm9y
s881kVtl31sjuOftWXJ7Nn6dHJirUUruzEbf4SE/nfLIXdm4PN9tYjGXLMdD
yPuIkb9DyPI89Nyyvb3RnazAQzYn1+rcerIiD7XCOtGMZWQlHlSue+wq1iMP
58FOVcF9ugZZjQf/svEfTg0mq/OwZ6HOrHV/oujvh4fKhszZX96RtXg4+fvk
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
qHE+ymSJEO+3XtX/3YucL8TeLynvRJ+30/0X4oq8m8GSNnKhEBmhA0Z+ayYX
CxF9emLsiVpyqRBmjxy9EsrIZUI8S3S96VhArhTCROnJQRMeuVqIc7FB7+dz
yDWyfafeE873I9cKYbGzeKexM7leiIYXoi57S3KDEOmWKws5IDcK8W23p/i4
HrlZCH3bXdc+aZLvCtHxKHuewTByixBSl/Y7mb3IT4Rw7Gexs+OzD91/Wf9r
25IcX5BfyvLyX6c9uE1uF0Lefmuh40XyByFsnuVe66ggdwox8c+oH5mF5G9C
+Gbu1DDIJXcJURJ8YcmnJPIfIf4enGdRFkKWy0WWToFpzFayfC6OaxaNs7Ul
K+TidPPXpsUryYq54B+YsX7mQrJSLgYZyO2dPo08PBeDrYeVz1Unq+Wi6u/A
2FWDyeq5+B0pktv2dxvd/1w8s3acKe4ga+VijeMA+aZWsnYurE6bhCrfJk/P
xY03p+JcLpL1cmF/TkW9ppKsn4tH4T1GEw6SDXLRc27CfwIx2TAXnntn9hqW
SkYuTpU050gjyCa5WPq4PFPXh2yWi6enEz42OpLNc/F6/eeSUAuypez9jQ6d
0V1Kts6Fa5HjmI7ZZNtcDLA6U3dGi+yQiy37AosEI8jOudi0d/6lEAWyWy5C
e59Sce/2pvufi4qph9KdPpB9cqE779ykLc/IfrlI7Cl+FNBMDsrFyrEa+zMv
kMNykdJ9L7SikhyVi9VXE9a9PEjmyL634Lm2ppScKHue4d4fHulkbi6K0uIq
qqPJGbk4obPQVtWPzMvFjIqkp1GuZKGsb4WGYYc1WZKLyUfrfXxWkPNzEaQ9
2/PbAnJBLj6VTJ6SMp1cmIszl1z2aWmQi3OxVaPwduMwcmkuvP2OlcXKk8ty
MSTbdO7in150/3NhGqhr1/cduToXZxfrqLY8Idfkor+hnOuJJnJtLhZ2hhvs
ukCuz4WR6uac7BPkhly0Hgh3zygmN+YitU14RLCT3JyLbqto1wNZ5Lu5ML4n
F10XR27JhWrep+9vgshPcjF25sjLap7kVtl8gvnr9fbkl7L71+FiIV1Lbs/F
m3nTu9uXkj/I7hMv7vmyueTOXIw+sqDroDb5Wy4mndZdrKpO7pL93sugKHMo
+Y/s7+Pn3JlKfchyItyaLn8z/4cn3X8Ryr3io+a8IyuIEHYwZ87dp2RF2e8j
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
7eCN0UL/+edTpv1WWAr952iN7/HK8FFC//n9nLfLcrWF0H9+vc9YfJ85Uug/
Rz0fBJqNHCH0n6PHY3uU6JoL/efXe9+Ld83Dhf5zlBQQs/6FqdB/jo68+Lv8
2jCh/xx1zvl6WzlU6D9H7iOskg4NEfrPf//awy83mQj95+hDUX7MwsFC/zky
vnMmY+Igof8cHW/WoiEDhf5zNFnz9MQuxkL/+Xl+uvDU9/5C//l5c60Ie9VP
6D8/v+HqRXeMhP7z88md2H3OUOg/R0X/VjGivkL/OUr7YzvqQB+h/xxtH15p
9p+B0H+OfMwM47x6C/3nz1fBjdUzegn950ivWpRi01PoP0ebtm9dMFBf6D8/
fxl9N3btIfSfo2c3FzW1dhf6z593rd+vP+oK/efnsbXIvqyb0H+Orlkkqd/p
KvSfPx/u1tbZXYT+czRzwsoHnI7Qf46sS348Od5Z6D9/PoyuOB3QFvrPUdjU
Xf22aQn95+h3tLbPGk2h/xzt8LDsuqST0H+OVvfPNXHREPrP0eXtO1iHjkL/
OdI3to8a3UHoP0d+b++9Mmkv9J+jXpm/Eg3Uhf7z85gQe0WnndB/jjQv+Uxr
pyb0n6Mhi+3G//jrhv5z9KSsNq7uD3yNPy+ZExa+boPzODq6o13o81b4JkeD
ajW7P2iB8/n9v22sdfs3XMD/9/96r8n9BRfyf0+8OjLrJ1zEUUxW9eLUH3Ax
R6ui3erZ7/ADfr92V9ZImuES/u8/5zud+AY/5mj3wQOdjjbBpRxFlDmNPvIV
fsafz3TPvP2NcBlHp2olWaFf4HKOZuwt77KzAa7kaF/U63vbPsOv+Pth4r6G
zfVwNUfTy2O2BtTBbziyK3q+3P8TXMNRcKR5xrqP8HuOnuZ4rlxTC9fy86Y1
PsTvA/yJo+Lp8c2+7+F6jr4vdXi88h3cwNFXV80eK2vgRo4G297KXvEWbuLP
vxtdXfEGbuboea3b0JWv4R8cbdxQ8HVlNfyLvx+WBQ5YVQW3cOTpM/Ss3yu4
jaN2w7OYNS/hv/zzRnz+tq4SVlPRxvVsin8FrK6iuqenrwWUwx1U1Pru8Zgt
L2ANFXV+0tAluAzWVNHFzyXTdj6HtVW0WzarOvQZrKOioPWjy/c/hbuqaM5n
d5sjpbCuiqJeRDTEPoH1VBT6V6Z54jGsr6K5jv5hkkdwLxV5sbc82RLYQEXn
7IPizzyE+6qoZYLHiPMPYCMVba6zH3zlPtxfRR9TfwbfKoaNVWTb4jmy+B48
SEW9/SbS0yLYREVLRJvOvboLD1WR+tKC0NpC2FRFMw70TG+6A5upqFR79Pg/
BfAIfj2+1w/UFGyhor7r+q3pcRu2VNFDZULnAfmwlYpyv4/QMb8F26joWVHW
2nE34bEqesSpm0y5Aduq6Ldxnd3cPNhOReENjune12F7FYU8f7VrwzXYQUVW
V+NOhVyFSUX5J8aOPpQLO6po5DaxfuIVeIqKFoYlzU/Ogafx+/mzY0P2ZXiG
itrMs94WXIKdVcREhtg8vwi7qOiy2KL6QzbsqiKDn9z7XxdgNxVZzM6eri14
noqMVo9pb5QFu6tov8lvA4vz8EIVtd/xPIIyYQ8VLd6mmjf/HLxERdfs7YP8
MmAvFf3rsOnb9rOwt4rCjHsWRaXDy1U07UeHFnkavEJFXdv33JedCvuq6EK5
4ap7Z2A/Fb0b2iirPg2v4ec/eY31j1PwOhUdtvYaoCN4g4qmZ8tXDkqBN/Lr
baWrNj4ZDlCR9o3dzXNUcKCKtsfk02oO3qKi4W8u1exm4SAV9ephXZ2ghIP5
83RM2/qsAg5Rke67Xi/vyOGd/PuqRr2qZuDdKjpycMTYFhkcqiIb13c1PQSH
qYiejf40UgqHq2hM909TZ0jgAyry6/j+5woxHKGi6w/+/Nslgg+r6JBUy/tk
EhypIp0rr7tfOAlHq2hQqLfho0Q4VkUm3h4hn0/Ax1R0tzzZQltwPD+PR4fY
DkuAE1QUYHk6YcpxOFFFl3Z1dV4RDyepyHWe+bzQOFisIkPxi3TpMViqogne
TcuuHoUZFS3LcF1VGQsrVFRy7c611hiYVdHSorEbDAWr+M+bbvWfEA2nqKjc
0eumZxR8WkW3TtxetzMSTlVRx5zDfpIjcLqKEtz2X7h2GM5QkaJXzKLqQ3Cm
ik5U7HVRF5ylIut94+JNIuBsFU3ueNhi+kH4korW+s83XHcAzlFRaoX/kqj9
Qv9V1LTvfF1GuNB/FdWk/X1Quk/ov4oKsoZ3+B0m9J+/PzS7HeknOJ+/30Yc
Wum4V+i/ip5nB0atDhX6r6KYeSrNqD1C//n77drf0szdQv/59b+3sKlsl9B/
FX3wPrT8306h//znA/8bMFTwY/59u3+ymL1D6D//e54PoreECP1X0cvw3w7i
7UL/+fv58bRJ+cFC/1XUU3o0pn6b0H8VidwvjOop+JWKTm+NGuAQJPRfRXbx
371XbxX6z6/nwrufY7cI/VfR5y0193I2C/1X0fcrg37XBAr95+8r7eVbuwn+
xM/X3GCy+0/oP38/HJ++ZFWA0H8VfWo4dTN2k9B/FX09sGN77kah/ypalZS4
u9Zf6L+KTga/fKQv+IeK1u8bunnyBqH/KkoZ5bZi43qh/yq6336cTLRO6D9/
35y8OPzuWqH/KqoSp7f7uUbofzJF3/s1dIhg9WTa+iPw5PzVQv+TyUStxSPM
T+h/Ml19uW7VuVVC/5NpXYLiWrWv0P9kinHa7asrWCeZEnUrFtJKof/J1GqX
cDxghdD/ZHLSizKW+7hN+h91aQHt
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 2952.}, {0, 0.04469996654240489}},
  PlotRangeClipping->True,
  PlotRangePadding->{{59.04, 59.04}, {0.0008939993308480979, 
   0.0008939993308480979}}]], "Output",
 CellChangeTimes->{{3.7045099510792227`*^9, 3.7045099785257187`*^9}, 
   3.7045100145763226`*^9, 3.704510093575432*^9, 3.7045101509782033`*^9, 
   3.7045108023540926`*^9, 3.7045120239644947`*^9, 3.704512077048197*^9, 
   3.704542171227599*^9, 3.7045774363416543`*^9, 3.705114703723002*^9, {
   3.7051147958953657`*^9, 3.705114808214056*^9}, 3.7051148924111977`*^9, {
   3.705114926265243*^9, 3.705114958451639*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["debug area", "Section",
 CellChangeTimes->{{3.713789025780161*^9, 3.713789028394615*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Xs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ys", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}], "/", "9"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.71378904191969*^9, 3.713789043018382*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"t", "=", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}]}], ";", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{"8", 
          RowBox[{"Cos", "[", "t", "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}], "]"}]}]}], 
       ";", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{"8", 
          RowBox[{"Sin", "[", "t", "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}], "]"}]}]}], 
       ";", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", 
         SuperscriptBox["x", "2"], ",", 
         SuperscriptBox["y", "2"], ",", 
         RowBox[{"x", " ", "y"}]}], "}"}]}], ")"}], "&"}], "/@", 
    RowBox[{"Range", "[", "100", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"t", "=", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}]}], ";", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{"4", 
          RowBox[{"Cos", "[", "t", "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}], "]"}]}]}], 
       ";", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{"4", 
          RowBox[{"Sin", "[", "t", "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}], "]"}]}]}], 
       ";", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", 
         SuperscriptBox["x", "2"], ",", 
         SuperscriptBox["y", "2"], ",", 
         RowBox[{"x", " ", "y"}]}], "}"}]}], ")"}], "&"}], "/@", 
    RowBox[{"Range", "[", "100", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"{", 
       RowBox[{"Boole", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], ">", "0"}], "]"}], "}"}], ")"}], 
     "&"}], "/@", 
    RowBox[{"Range", "[", "100", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"{", 
       RowBox[{"Boole", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "<", "0"}], "]"}], "}"}], ")"}], 
     "&"}], "/@", 
    RowBox[{"Range", "[", "100", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xs", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"x1", ",", "x2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ys", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"y1", ",", "y2"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.713789477310769*^9, 3.71378966574477*^9}, {
  3.713790469601111*^9, 3.713790484793008*^9}, {3.713790586565845*^9, 
  3.7137905923095293`*^9}, {3.7137908448304977`*^9, 3.71379087862213*^9}, {
  3.713790992935629*^9, 3.713790996845984*^9}, {3.713791049376431*^9, 
  3.713791067396641*^9}, {3.713791180248618*^9, 3.7137911910945063`*^9}, {
  3.713791978920238*^9, 3.713792046571946*^9}, {3.713792099459036*^9, 
  3.713792106894536*^9}, {3.7137929598513193`*^9, 3.713792963711323*^9}, {
  3.7137940076472178`*^9, 3.7137940097999973`*^9}, {3.7137961262091503`*^9, 
  3.7137961360857897`*^9}, {3.713796405643915*^9, 3.713796413377572*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"batch", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "4"}], ";", 
  RowBox[{"l", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "=", "0"}], ",", 
    RowBox[{"m", "=", "0"}], ",", 
    RowBox[{"p", "=", "0"}], ",", 
    RowBox[{"Error", "=", "100"}], ",", 
    RowBox[{"W", "=", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"b", "=", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"er", "=", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"a", "=", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"z", "=", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"\[Delta]", "=", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"\[Eta]", "=", "0.03"}]}], "}"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "r"}], "}"}], "=", 
   RowBox[{"Dimensions", "[", "Xs", "]"}]}], ";", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p", ",", "r"}], "}"}], "=", 
   RowBox[{"Dimensions", "[", "Ys", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"W", ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "m"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"W", ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], "]"}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", 
     RowBox[{"l", "-", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"W", ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "n"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"b", ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1"}], "}"}]}], "]"}]}], "]"}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", 
     RowBox[{"l", "-", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"b", ",", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "1"}], "}"}]}], "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
              "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
      "**"}], "**"}], "**"}], "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"er", "=", 
   RowBox[{"{", 
    RowBox[{"Table", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "batch"}], "}"}]}], "]"}], "}"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.713789059681497*^9, 3.713789295048976*^9}, {
   3.7137893420776443`*^9, 3.713789368688233*^9}, 3.7137906307192917`*^9, 
   3.713791072352247*^9, {3.7137914967819633`*^9, 3.713791497510294*^9}, {
   3.713791584534093*^9, 3.713791584731641*^9}, {3.7137931050410357`*^9, 
   3.713793147186668*^9}, 3.713794161730557*^9, {3.7137959657172947`*^9, 
   3.713795966738077*^9}, {3.713796202048334*^9, 3.713796202296815*^9}, {
   3.71379628517356*^9, 3.713796285387701*^9}, {3.71379635519031*^9, 
   3.7137963561914883`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"iterMax", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"err", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minerr", "=", "Error"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"MatrixPlot", "[", "#", "]"}], ")"}], "&"}], "/@", "W"}], ",", 
    "iterMax", ",", "minerr"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"RegionPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"First", "@", 
      RowBox[{"First", "@", 
       RowBox[{"predict", "[", 
        RowBox[{"minW", ",", "minb", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "xx", "}"}], ",", 
           RowBox[{"{", "yy", "}"}], ",", 
           RowBox[{"{", 
            SuperscriptBox["xx", "2"], "}"}], ",", 
           RowBox[{"{", 
            SuperscriptBox["yy", "2"], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"xx", " ", "yy"}], "}"}]}], "}"}]}], "]"}]}]}], ">", 
     "0.5"}], ",", 
    RowBox[{"{", 
     RowBox[{"xx", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"yy", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Error", ">", "0.000001"}], "&&", 
     RowBox[{"iterMax", ">", "0"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"iterMax", "--"}], ";", "\[IndentingNewLine]", 
     RowBox[{"sample", "=", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "[", "r", "]"}], ",", "batch"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"X", "=", 
      RowBox[{"Xs", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "sample"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Y", "=", 
      RowBox[{"Ys", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "sample"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"z", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"W", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ".", "X"}], "+", 
        RowBox[{
         RowBox[{"b", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ".", "er"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"a", ",", 
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"z", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "]"}]}], "]"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"z", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", 
               RowBox[{"#", "+", "1"}], "]"}], "]"}], ".", 
             RowBox[{"a", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"b", "[", 
              RowBox[{"[", 
               RowBox[{"#", "+", "1"}], "]"}], "]"}], ".", "er"}]}]}], 
          "]"}]}], ")"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", 
        RowBox[{"l", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"a", ",", 
       RowBox[{"\[Sigma]", "[", 
        RowBox[{"z", "[", 
         RowBox[{"[", "l", "]"}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Error", "=", 
      RowBox[{
       FractionBox["1", "2"], 
       SuperscriptBox[
        RowBox[{"Norm", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "l", "]"}], "]"}], "-", "Y"}], ",", 
          "\"\<Frobenius\>\""}], "]"}], "2"]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"minerr", ">", "Error"}], ",", 
       RowBox[{
        RowBox[{"minerr", "=", "Error"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"err", ",", "Error"}], "]"}], ";", 
        RowBox[{"minW", "=", "W"}], ";", 
        RowBox[{"minb", "=", "b"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"PrependTo", "[", 
      RowBox[{"\[Delta]", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "l", "]"}], "]"}], "-", "Y"}], ")"}], "*", 
        RowBox[{"d\[Sigma]", "[", 
         RowBox[{"z", "[", 
          RowBox[{"[", "l", "]"}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"PrependTo", "[", 
        RowBox[{"\[Delta]", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"W", "[", 
              RowBox[{"[", 
               RowBox[{"#", "+", "1"}], "]"}], "]"}], "]"}], ".", 
            RowBox[{"\[Delta]", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
          RowBox[{"d\[Sigma]", "[", 
           RowBox[{"z", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "]"}]}]}], "]"}], "&"}], "/@", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"l", "-", "1"}], ",", "1", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"W", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "-", 
          RowBox[{"\[Eta]", " ", 
           RowBox[{
            RowBox[{"\[Delta]", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ".", 
            RowBox[{"Transpose", "[", 
             RowBox[{"a", "[", 
              RowBox[{"[", 
               RowBox[{"#", "-", "1"}], "]"}], "]"}], "]"}]}]}]}]}], ")"}], 
       "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"2", ",", "l"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"W", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"W", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", 
       RowBox[{"\[Eta]", " ", 
        RowBox[{
         RowBox[{"\[Delta]", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ".", 
         RowBox[{"Transpose", "[", "X", "]"}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"b", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"b", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "-", 
          RowBox[{"\[Eta]", " ", 
           RowBox[{
            RowBox[{"\[Delta]", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ".", 
            RowBox[{"Transpose", "[", "er", "]"}]}]}]}]}], ")"}], "&"}], "/@", 
      RowBox[{"Range", "[", "l", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"z", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"\[Delta]", "=", 
      RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RegionPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"First", "@", 
     RowBox[{"First", "@", 
      RowBox[{"predict", "[", 
       RowBox[{"W", ",", "b", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "xx", "}"}], ",", 
          RowBox[{"{", "yy", "}"}], ",", 
          RowBox[{"{", 
           SuperscriptBox["xx", "2"], "}"}], ",", 
          RowBox[{"{", 
           SuperscriptBox["yy", "2"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xx", " ", "yy"}], "}"}]}], "}"}]}], "]"}]}]}], ">", 
    "0.5"}], ",", 
   RowBox[{"{", 
    RowBox[{"xx", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"yy", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7137893727619677`*^9, 3.7137893753366756`*^9}, {
   3.7137896811419783`*^9, 3.7137896989326553`*^9}, {3.713790389278661*^9, 
   3.713790389691535*^9}, {3.713790742476266*^9, 3.713790764164071*^9}, {
   3.713790805387416*^9, 3.71379081361119*^9}, {3.7137912224860992`*^9, 
   3.713791349469243*^9}, {3.71379143992117*^9, 3.7137914810281878`*^9}, {
   3.713791662676566*^9, 3.713791665726247*^9}, {3.7137917216678257`*^9, 
   3.713791766214151*^9}, {3.713791798313736*^9, 3.713791808930635*^9}, {
   3.713793089523045*^9, 3.7137930939634647`*^9}, 3.713794138758934*^9, {
   3.713795080035574*^9, 3.713795104846065*^9}, {3.713795314121316*^9, 
   3.71379531840167*^9}, {3.713795367513566*^9, 3.713795375780896*^9}, {
   3.713795436554749*^9, 3.713795466110898*^9}, 3.71379560940066*^9, {
   3.713795749337784*^9, 3.713795775372192*^9}, 3.7137961450638933`*^9, 
   3.713796249765913*^9, 3.713796305850995*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[{
    Map[MatrixPlot[#]& , $CellContext`W], $CellContext`iterMax, \
$CellContext`minerr}, StandardForm],
  ImageSizeCache->{731., {96., 100.}}]], "Output",
 CellChangeTimes->{
  3.713790815717785*^9, 3.713790936388936*^9, 3.713791080818347*^9, {
   3.713791130802298*^9, 3.7137911398964367`*^9}, {3.713791195237335*^9, 
   3.713791350335606*^9}, 3.7137915034666157`*^9, 3.713791587117092*^9, 
   3.7137916317570133`*^9, 3.713791672495844*^9, 3.713791784666979*^9, 
   3.7137918346822643`*^9, 3.7137918869997*^9, 3.713791931767662*^9, 
   3.713792053717417*^9, 3.713792111799137*^9, 3.7137929671867733`*^9, 
   3.7137930047040167`*^9, 3.713793154956156*^9, 3.713793191911346*^9, 
   3.713793248978458*^9, 3.713793289147073*^9, 3.713794020468162*^9, 
   3.713794055924912*^9, 3.713794122558614*^9, 3.713794166038127*^9, 
   3.71379438301471*^9, 3.713795084341042*^9, 3.713795117855548*^9, 
   3.71379518800091*^9, 3.71379522408574*^9, 3.713795332855762*^9, 
   3.713795405610359*^9, 3.713795472174008*^9, 3.713795509496963*^9, 
   3.713795558269342*^9, 3.7137956099302883`*^9, 3.713795838078526*^9, {
   3.713796145920608*^9, 3.71379616943274*^9}, {3.713796204842833*^9, 
   3.713796250256456*^9}, {3.713796306757722*^9, 3.713796327563417*^9}, 
   3.7137963579495173`*^9, {3.713796393686681*^9, 3.713796415960622*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   RegionPlot[First[
      First[
       $CellContext`predict[$CellContext`minW, $CellContext`minb, \
{{$CellContext`xx}, {$CellContext`yy}, {$CellContext`xx^2}, \
{$CellContext`yy^2}, {$CellContext`xx $CellContext`yy}}]]] > 
    0.5, {$CellContext`xx, -10, 10}, {$CellContext`yy, -10, 10}], 
   StandardForm],
  ImageSizeCache->{360., {176., 181.}}]], "Output",
 CellChangeTimes->{
  3.713790815717785*^9, 3.713790936388936*^9, 3.713791080818347*^9, {
   3.713791130802298*^9, 3.7137911398964367`*^9}, {3.713791195237335*^9, 
   3.713791350335606*^9}, 3.7137915034666157`*^9, 3.713791587117092*^9, 
   3.7137916317570133`*^9, 3.713791672495844*^9, 3.713791784666979*^9, 
   3.7137918346822643`*^9, 3.7137918869997*^9, 3.713791931767662*^9, 
   3.713792053717417*^9, 3.713792111799137*^9, 3.7137929671867733`*^9, 
   3.7137930047040167`*^9, 3.713793154956156*^9, 3.713793191911346*^9, 
   3.713793248978458*^9, 3.713793289147073*^9, 3.713794020468162*^9, 
   3.713794055924912*^9, 3.713794122558614*^9, 3.713794166038127*^9, 
   3.71379438301471*^9, 3.713795084341042*^9, 3.713795117855548*^9, 
   3.71379518800091*^9, 3.71379522408574*^9, 3.713795332855762*^9, 
   3.713795405610359*^9, 3.713795472174008*^9, 3.713795509496963*^9, 
   3.713795558269342*^9, 3.7137956099302883`*^9, 3.713795838078526*^9, {
   3.713796145920608*^9, 3.71379616943274*^9}, {3.713796204842833*^9, 
   3.713796250256456*^9}, {3.713796306757722*^9, 3.713796327563417*^9}, 
   3.7137963579495173`*^9, {3.713796393686681*^9, 3.7137964160093117`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
arX8sXNKFPt/odE3zg==
   "], {{
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
8A==
         "]], PolygonBox[CompressedData["
1:eJwtledvV2UYhs95IBAMgRDQEAUiKigjBSoCIlNBAQGljSirpWUpZQcRGSIg
s0BFC7XsSh0QVsCBUoYh7BjD+gv8oiGKCggqEK879/lw5Vzv75zfGe/7PPfb
snh63rRIkmQB1Ib/0iT5HV6DIljKycXQFV8BnfAhUIL3h2V4Q3gWnwSj8JEw
A58JzfCLcBhvB+V4E+iLj4YK/CF4AS+ApngxzMbXQorPhaX4B9AGvwIX8B6w
AK8NHfBXoC9eF3LxPHgS/xEOpf6G7XgVrMMHwli8CGbhffRMvAxW473hVzjH
eDfHyczPo/h52Mu4I9yGoYyncBwEe/Dh4XMf6Z66Fj7Gx0MH/KreCe8HzfGz
8AXeHp7Bh8FUfAcsxBfBMrwzfKlrw9cOgSfwr6EC/wQ+xT+HD/GXoQv+k67B
B0AdfD+U4xPggfCaa627QHfGz4XnMgd+hjOMqzm+zvf/wnF+eC1GMx6E38TH
aH7gM8b/cByc+h12hOdIc6M5b8v4EtTge/n/PY43VDep1+C67huunXLOd8Qv
wwnGJxn/xvEC4wMcSxnf5fgHDIdiOMi5xyAfnwhf4c+HfUPq2jgcnivVSD+8
f/jbV3O/FnhPGKd1hV5477CXcL4zfhK2M77E+FX8juoo9Zp1ZdwtXFtXON8g
/I56N/VIy3BNqBaGwV/wIuM39SxojdcP95J6cEC45lXrb2le8VscC1P34J/w
UvjcG9lcak0mZ3OqXnkqPNfqGdXiv1ltqib1rbtgfepvnqR3gXm6X+K1zGM8
LVvT/HBNqZb02xz8HWWEnsf18/B3w66eLdG7hO+1kPHb6m1lROL/bNJahHth
jZ6Jjwj3rnp6Bj5dv3H9IsYz1ath1z2mqFfC99Y1E8M1q1qdz/EHxveztZqj
mmechM/pG1fgY6A7vjKrpeVhV00py+rB8tSZ9h2+JJyFlfB+uCZVi7pGtaEe
Vu+qRhqr9/W9qTNvfThjlC2lUIAXhtdO7/AgvjGcjcrENfgq1SS+Chopm8K1
ot++x0vD5zbBAXxfuLbU4yfwzXCR99uaOluPwZbUGava3cm4LKvh6nCGKDvK
strUN+tbVaNb8W0wF7+cuPcrw2unDNCztoTnWs/MDWf62qxmv8W/CfeaMktZ
ei3rLWXqe+GeVa8q83aHM09Zpxp9HD8Uzq78LAtahbNRmaCsrhXOLmW2sl+Z
oizRHnA63KPqzSrG4/FTYdc3HQ3vSdqLNkN7/Eh4rbSGyvqa8Dll/nH86fDc
ak6VlQ+H9zplpva+R8J7h/ZAZb0yVNmpzFc2/53NpTJ6XXhNtZbag5R92nO1
1yoDlZ3twnuVMlR7SU44G7Wn/A9Au/VZ
         "]]}]}, {}, {}, {}, {}}, 
    {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwt0DtOAgEABNB1FRFBRUDkoyB+EDgDHMEEPYLRVgKtlNpiiZ2U0EqLPVxB
76BX4G1i8ZKpJpmp3ffunjaCILghJMpHNOlwyyMDhrzyxjsTZsz5YsUPf2wq
OqZAkRJlTjilQpUzapxzwSVX1LmmQZMWeUJ+9X+zZMEnUz4YM+KFZ/o80KVN
gxxZMhyS5oB99kiRZJcEO8TZJsZWtO//rzXw0Rea
      "]], LineBox[CompressedData["
1:eJwl01NzHFAAhuFNattMbds2U7tNraS2bdu2bdv8BbWVms9ML555z3xnz+7V
hoRFhIYHBQKBSNIGBwJ3SUMZXri4qlEoRWle2kZoVJrRnBa8tlfUGBwhCwc5
zCEq05gqVCUOd4jNT2/fcsM5G3GZSAImEJ9f7t8zyXkybWhLOz7Yq2sNcvKA
HNQkF/fITWLa04Hf3nyilnOkLtVlLCEF+XlIPmpTgPsUpC51+OzdLS1ESsI4
xWkKc4blrKAjZ/njzTmtTxHOU5SGNOCb+/W6gXVsYiPf7aHaiGLc5ovtLxec
V7KKTlzkEsUpQSpWs5Y1fPWmnp7gJItJzkKSsYi8LCAp80jCfPJwnDnMZSaz
mcUxpjODqSRkComYxke/W02PMo7xjCUe2bnJO59pra1oSSzG8MZ+XbMSk5GM
ZhQHqMQ+MrGXzOwnOrvZwy5CqMBOfvjOHdqUaGTkGq/s5bQ8GdhOesqylW1s
YTNNCCYdV3ju7XANYgjDGMoz+yAdTH8GMoCn9r7aj3D6EMETey/tTXd60oPH
9q7ajc4E6MIj+2VNTcng///lfxN6eOM=
      "]]}}],
  AspectRatio->1,
  Frame->True,
  Method->{"TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-10, 10}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.713790815717785*^9, 3.713790936388936*^9, 3.713791080818347*^9, {
   3.713791130802298*^9, 3.7137911398964367`*^9}, {3.713791195237335*^9, 
   3.713791350335606*^9}, 3.7137915034666157`*^9, 3.713791587117092*^9, 
   3.7137916317570133`*^9, 3.713791672495844*^9, 3.713791784666979*^9, 
   3.7137918346822643`*^9, 3.7137918869997*^9, 3.713791931767662*^9, 
   3.713792053717417*^9, 3.713792111799137*^9, 3.7137929671867733`*^9, 
   3.7137930047040167`*^9, 3.713793154956156*^9, 3.713793191911346*^9, 
   3.713793248978458*^9, 3.713793289147073*^9, 3.713794020468162*^9, 
   3.713794055924912*^9, 3.713794122558614*^9, 3.713794166038127*^9, 
   3.71379438301471*^9, 3.713795084341042*^9, 3.713795117855548*^9, 
   3.71379518800091*^9, 3.71379522408574*^9, 3.713795332855762*^9, 
   3.713795405610359*^9, 3.713795472174008*^9, 3.713795509496963*^9, 
   3.713795558269342*^9, 3.7137956099302883`*^9, 3.713795838078526*^9, {
   3.713796145920608*^9, 3.71379616943274*^9}, {3.713796204842833*^9, 
   3.713796250256456*^9}, {3.713796306757722*^9, 3.713796327563417*^9}, 
   3.7137963579495173`*^9, 3.713796393686681*^9, 3.713796446830031*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Boole", "[", 
          RowBox[{"#", ">", "0.5"}], "]"}], "&"}], "/@", 
        RowBox[{
         RowBox[{"predict", "[", 
          RowBox[{"W", ",", "b", ",", "Xs"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"Ys", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Boole", "[", 
          RowBox[{"#", ">", "0.5"}], "]"}], "&"}], "/@", 
        RowBox[{
         RowBox[{"predict", "[", 
          RowBox[{"minW", ",", "minb", ",", "Xs"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"Ys", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "err", "]"}]}], "Input",
 CellChangeTimes->{{3.7137894549691353`*^9, 3.713789465359415*^9}, {
   3.713789736768011*^9, 3.7137898035411787`*^9}, {3.7137899449031076`*^9, 
   3.71378996632535*^9}, 3.713790372364986*^9, {3.713791874959291*^9, 
   3.713791875943025*^9}, {3.7137954857834167`*^9, 3.7137955012483683`*^9}}],

Cell[BoxData["200"], "Output",
 CellChangeTimes->{
  3.713789466278001*^9, {3.713789727119383*^9, 3.713789804884068*^9}, {
   3.71378993201262*^9, 3.713789967177992*^9}, {3.713790365968617*^9, 
   3.713790373162856*^9}, {3.713790407888061*^9, 3.713790432775002*^9}, 
   3.713790580656177*^9, 3.713790617062179*^9, 3.713790668168989*^9, 
   3.7137907098141747`*^9, 3.713790800865349*^9, 3.713790964571505*^9, 
   3.713791572883253*^9, 3.713791625860043*^9, 3.713791709955255*^9, {
   3.713791866782249*^9, 3.713791878919065*^9}, 3.713791922053687*^9, 
   3.7137920850723457`*^9, 3.713792142711452*^9, 3.713792998642063*^9, 
   3.713793061733223*^9, 3.713793186371853*^9, 3.7137932439839773`*^9, 
   3.713793284319227*^9, 3.71379405266966*^9, 3.7137940938462973`*^9, 
   3.713794369479269*^9, 3.71379465309017*^9, 3.713795502396695*^9, {
   3.713795540971636*^9, 3.7137955551480103`*^9}, 3.7137955867008467`*^9, 
   3.7137958314661417`*^9, 3.713796111082662*^9, {3.713796163291712*^9, 
   3.713796185863722*^9}, 3.7137962240042963`*^9, 3.713796389025413*^9, 
   3.713796447784773*^9}],

Cell[BoxData["200"], "Output",
 CellChangeTimes->{
  3.713789466278001*^9, {3.713789727119383*^9, 3.713789804884068*^9}, {
   3.71378993201262*^9, 3.713789967177992*^9}, {3.713790365968617*^9, 
   3.713790373162856*^9}, {3.713790407888061*^9, 3.713790432775002*^9}, 
   3.713790580656177*^9, 3.713790617062179*^9, 3.713790668168989*^9, 
   3.7137907098141747`*^9, 3.713790800865349*^9, 3.713790964571505*^9, 
   3.713791572883253*^9, 3.713791625860043*^9, 3.713791709955255*^9, {
   3.713791866782249*^9, 3.713791878919065*^9}, 3.713791922053687*^9, 
   3.7137920850723457`*^9, 3.713792142711452*^9, 3.713792998642063*^9, 
   3.713793061733223*^9, 3.713793186371853*^9, 3.7137932439839773`*^9, 
   3.713793284319227*^9, 3.71379405266966*^9, 3.7137940938462973`*^9, 
   3.713794369479269*^9, 3.71379465309017*^9, 3.713795502396695*^9, {
   3.713795540971636*^9, 3.7137955551480103`*^9}, 3.7137955867008467`*^9, 
   3.7137958314661417`*^9, 3.713796111082662*^9, {3.713796163291712*^9, 
   3.713796185863722*^9}, 3.7137962240042963`*^9, 3.713796389025413*^9, 
   3.713796447786787*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJw1yw0s1HEcx/Erklb0hGWVIhmW83CFC93H48njXySt0jrSw9RZyxlh0rTb
riI9UEYPrkmnEj245GEiGurIQ0V1zFMdaiWa9Tzf/2/77bfX9/37morEW/bO
5nA43v/u/3fmfBEkd6QMlKjGBTSAcoH24rUrWevCf3n7ZKFmjLwIjFV2+crw
UbIBct5WNcTOY70M6sHTBTfLNOQVULeabHW88Ym8GucdTLYlXGRthsayddxD
nSNkcxSuaBvu2M3aAtUFfKlW5TDZEvwN0meHLVlbI2Cu7NXv7CHyOhirwtXS
lgEyF4ZBjPy+jLUdxnn93M5E1vbgFXXny51YOyApXsyLP9dH5uH7qrkxo9xe
8nrUX8+LiFf1kDcg7meNUGfBW7IjLrpZPTca7CI7wSCOCU3u6SQ7w3JkUq7T
3UHmoyTiwvXMRtYbIeqdE3Prq4rsAsm9ML+Pzqxd0WAzdlTW95LshvTb00xT
MutNCC+NM9FLYC2A7uX8UxrHVjLgX762ri2sZcZpwAnh2KNPRs3U3ZE5+k5w
Bw3U3ZHwo8RUR1lP3QMPU88Na6XUUfeAd+VhzmsBmeOJvFh+VNWRGuqekGVF
ShQnqql7wdZ3OszTopK6Fzwj8y+JCx5T90ZFV+7OqAxymjemllpLJqaU1H3Q
uP94cKy4groP+BaiF/3lD6gLseSRVHebcRl1IUTWr607Qu9S90WtR8uVof0K
6r4wU3jYLuSTOZshCXLN068vpr4Z22UT5uYfr1L3w2fleom28RXqfmA031Ct
d4G6PwIGI9Myqs9T94edMlX45MNZ6gH41cVLqORlUQ+A+k9LjnDVGeqByHqa
e222zmnqgbCf2tHcrCulHoShUxWlKq906kHoH/c9GK0+Rj0Y8y/HyBUqclow
TtqoTKbdEqkz4Bx6k+QziwwGGkfDmKpGMf1nsCsppcmliFzLYJ9DoWlN+wHa
D0F+dOKavPdRtB+C4mH9361mewR/AXW4Qgs=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 69.}, {0, 0.9629730665898388}},
  PlotRangeClipping->True,
  PlotRangePadding->{{1.3800000000000001`, 1.3800000000000001`}, {
   0.019259461331796776`, 0.019259461331796776`}}]], "Output",
 CellChangeTimes->{
  3.713789466278001*^9, {3.713789727119383*^9, 3.713789804884068*^9}, {
   3.71378993201262*^9, 3.713789967177992*^9}, {3.713790365968617*^9, 
   3.713790373162856*^9}, {3.713790407888061*^9, 3.713790432775002*^9}, 
   3.713790580656177*^9, 3.713790617062179*^9, 3.713790668168989*^9, 
   3.7137907098141747`*^9, 3.713790800865349*^9, 3.713790964571505*^9, 
   3.713791572883253*^9, 3.713791625860043*^9, 3.713791709955255*^9, {
   3.713791866782249*^9, 3.713791878919065*^9}, 3.713791922053687*^9, 
   3.7137920850723457`*^9, 3.713792142711452*^9, 3.713792998642063*^9, 
   3.713793061733223*^9, 3.713793186371853*^9, 3.7137932439839773`*^9, 
   3.713793284319227*^9, 3.71379405266966*^9, 3.7137940938462973`*^9, 
   3.713794369479269*^9, 3.71379465309017*^9, 3.713795502396695*^9, {
   3.713795540971636*^9, 3.7137955551480103`*^9}, 3.7137955867008467`*^9, 
   3.7137958314661417`*^9, 3.713796111082662*^9, {3.713796163291712*^9, 
   3.713796185863722*^9}, 3.7137962240042963`*^9, 3.713796389025413*^9, 
   3.713796447835208*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"alldata", "=", 
   RowBox[{"SplitBy", "[", 
    RowBox[{
     RowBox[{"SortBy", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", 
                RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", "y1"}], "}"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", 
                RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", "y2"}], "}"}], 
           "]"}]}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "&"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713793321521349*^9, 3.7137936187704887`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"alldata", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Green"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.713793694146935*^9, 3.713793702598897*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[1, 0, 0], PointBox[CompressedData["
1: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
wAYK
      "]]}, 
    {RGBColor[0, 1, 0], PointBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  ImageSize->{364., Automatic},
  Method->{},
  PlotRange->{{-8.892097701904385, 8.894662360170019}, {-8.761386765067702, 
   8.939374612394987}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.35573520124148805`, 0.35573520124148805`}, {
   0.3540152275492538, 0.3540152275492538}}]], "Output",
 CellChangeTimes->{3.7137937042129707`*^9, 3.713794105370646*^9, 
  3.713794664076157*^9, 3.713796456720881*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1043},
WindowMargins->{{-1, Automatic}, {Automatic, -1}},
FrontEndVersion->"9.0 for Linux x86 (64-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 123, 1, 80, "Section"],
Cell[705, 25, 764, 24, 129, "Input"],
Cell[1472, 51, 12603, 325, 670, "Input"],
Cell[14078, 378, 2472, 74, 165, "Input"],
Cell[CellGroupData[{
Cell[16575, 456, 151, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[16751, 462, 1498, 44, 121, "Input"],
Cell[18252, 508, 732, 16, 32, "Output"],
Cell[18987, 526, 39074, 645, 234, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58122, 1178, 95, 1, 80, "Section"],
Cell[58220, 1181, 739, 24, 55, "Input"],
Cell[58962, 1207, 4008, 116, 150, "Input"],
Cell[62973, 1325, 4793, 151, 253, "Input"],
Cell[CellGroupData[{
Cell[67791, 1480, 8958, 251, 569, "Input"],
Cell[76752, 1733, 1350, 21, 213, "Output"],
Cell[78105, 1756, 1560, 26, 372, "Output"],
Cell[79668, 1784, 16274, 274, 372, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95979, 2063, 1806, 51, 77, "Input"],
Cell[97788, 2116, 1082, 16, 32, "Output"],
Cell[98873, 2134, 1082, 16, 32, "Output"],
Cell[99958, 2152, 2544, 45, 242, "Output"]
}, Open  ]],
Cell[102517, 2200, 1243, 37, 32, "Input"],
Cell[CellGroupData[{
Cell[103785, 2241, 423, 11, 32, "Input"],
Cell[104211, 2254, 5057, 91, 379, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
